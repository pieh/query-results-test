{
  "path": "/docs/visual-testing-with-storybook/",
  "result": {
    "data": {
      "mdx": {
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Visual Testing with Storybook\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Knowing your components look as intended in every permutation is not only a great way to test them visually, but also provides \\u201Cliving documentation\\u201D for them. This makes it easier for teams to:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"know what components are available to them in a given project and\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"what props those components accept and what all of the states of that component are.\")), mdx(\"p\", null, \"As your project grows over time having this information available will be invaluable. This is the function of the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://storybook.js.org/\"\n  }), \"Storybook\"), \" library. Storybook is a UI development environment for your UI components. With it, you can visualize different states of your UI components and develop them interactively.\"), mdx(\"h2\", {\n    \"id\": \"setting-up-your-environment\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#setting-up-your-environment\",\n    \"aria-label\": \"setting up your environment permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Setting up your environment\"), mdx(\"p\", null, \"To set up Storybook you need to install dependencies and do some custom configuration. First, install the Storybook CLI.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"npm install -g @storybook/cli\\n\")), mdx(\"p\", null, \"Once the CLI is installed, the next step is to run the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sb init\"), \" command that is now available from the root directory of your Gatsby project.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"cd my-awesome-gatsby-project\\nsb init\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Note that if you\\u2019re running a recent version of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm\"), \" (5.2.0+) you can run the following single command instead: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npx -p @storybook/cli sb init\"), \", which is the recommended method by Storybook. This doesn\\u2019t install the CLI on your machine, thereby ensuring you\\u2019re always running the latest version of the CLI.\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sb init\"), \" command bootstraps the basic config necessary to run Storybook for a React project. However, since this is for a Gatsby project, you need to update the default Storybook configuration a bit so you don\\u2019t get errors when trying to use Gatsby specific components inside of the stories.\"), mdx(\"p\", null, \"To update your Storybook config open \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".storybook/config.js\"), \" and modify the content as follows:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js:title=.storybook/config.js\"\n  }), \"import { configure } from \\\"@storybook/react\\\"\\nimport { action } from \\\"@storybook/addon-actions\\\"\\n\\n// automatically import all files ending in *.stories.js\\n// highlight-next-line\\nconst req = require.context(\\\"../src\\\", true, /.stories.js$/)\\nfunction loadStories() {\\n  req.keys().forEach(filename => req(filename))\\n}\\n\\n// highlight-start\\n// Gatsby's Link overrides:\\n// Gatsby defines a global called ___loader to prevent its method calls from creating console errors you override it here\\nglobal.___loader = {\\n  enqueue: () => {},\\n  hovering: () => {},\\n}\\n\\n// Gatsby internal mocking to prevent unnecessary errors in storybook testing environment\\nglobal.__PATH_PREFIX__ = \\\"\\\"\\n\\n// This is to utilized to override the window.___navigate method Gatsby defines and uses to report what path a Link would be taking us to if it wasn't inside a storybook\\nwindow.___navigate = pathname => {\\n  action(\\\"NavigateTo:\\\")(pathname)\\n}\\n\\nconfigure(loadStories, module)\\n// highlight-end\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"You can remove the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"stories\"), \" folder from the root of your project, or move it inside your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src\"), \" folder\")), mdx(\"p\", null, \"Next make some adjustments to Storybook\\u2019s default \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"webpack\"), \" configuration so you can transpile Gatsby source files, and to ensure you have the necessary \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"babel\"), \" plugins to transpile Gatsby components.\"), mdx(\"p\", null, \"Create a new file called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"webpack.config.js\"), \" in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".storybook\"), \" folder created by the Storybook CLI. Then place the following code in that file (depending on which version of Storybook you\\u2019re using):\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"For Storybook v5:\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js:title=.storybook/webpack.config.js\"\n  }), \"module.exports = ({ config }) => {\\n  // Transpile Gatsby module because Gatsby includes un-transpiled ES6 code.\\n  config.module.rules[0].exclude = [/node_modules\\\\/(?!(gatsby)\\\\/)/]\\n\\n  // use installed babel-loader which is v8.0-beta (which is meant to work with @babel/core@7)\\n  config.module.rules[0].use[0].loader = require.resolve(\\\"babel-loader\\\")\\n\\n  // use @babel/preset-react for JSX and env (instead of staged presets)\\n  config.module.rules[0].use[0].options.presets = [\\n    require.resolve(\\\"@babel/preset-react\\\"),\\n    require.resolve(\\\"@babel/preset-env\\\"),\\n  ]\\n\\n  config.module.rules[0].use[0].options.plugins = [\\n    // use @babel/plugin-proposal-class-properties for class arrow functions\\n    require.resolve(\\\"@babel/plugin-proposal-class-properties\\\"),\\n    // use babel-plugin-remove-graphql-queries to remove static queries from components when rendering in storybook\\n    require.resolve(\\\"babel-plugin-remove-graphql-queries\\\"),\\n  ]\\n\\n  // Prefer Gatsby ES6 entrypoint (module) over commonjs (main) entrypoint\\n  config.resolve.mainFields = [\\\"browser\\\", \\\"module\\\", \\\"main\\\"]\\n\\n  return config\\n}\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Note that if you\\u2019re using a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/static-query/\"\n  }), \"StaticQuery\"), \" in your components, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"babel-plugin-remove-graphql-queries\"), \" is required to render them in Storybook. This is because the queries are run at build time in Gatsby, and will not have been run when rendering the components directly.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"When using TypeScript, add this rule:\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff:title=.storybook/webpack.config.js\"\n  }), \"// Prefer Gatsby ES6 entrypoint (module) over commonjs (main) entrypoint\\nconfig.resolve.mainFields = [\\\"browser\\\", \\\"module\\\", \\\"main\\\"]\\n+\\n+   config.module.rules.push({\\n+     test: /\\\\.(ts|tsx)$/,\\n+     loader: require.resolve('babel-loader'),\\n+     options: {\\n+       presets: [['react-app', {flow: false, typescript: true}]],\\n+       plugins: [\\n+         require.resolve('@babel/plugin-proposal-class-properties'),\\n+         // use babel-plugin-remove-graphql-queries to remove static queries from components when rendering in storybook\\n+         require.resolve('babel-plugin-remove-graphql-queries'),\\n+       ],\\n+     },\\n+   });\\n+\\n+   config.resolve.extensions.push('.ts', '.tsx');\\n+\\nreturn config\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"For Storybook v4:\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js:title=.storybook/webpack.config.js\"\n  }), \"module.exports = (baseConfig, env, defaultConfig) => {\\n  // Transpile Gatsby module because Gatsby includes un-transpiled ES6 code.\\n  defaultConfig.module.rules[0].exclude = [/node_modules\\\\/(?!(gatsby)\\\\/)/]\\n\\n  // use installed babel-loader which is v8.0-beta (which is meant to work with @babel/core@7)\\n  defaultConfig.module.rules[0].use[0].loader = require.resolve(\\\"babel-loader\\\")\\n\\n  // use @babel/preset-react for JSX and env (instead of staged presets)\\n  defaultConfig.module.rules[0].use[0].options.presets = [\\n    require.resolve(\\\"@babel/preset-react\\\"),\\n    require.resolve(\\\"@babel/preset-env\\\"),\\n  ]\\n\\n  defaultConfig.module.rules[0].use[0].options.plugins = [\\n    // use @babel/plugin-proposal-class-properties for class arrow functions\\n    require.resolve(\\\"@babel/plugin-proposal-class-properties\\\"),\\n    // use babel-plugin-remove-graphql-queries to remove static queries from components when rendering in storybook\\n    require.resolve(\\\"babel-plugin-remove-graphql-queries\\\"),\\n  ]\\n\\n  // Prefer Gatsby ES6 entrypoint (module) over commonjs (main) entrypoint\\n  defaultConfig.resolve.mainFields = [\\\"browser\\\", \\\"module\\\", \\\"main\\\"]\\n\\n  return defaultConfig\\n}\\n\")), mdx(\"p\", null, \"Once you have this configured you should run Storybook to ensure it can start up properly and you can see the default stories installed by the CLI. To run storybook:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"npm run storybook\\n\")), mdx(\"p\", null, \"Storybook CLI adds this command to your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"package.json\"), \" for you so you shouldn\\u2019t have to anything other than run the command. If Storybook builds successfully you should be able to navigate to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://localhost:6006\"), \" and see the default stories supplied by the Storybook CLI.\"), mdx(\"p\", null, \"However, if you use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"StaticQuery\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useStaticQuery\"), \" in your project Storybook needs to be run with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NODE_ENV\"), \" set to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"production\"), \" (as Storybook sets this by default to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"development\"), \"). Otherwise \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"babel-plugin-remove-graphql-queries\"), \" won\\u2019t be run. Moreover Storybook needs to know about \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://storybook.js.org/docs/configurations/serving-static-files/#2-via-a-directory\"\n  }), \"static files\"), \" generated by Gatsby\\u2019s \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"StaticQuery\"), \". Your scripts should look like:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json:title=package.json\"\n  }), \"{\\n  \\\"scripts\\\": {\\n    \\\"storybook\\\": \\\"NODE_ENV=production start-storybook -s public\\\",\\n    \\\"build-storybook\\\": \\\"NODE_ENV=production build-storybook -s public\\\"\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"writing-stories\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#writing-stories\",\n    \"aria-label\": \"writing stories permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Writing stories\"), mdx(\"p\", null, \"A full guide to writing stories is beyond the scope of this guide, but we\\u2019ll take a look at creating a story.\"), mdx(\"p\", null, \"First, create the story file. Storybook looks for all files with a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".stories.js\"), \" extension and loads them into Storybook for you. Generally you will want your stories near where the component is defined, however since this is Gatsby, if you want stories for your pages, you will have to create those files outside of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pages\"), \" directory.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"A good solution is to create a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"__stories__\"), \" directory next to your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pages\"), \" directory and put any page stories in there.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx:title=src/components/example.stories.js\"\n  }), \"import React from \\\"react\\\"\\nimport { storiesOf } from \\\"@storybook/react\\\"\\n\\nstoriesOf(`Dashboard/Header`, module).add(`default`, () => (\\n  <div style={{ padding: `16px`, backgroundColor: `#eeeeee` }}>\\n    <h1 style={{ color: \\\"rebeccapurple\\\" }}>Hello from Storybook and Gatsby!</h1>\\n  </div>\\n))\\n\")), mdx(\"p\", null, \"This is a very simple story without much going on, but honestly, nothing else really changes as related to Gatsby. If you want to learn more about how Storybook works and what you can do with it, check out some of the resources listed below.\"), mdx(\"h2\", {\n    \"id\": \"other-resources\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#other-resources\",\n    \"aria-label\": \"other resources permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Other resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For more information on Storybook, visit\\n\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://storybook.js.org/\"\n  }), \"the Storybook site\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Get started with a \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/Mathspy/gatsby-storybook-jest-starter\"\n  }), \"Jest and Storybook starter\"))));\n}\n;\nMDXContent.isMDXComponent = true;",
        "excerpt": "Knowing your components look as intended in every permutation is not only a great way to test them visually, but also provides \"living…",
        "timeToRead": 2,
        "tableOfContents": {
          "items": [
            {
              "url": "#setting-up-your-environment",
              "title": "Setting up your environment"
            },
            {
              "url": "#writing-stories",
              "title": "Writing stories"
            },
            {
              "url": "#other-resources",
              "title": "Other resources"
            }
          ]
        },
        "fields": {
          "slug": "/docs/visual-testing-with-storybook/",
          "anchor": "visual-testing-with-storybook"
        },
        "frontmatter": {
          "title": "Visual Testing with Storybook",
          "overview": null,
          "issue": null,
          "disableTableOfContents": null,
          "tableOfContentsDepth": null
        },
        "parent": {
          "__typename": "File",
          "relativePath": "docs/visual-testing-with-storybook.md"
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/docs/visual-testing-with-storybook/",
      "prev": {
        "title": "Testing React Components",
        "link": "/docs/testing-react-components/"
      },
      "next": {
        "title": "Debugging Gatsby",
        "link": "/docs/debugging/",
        "breadcrumbTitle": "Debugging"
      }
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsMarkdownJs2546709735(\n  $path: String!\n) {\n  mdx(fields: {slug: {eq: $path}}) {\n    body\n    excerpt\n    timeToRead\n    tableOfContents\n    fields {\n      slug\n      anchor\n    }\n    frontmatter {\n      title\n      overview\n      issue\n      disableTableOfContents\n      tableOfContentsDepth\n    }\n    ...MarkdownPageFooterMdx\n  }\n}\n\nfragment MarkdownPageFooterMdx on Mdx {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}