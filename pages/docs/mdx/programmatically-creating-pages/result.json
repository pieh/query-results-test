{
  "path": "/docs/mdx/programmatically-creating-pages/",
  "result": {
    "data": {
      "mdx": {
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Programmatically Creating Pages\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Sometimes you want to be able to programmatically access data from\\nfiles in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/pages/\"), \" or create pages using MDX content that lives at\\narbitrary locations outside of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/pages/\"), \" or in remote CMSes.\"), mdx(\"p\", null, \"For instance, let\\u2019s say you have a Gatsby website, and you want to add\\nsupport for MDX so you can start your blog. The posts will live in\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"content/posts/\"), \". You can do this with the help of\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-source-filesystem\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/node-apis/#createPages\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"createPages\")), \" in\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-node.js\"), \".\"), mdx(\"h2\", {\n    \"id\": \"source-mdx-pages-from-the-filesystem\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#source-mdx-pages-from-the-filesystem\",\n    \"aria-label\": \"source mdx pages from the filesystem permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Source MDX pages from the filesystem\"), mdx(\"p\", null, \"To let Gatsby know that you\\u2019ll be working with MDX content you need to\\nadd \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-plugin-mdx\"), \" to the plugins array in your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config.js\"), \"\\nfile.\"), mdx(\"p\", null, \"You\\u2019ll need to use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-source-filesystem\"), \" and tell it to source\\n\\u201Cposts\\u201D from a folder called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"content/posts\"), \" located in the project\\u2019s\\nroot.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NOTE\"), \": \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-plugin-mdx\"), \" uses \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".mdx\"), \" by default as a file extension to\\nrecognize which files to use. You can also \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/packages/gatsby-plugin-mdx#extensions\"\n  }), \"use \", mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \".md\"), \" as a file\\nextension\"), \" if you want.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript:title=gatsby-config.js\"\n  }), \"module.exports = {\\n  plugins: [\\n    // Add support for *.mdx files in gatsby\\n    \\\"gatsby-plugin-mdx\\\",\\n\\n    // Add a collection called \\\"posts\\\" that looks\\n    // for files in content/posts/\\n    {\\n      resolve: \\\"gatsby-source-filesystem\\\",\\n      options: {\\n        name: \\\"posts\\\",\\n        path: `${__dirname}/content/posts/`,\\n      },\\n    },\\n  ],\\n}\\n\")), mdx(\"p\", null, \"You can read about\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/packages/gatsby-source-filesystem\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"gatsby-source-filesystem\")), \"\\nif you\\u2019d like to learn more.\"), mdx(\"h2\", {\n    \"id\": \"add-mdx-files\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#add-mdx-files\",\n    \"aria-label\": \"add mdx files permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Add MDX Files\"), mdx(\"p\", null, \"Before you can write any GraphQL queries and programmatically create\\npages, you need to add some content.\"), mdx(\"p\", null, \"Make a folder called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"content/posts\"), \" and create two files in it called\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"blog-1.mdx\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"blog-2.mdx\"), \". You can do this on the command line in\\na terminal by using the following commands from the root of your\\nproject.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"mkdir -p content/posts\\ntouch content/posts/blog-{1,2}.mdx\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NOTE\"), \":\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mkdir -p path/to/a/directory\"), \" will create every folder in the path if\\nit does not exist.\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"em\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"em\"\n  }, \"touch <filename>\"), \" will create an empty file named \", mdx(\"inlineCode\", {\n    parentName: \"em\"\n  }, \"<filename>\"), \". The\\nbrackets (\", mdx(\"inlineCode\", {\n    parentName: \"em\"\n  }, \"{}\"), \") are \", mdx(\"a\", _extends({\n    parentName: \"em\"\n  }, {\n    \"href\": \"https://twitter.com/kentcdodds/status/1083399683932868609?s=19\"\n  }), \"an\\nexpansion\"), \"\\nwhich means we can create multiple files in one command.\"))), mdx(\"p\", null, \"Open up each of the files you just created and add some content.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-md:title=blog-1.mdx\"\n  }), \"---\\ntitle: \\\"Blog Post 1\\\"\\n---\\n\\nTrying out MDX\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-md:title=blog-2.mdx\"\n  }), \"---\\ntitle: \\\"Blog Post 2\\\"\\n---\\n\\nGatsby is the best\\n\")), mdx(\"h2\", {\n    \"id\": \"generate-slugs\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#generate-slugs\",\n    \"aria-label\": \"generate slugs permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Generate slugs\"), mdx(\"p\", null, \"Since MDX posts are being sourced outside of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/pages\"), \", each post\\nneeds to be given a slug which tells Gatsby the URL to render to.\"), mdx(\"p\", null, \"If you want to set the URLs in your frontmatter, you can skip this step.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript:title=gatsby-node.js\"\n  }), \"const { createFilePath } = require(\\\"gatsby-source-filesystem\\\")\\n\\nexports.onCreateNode = ({ node, actions, getNode }) => {\\n  const { createNodeField } = actions\\n\\n  // We only want to operate on `Mdx` nodes. If we had content from a\\n  // remote CMS we could also check to see if the parent node was a\\n  // `File` node here\\n  if (node.internal.type === \\\"Mdx\\\") {\\n    const value = createFilePath({ node, getNode })\\n\\n    createNodeField({\\n      // Name of the field you are adding\\n      name: \\\"slug\\\",\\n      // Individual MDX node\\n      node,\\n      // Generated value based on filepath with \\\"blog\\\" prefix. We\\n      // don't need a separating \\\"/\\\" before the value because\\n      // createFilePath returns a path with the leading \\\"/\\\".\\n      value: `/blog${value}`,\\n    })\\n  }\\n}\\n\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"value\"), \" in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"createNodeField\"), \" call is the URL we\\u2019ll use later\\nto set up our page. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/blog${value}\"), \" is a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals\"\n  }), \"template\\nstring\"), \"\\nthat will result in:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"blog-1.mdx => localhost:8000/blog/blog-1/\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"blog-2.mdx => localhost:8000/blog/blog-2/\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.gatsbyjs.org/packages/gatsby-source-filesystem/?=gatsby-source#createfilepath\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"createFilePath\")), \"\\nis a function from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-source-filesystem\"), \" that translates file\\npaths to usable URLs.\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.gatsbyjs.org/docs/node-apis/#onCreateNode\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"onCreateNode\")), \"\\nis a Gatsby lifecycle method that gets called whenever a new node is\\ncreated. In this case only \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Mdx\"), \" nodes are touched.\"), mdx(\"h2\", {\n    \"id\": \"create-pages-from-sourced-mdx-files\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#create-pages-from-sourced-mdx-files\",\n    \"aria-label\": \"create pages from sourced mdx files permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Create pages from sourced MDX files\"), mdx(\"p\", null, \"In order to create pages from the sourced MDX files, you need\\nto construct a query that finds all MDX nodes and pulls out\\nthe \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"slug\"), \" field added earlier.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NOTE\"), \": You can open up a GraphiQL console for query testing\\nin your browser at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://localhost:8000/___graphql\"\n  }), \"http://localhost:8000/___graphql\"))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"query {\\n  allMdx {\\n    edges {\\n      node {\\n        id\\n        fields {\\n          # Slug field created in the last section\\n          slug\\n        }\\n      }\\n    }\\n  }\\n}\\n\")), mdx(\"p\", null, \"If you skipped the last step and want to use frontmatter for your\\nslugs instead of the generated field, replace \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fields\"), \" with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"frontmatter\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript:title=gatsby-node.js\"\n  }), \"const path = require(\\\"path\\\")\\n\\nexports.createPages = async ({ graphql, actions, reporter }) => {\\n  // Destructure the createPage function from the actions object\\n  const { createPage } = actions\\n\\n  const result = await graphql(`\\n    query {\\n      allMdx {\\n        edges {\\n          node {\\n            id\\n            fields {\\n              slug\\n            }\\n          }\\n        }\\n      }\\n    }\\n  `)\\n\\n  if (result.errors) {\\n    reporter.panicOnBuild('\\uD83D\\uDEA8  ERROR: Loading \\\"createPages\\\" query')\\n  }\\n\\n  // Create blog post pages.\\n  const posts = result.data.allMdx.edges\\n\\n  // We'll call `createPage` for each result\\n  posts.forEach(({ node }, index) => {\\n    createPage({\\n      // This is the slug we created before\\n      // (or `node.frontmatter.slug`)\\n      path: node.fields.slug,\\n      // This component will wrap our MDX content\\n      component: path.resolve(`./src/components/posts-page-layout.js`),\\n      // We can use the values in this context in\\n      // our page layout component\\n      context: { id: node.id },\\n    })\\n  })\\n}\\n\")), mdx(\"p\", null, \"For further reading, check out the\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.gatsbyjs.org/docs/node-apis/#createPages\"\n  }), \"createPages\"), \"\\nAPI.\"), mdx(\"h2\", {\n    \"id\": \"make-a-template-for-your-posts\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#make-a-template-for-your-posts\",\n    \"aria-label\": \"make a template for your posts permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Make a template for your posts\"), mdx(\"p\", null, \"Make a file called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"posts-page-layout.js\"), \" in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/components\"), \". This component\\nwill be rendered as the template for all posts. There\\u2019s a component,\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MDXRenderer\"), \" which is used by \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-plugin-mdx\"), \" that will be used to render any\\nprogrammatically accessed MDX content.\"), mdx(\"p\", null, \"First, create a component that accepts the queried MDX data (which will be\\nadded in the next step).\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript:title=src/components/posts-page-layout.js\"\n  }), \"import React from \\\"react\\\"\\nimport { graphql } from \\\"gatsby\\\"\\nimport { MDXRenderer } from \\\"gatsby-plugin-mdx\\\"\\n\\nexport default function PageTemplate({ data: { mdx } }) {\\n  return (\\n    <div>\\n      <h1>{mdx.frontmatter.title}</h1>\\n      <MDXRenderer>{mdx.body}</MDXRenderer>\\n    </div>\\n  )\\n}\\n\")), mdx(\"p\", null, \"Then, write a query that uses \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"id\"), \" which is passed through the\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"context\"), \" object in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"createPage\"), \". GraphQL requires you to declare\\nthe type of arguments at the top of the query before they\\u2019re used.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript:title=src/components/posts-page-layout.js\"\n  }), \"export const pageQuery = graphql`\\n  query BlogPostQuery($id: String) {\\n    mdx(id: { eq: $id }) {\\n      id\\n      body\\n      frontmatter {\\n        title\\n      }\\n    }\\n  }\\n`\\n\")), mdx(\"p\", null, \"When we put the component and page query all together, the\\ncomponent should look like:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript:title=src/components/posts-page-layout.js\"\n  }), \"import React from \\\"react\\\"\\nimport { graphql } from \\\"gatsby\\\"\\nimport { MDXRenderer } from \\\"gatsby-plugin-mdx\\\"\\n\\nexport default function PageTemplate({ data: { mdx } }) {\\n  return (\\n    <div>\\n      <h1>{mdx.frontmatter.title}</h1>\\n      <MDXRenderer>{mdx.body}</MDXRenderer>\\n    </div>\\n  )\\n}\\n\\nexport const pageQuery = graphql`\\n  query BlogPostQuery($id: String) {\\n    mdx(id: { eq: $id }) {\\n      id\\n      body\\n      frontmatter {\\n        title\\n      }\\n    }\\n  }\\n`\\n\")), mdx(\"p\", null, \"That\\u2019s it, you\\u2019re done. Run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby develop\"), \" and enjoy your new MDX\\npowers.\"), mdx(\"p\", null, \"Now you have all the pieces you need to programmatically create pages\\nwith Gatsby and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-plugin-mdx\"), \". Check out our other guides to find out\\nmore about all of the cool stuff you can do with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-plugin-mdx\"), \".\"), mdx(\"h2\", {\n    \"id\": \"bonus-make-a-blog-index\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#bonus-make-a-blog-index\",\n    \"aria-label\": \"bonus make a blog index permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Bonus: Make a Blog Index\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript:title=src/pages/index.js\"\n  }), \"import React from \\\"react\\\"\\nimport { Link, graphql } from \\\"gatsby\\\"\\n\\nconst BlogIndex = ({ data }) => {\\n  const { edges: posts } = data.allMdx\\n\\n  return (\\n    <div>\\n      <h1>Awesome MDX Blog</h1>\\n\\n      <ul>\\n        {posts.map(({ node: post }) => (\\n          <li key={post.id}>\\n            <Link to={post.fields.slug}>\\n              <h2>{post.frontmatter.title}</h2>\\n            </Link>\\n            <p>{post.excerpt}</p>\\n          </li>\\n        ))}\\n      </ul>\\n    </div>\\n  )\\n}\\n\\nexport const pageQuery = graphql`\\n  query blogIndex {\\n    allMdx {\\n      edges {\\n        node {\\n          id\\n          excerpt\\n          frontmatter {\\n            title\\n          }\\n          fields {\\n            slug\\n          }\\n        }\\n      }\\n    }\\n  }\\n`\\n\\nexport default BlogIndex\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "excerpt": "Sometimes you want to be able to programmatically access data from\nfiles in  src/pages/  or create pages using MDX content that lives at…",
        "timeToRead": 2,
        "tableOfContents": {
          "items": [
            {
              "url": "#source-mdx-pages-from-the-filesystem",
              "title": "Source MDX pages from the filesystem"
            },
            {
              "url": "#add-mdx-files",
              "title": "Add MDX Files"
            },
            {
              "url": "#generate-slugs",
              "title": "Generate slugs"
            },
            {
              "url": "#create-pages-from-sourced-mdx-files",
              "title": "Create pages from sourced MDX files"
            },
            {
              "url": "#make-a-template-for-your-posts",
              "title": "Make a template for your posts"
            },
            {
              "url": "#bonus-make-a-blog-index",
              "title": "Bonus: Make a Blog Index"
            }
          ]
        },
        "fields": {
          "slug": "/docs/mdx/programmatically-creating-pages/",
          "anchor": "programmatically-creating-pages"
        },
        "frontmatter": {
          "title": "Programmatically Creating Pages",
          "overview": null,
          "issue": null,
          "disableTableOfContents": null,
          "tableOfContentsDepth": null
        },
        "parent": {
          "__typename": "File",
          "relativePath": "docs/mdx/programmatically-creating-pages.md"
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/docs/mdx/programmatically-creating-pages/",
      "prev": {
        "title": "Customizing Components",
        "link": "/docs/mdx/customizing-components/"
      },
      "next": {
        "title": "Using MDX Plugins",
        "link": "/docs/mdx/plugins/"
      }
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsMarkdownJs2546709735(\n  $path: String!\n) {\n  mdx(fields: {slug: {eq: $path}}) {\n    body\n    excerpt\n    timeToRead\n    tableOfContents\n    fields {\n      slug\n      anchor\n    }\n    frontmatter {\n      title\n      overview\n      issue\n      disableTableOfContents\n      tableOfContentsDepth\n    }\n    ...MarkdownPageFooterMdx\n  }\n}\n\nfragment MarkdownPageFooterMdx on Mdx {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}