{
  "path": "/docs/html-generation/",
  "result": {
    "data": {
      "mdx": {
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Page HTML Generation\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/production-app/\"\n  }), \"previous section\"), \", we saw how Gatsby uses webpack to build the JavaScript bundles required to take over the user experience once the first HTML page has finished loading. But how do the original HTML pages get generated?\"), mdx(\"p\", null, \"The high level process is:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create a webpack configuration for Node.js Server Side Rendering (SSR)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Build a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"render-page.js\"), \" that takes a page path and renders its HTML\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"For each page in redux, call \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"render-page.js\"))), mdx(\"h2\", {\n    \"id\": \"webpack\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#webpack\",\n    \"aria-label\": \"webpack permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Webpack\"), mdx(\"p\", null, \"For the first step, we use webpack to build an optimized Node.js bundle. The entry point for this is called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"static-entry.js\")), mdx(\"h2\", {\n    \"id\": \"static-entryjs\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#static-entryjs\",\n    \"aria-label\": \"static entryjs permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"static-entry.js\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/static-entry.js\"\n  }), \"static-entry.js\"), \" exports a function that takes a path and returns rendered HTML. Here\\u2019s what it does to create that HTML:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/docs/html-generation/#1-require-page-json-and-webpack-chunk-data-sources\"\n  }), \"Require page, json, and webpack chunk data sources\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/docs/html-generation/#2-create-html-react-container\"\n  }), \"Create HTML React Container\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/docs/html-generation/#3-load-page-and-data\"\n  }), \"Load Page and Data\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/docs/html-generation/#4-create-page-component\"\n  }), \"Create Page Component\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/docs/html-generation/#5-add-preload-link-and-script-tags\"\n  }), \"Add Preload Link and Script Tags\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/docs/html-generation/#6-inject-page-info-to-cdata\"\n  }), \"Inject Page Info to CDATA\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/docs/html-generation/#7-render-final-html-document\"\n  }), \"Render Final HTML Document\"))), mdx(\"h4\", {\n    \"id\": \"1-require-page-json-and-webpack-chunk-data-sources\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#1-require-page-json-and-webpack-chunk-data-sources\",\n    \"aria-label\": \"1 require page json and webpack chunk data sources permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"1. Require page, json, and webpack chunk data sources\"), mdx(\"p\", null, \"In order to perform the rest of the operations, we need some data sources to work off. These are:\"), mdx(\"h5\", {\n    \"id\": \"sync-requiresjs\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#sync-requiresjs\",\n    \"aria-label\": \"sync requiresjs permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"sync-requires.js\"), mdx(\"p\", null, \"Exports \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"components\"), \" which is a map of componentChunkName to require statements for the disk location of the component. See \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/write-pages/#sync-requiresjs\"\n  }), \"Write Out Pages\"), \".\"), mdx(\"h5\", {\n    \"id\": \"datajson\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#datajson\",\n    \"aria-label\": \"datajson permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"data.json\"), mdx(\"p\", null, \"Contains all the pages (with componentChunkName, jsonName, and path) and the dataPaths which map jsonName to dataPath. See \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/write-pages/#datajson\"\n  }), \"Write Out Pages\"), \" for more.\"), mdx(\"h5\", {\n    \"id\": \"webpackstatsjson\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#webpackstatsjson\",\n    \"aria-label\": \"webpackstatsjson permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"webpack.stats.json\"), mdx(\"p\", null, \"Contains a mapping from componentChunkName to the webpack chunks comprising it. See \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/how-code-splitting-works/#webpackstatsjson\"\n  }), \"Code Splitting\"), \" for more.\"), mdx(\"h5\", {\n    \"id\": \"chunk-mapjson\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#chunk-mapjson\",\n    \"aria-label\": \"chunk mapjson permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"chunk-map.json\"), mdx(\"p\", null, \"Contains a mapping from componentChunkName to their core (non-shared) chunks. See \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/how-code-splitting-works/#chunk-mapjson\"\n  }), \"Code Splitting\"), \" for more.\"), mdx(\"h4\", {\n    \"id\": \"2-create-html-react-container\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#2-create-html-react-container\",\n    \"aria-label\": \"2 create html react container permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"2. Create HTML React Container\"), mdx(\"p\", null, \"We create an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"html\"), \" React component that will eventually be rendered to a file. It will have props for each section (e.g \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"head\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"preBodyComponents\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"postBodyComponents\"), \"). This is owned by \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/default-html.js\"\n  }), \"default-html.js\"), \".\"), mdx(\"h4\", {\n    \"id\": \"3-load-page-and-data\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#3-load-page-and-data\",\n    \"aria-label\": \"3 load page and data permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"3. Load Page and Data\"), mdx(\"p\", null, \"The only input to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"static-entry.js\"), \" is a path. So we must look up the page for that path in order to find its \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"componentChunkName\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jsonName\"), \". This is achieved by simply looking up the pages array contained in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"data.json\"), \". We can then load its data by looking it up in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dataPaths\"), \".\"), mdx(\"h4\", {\n    \"id\": \"4-create-page-component\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#4-create-page-component\",\n    \"aria-label\": \"4 create page component permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"4. Create Page Component\"), mdx(\"p\", null, \"Now we\\u2019re ready to create a React component for the page (inside the Html container). This is handled by \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/static-entry.js#L123\"\n  }), \"RouteHandler\"), \". Its render will create an element from the component in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sync-requires.js\"), \".\"), mdx(\"h4\", {\n    \"id\": \"5-add-preload-link-and-script-tags\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#5-add-preload-link-and-script-tags\",\n    \"aria-label\": \"5 add preload link and script tags permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"5. Add Preload Link and Script Tags\"), mdx(\"p\", null, \"This is covered by the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/how-code-splitting-works/#construct-link-and-script-tags-for-current-page\"\n  }), \"Code Splitting\"), \" docs. We essentially create a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<link rel=\\\"preload\\\" href=\\\"component.js\\\">\"), \" in the document head, and a follow up \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<script src=\\\"component.js\\\">\"), \" at the end of the document. For each component and page JSON.\"), mdx(\"h4\", {\n    \"id\": \"6-inject-page-info-to-cdata\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#6-inject-page-info-to-cdata\",\n    \"aria-label\": \"6 inject page info to cdata permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"6. Inject Page Info to CDATA\"), mdx(\"p\", null, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/production-app/#first-load\"\n  }), \"production-app.js\"), \" needs to know the page that it\\u2019s rendering. The way we pass this information is by setting it in CDATA during HTML generation, since we know that page at this point. So we add the following to the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/static-entry.js#L325\"\n  }), \"top of the HTML document\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\"\n  }), \"/*\\n<![\\n  CDATA[ */\\n    window.page={\\n      \\\"path\\\": \\\"/blog/2.js\\\",\\n      \\\"componentChunkName\\\": \\\"component---src-blog-2-js\\\",\\n      jsonName\\\": \\\"blog-2-995\\\"\\n    };\\n    window.dataPath=\\\"621/path---blog-2-995-a74-dwfQIanOJGe2gi27a9CLKHjamc\\\";\\n  */ ]\\n]>\\n*/\\n\")), mdx(\"h4\", {\n    \"id\": \"7-render-final-html-document\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#7-render-final-html-document\",\n    \"aria-label\": \"7 render final html document permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"7. Render Final HTML Document\"), mdx(\"p\", null, \"Finally, we call \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reactjs.org/docs/react-dom.html\"\n  }), \"react-dom\"), \" and render our top level Html component to a string and return it.\"), mdx(\"h2\", {\n    \"id\": \"build-htmljs\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#build-htmljs\",\n    \"aria-label\": \"build htmljs permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"build-html.js\"), mdx(\"p\", null, \"So, we\\u2019ve built the means to generate HTML for a page. This webpack bundle is saved to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"public/render-page.js\"), \". Next, we need to use it to generate HTML for all the site\\u2019s pages.\"), mdx(\"p\", null, \"Page HTML does not depend on other pages. So we can perform this step in parallel. We use the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/facebook/jest/tree/master/packages/jest-worker\"\n  }), \"jest-worker\"), \" library to make this easier. By default, the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/utils/html-renderer-queue.js\"\n  }), \"html-renderer-queue.js\"), \" creates a pool of workers equal to the number of physical cores on your machine. You can configure the number of pools by passing an optional environment variable, \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/multi-core-builds\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"GATSBY_CPU_COUNT\")), \". It then partitions the pages into groups and sends them to the workers, which run \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/utils/worker.js\"\n  }), \"worker.js\"), \".\"), mdx(\"p\", null, \"The workers simply iterate over each page in their partition, and call the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"render-page.js\"), \" with the page. It then saves the html for the page\\u2019s path in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/public\"), \".\"), mdx(\"p\", null, \"Once all workers have finished, we\\u2019re done!\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "excerpt": "In the  previous section , we saw how Gatsby uses webpack to build the JavaScript bundles required to take over the user experience once the…",
        "timeToRead": 2,
        "tableOfContents": {
          "items": [
            {
              "url": "#webpack",
              "title": "Webpack"
            },
            {
              "url": "#static-entryjs",
              "title": "static-entry.js",
              "items": [
                {
                  "items": [
                    {
                      "url": "#1-require-page-json-and-webpack-chunk-data-sources",
                      "title": "1. Require page, json, and webpack chunk data sources",
                      "items": [
                        {
                          "url": "#sync-requiresjs",
                          "title": "sync-requires.js"
                        },
                        {
                          "url": "#datajson",
                          "title": "data.json"
                        },
                        {
                          "url": "#webpackstatsjson",
                          "title": "webpack.stats.json"
                        },
                        {
                          "url": "#chunk-mapjson",
                          "title": "chunk-map.json"
                        }
                      ]
                    },
                    {
                      "url": "#2-create-html-react-container",
                      "title": "2. Create HTML React Container"
                    },
                    {
                      "url": "#3-load-page-and-data",
                      "title": "3. Load Page and Data"
                    },
                    {
                      "url": "#4-create-page-component",
                      "title": "4. Create Page Component"
                    },
                    {
                      "url": "#5-add-preload-link-and-script-tags",
                      "title": "5. Add Preload Link and Script Tags"
                    },
                    {
                      "url": "#6-inject-page-info-to-cdata",
                      "title": "6. Inject Page Info to CDATA"
                    },
                    {
                      "url": "#7-render-final-html-document",
                      "title": "7. Render Final HTML Document"
                    }
                  ]
                }
              ]
            },
            {
              "url": "#build-htmljs",
              "title": "build-html.js"
            }
          ]
        },
        "fields": {
          "slug": "/docs/html-generation/",
          "anchor": "html-generation"
        },
        "frontmatter": {
          "title": "Page HTML Generation",
          "overview": null,
          "issue": null,
          "disableTableOfContents": null,
          "tableOfContentsDepth": null
        },
        "parent": {
          "__typename": "File",
          "relativePath": "docs/html-generation.md"
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/docs/html-generation/",
      "prev": {
        "title": "Building the JavaScript App",
        "link": "/docs/production-app/"
      },
      "next": {
        "title": "Code Splitting and Prefetching",
        "link": "/docs/how-code-splitting-works/"
      }
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsMarkdownJs2546709735(\n  $path: String!\n) {\n  mdx(fields: {slug: {eq: $path}}) {\n    body\n    excerpt\n    timeToRead\n    tableOfContents\n    fields {\n      slug\n      anchor\n    }\n    frontmatter {\n      title\n      overview\n      issue\n      disableTableOfContents\n      tableOfContentsDepth\n    }\n    ...MarkdownPageFooterMdx\n  }\n}\n\nfragment MarkdownPageFooterMdx on Mdx {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}