{
  "path": "/blog/2017-10-17-building-i18n-with-gatsby/",
  "result": {
    "data": {
      "mdx": {
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Building i18n with Gatsby\",\n  \"date\": \"2017-10-17T00:00:00.000Z\",\n  \"author\": \"Samuel Goudie\",\n  \"tags\": [\"i18n\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Languages are a key part of who we are; they are an expression of our identity.\\nServing users content in their own language is a powerful thing, and it allows\\nyou to include nuances and specific cultural references in a way Google\\nTranslate just wouldn\\u2019t allow.\"), mdx(\"p\", null, \"When we were looking for a new framework for the new\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://doopoll.co\"\n  }), \"doopoll\"), \" marketing site, we knew we\\u2019d want to support i18n\\nfrom the start.\"), mdx(\"p\", null, \"We were wowed with Gatsby\\u2019s simplicity and speed, but couldn\\u2019t find any clear\\nprocess for supporting i18n. With a little bit of digging and experimenting,\\nwe\\u2019ve found that it\\u2019s just as easy as the rest of the process.\"), mdx(\"p\", null, \"Here is how we set up i18n for our Gatsby marketing site, and a few tips along\\nthe way.\"), mdx(\"hr\", null), mdx(\"h2\", {\n    \"id\": \"quick-intro-to-i18n\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#quick-intro-to-i18n\",\n    \"aria-label\": \"quick intro to i18n permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Quick intro to i18n\"), mdx(\"p\", null, \"Just in case you\\u2019re new to i18n, don\\u2019t worry, it\\u2019s pretty simple! All we do is\\ntake hard-coded strings like \\u201CHello\\u201D and replace them with a variable so that\\nwhen the language changes, so does the string.\"), mdx(\"p\", null, \"So for example rather than write \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<h1>Hello</h1>\"), \". I might write\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<h1>{t(hello)}\"), \" (more on this later), and the user would see \\u2018Hello\\u2019,\\n\\u2018Bonjour\\u2019, or \\u2018Hola\\u2019 depending on what language they had switched to, and\\nwhether we\\u2019d added a translation for it.\"), mdx(\"h3\", {\n    \"id\": \"tip-a-quick-note-on-language-codes\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#tip-a-quick-note-on-language-codes\",\n    \"aria-label\": \"tip a quick note on language codes permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"TIP: A quick note on language codes\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.science.co.il/language/Codes.php\"\n  }), \"Each language has a unique code\"), \".\\nWe use this code to reference a language in our code. If you see a hyphen and\\nthen some letters after it, they refer to the locale. So for example:\"), mdx(\"p\", null, \"en = English cy = Welsh es = Spanish en-GB = British English en-US = American\\nEnglish\"), mdx(\"p\", null, \"The locale allows us to make changes to spelling (for example, \\u201Ccolour\\u201D vs.\\n\\u201Ccolor\\u201D), but can also be used for other functions such as currency.\"), mdx(\"h2\", {\n    \"id\": \"working-with-translators\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#working-with-translators\",\n    \"aria-label\": \"working with translators permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Working with translators\"), mdx(\"p\", null, \"At doopoll we speak multiple languages, but just like design, development, and\\ncopywriting, translation requires time and skill to get it right. That\\u2019s why we\\nwork with our awesome friends at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://applingua.com/\"\n  }), \"Applingua\"), \" who handle\\nall of our translation, and push new strings straight to our Git Repo \\uD83D\\uDE4C.\"), mdx(\"p\", null, \"There are other options out there. You can even crowd source your translations!\\nHowever, in our experience, if you\\u2019re going to be updating your site regularly\\nit pays to build a good working relationship with a translator. They will\\nunderstand your brand, and how to effectively communicate your tone of voice in\\na different language.\"), mdx(\"h2\", {\n    \"id\": \"choosing-a-package\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#choosing-a-package\",\n    \"aria-label\": \"choosing a package permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Choosing a package\"), mdx(\"p\", null, \"There are a few React i18n packages out there. We considered\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/yahoo/react-intl\"\n  }), \"react-intl\"), \" and the community\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.npmjs.com/package/gatsby-plugin-i18n\"\n  }), \"Gatsby plugin\"), \". However, we\\nopted for \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/i18next/react-i18next/\"\n  }), \"react-i18next\"), \" because we\\nuse a version of i18next in our core Meteor app, and our translators are\\nfamiliar with the system.\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://react.i18next.com/\"\n  }), \"It\\u2019s well documented too\"), \".\"), mdx(\"p\", null, \"We also wanted to use a non-specific Gatsby solution so we can use a similar\\nimplementation in other projects.\"), mdx(\"p\", null, \"To get started, you\\u2019ll need to install a few packages:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm i -S i18next i18next-xhr-backend i18next-browser-languagedetector react-i18next\")), mdx(\"h2\", {\n    \"id\": \"setting-up\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#setting-up\",\n    \"aria-label\": \"setting up permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Setting up\"), mdx(\"p\", null, \"This is straight from the\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://react.i18next.com/latest/i18next-instance\"\n  }), \"i18n code examples\"), \",\\nbut copied here for convenience. You\\u2019ll need to create an i18n component and\\nimport it somewhere (we did it in our index layout):\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import i18n from \\\"i18next\\\"\\nimport Backend from \\\"i18next-xhr-backend\\\"\\nimport LanguageDetector from \\\"i18next-browser-languagedetector\\\"\\nimport { reactI18nextModule } from \\\"react-i18next\\\"\\n\\ni18n\\n  .use(Backend)\\n  .use(LanguageDetector)\\n  .use(reactI18nextModule)\\n  .init({\\n    fallbackLng: \\\"en\\\",\\n\\n    // have a common namespace used around the full app\\n    ns: [\\\"translations\\\"],\\n    defaultNS: \\\"translations\\\",\\n\\n    debug: true,\\n\\n    interpolation: {\\n      escapeValue: false, // not needed for react!!\\n    },\\n\\n    react: {\\n      wait: true,\\n    },\\n  })\\n\\nexport default i18n\\n\")), mdx(\"h2\", {\n    \"id\": \"locales\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#locales\",\n    \"aria-label\": \"locales permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Locales\"), mdx(\"p\", null, \"Next we\\u2019ll create a folder for our translation strings. We used a folder called\\nlocales in our src folder (react-i18next likes that!). Within the locales folder\\nwe create a folder for each language using the language code. Then within that\\nwe create a JSON file for each component we want to translate.\"), mdx(\"p\", null, \"For our site we\\u2019re currently supporting English and Welsh, so our locales folder\\nlooks like this.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"- src\\n    - locales\\n        - en\\n            - PageHeader.json\\n            - PricingPlan.json\\n        ...\\n        - cy\\n            - PageHeader.json\\n            - PricingPlan.json\\n        ...\\n\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PageHeader\"), \" component in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"en\"), \" folder might look like this:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n  \\\"heading\\\": \\\"Shwmae, bonjour, and hola!\\\",\\n  \\\"description\\\": \\\"Available in English, Welsh, French, and Spanish, with more translations coming soon. doopoll is great for local, multi-lingual, and global organisations.\\\"\\n}\\n\")), mdx(\"p\", null, \"And the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cy\"), \" component would look like this:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n  \\\"heading\\\": \\\"Shwmae, bonjour, a hola!\\\",\\n  \\\"description\\\": \\\"Ar gael yn Saesneg, Cymraeg, Ffrangeg a Sbaeneg, gyda rhagor o gyfieithiadau'n dod yn fuan. Mae doopoll yn wych ar gyfer sefydliadau lleol, amlieithog a byd-eang.\\\"\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"tip-using-the-locales-folder-with-gatsby\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#tip-using-the-locales-folder-with-gatsby\",\n    \"aria-label\": \"tip using the locales folder with gatsby permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"TIP: Using the locales folder with Gatsby\"), mdx(\"p\", null, \"To get the locales folder into the right place for Gatsby we just need to add a\\nlittle hook to our \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-node.js\"), \" file. It copies the locales folder post\\nbuild and gets everything in the right place:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"const fs = require(\\\"fs-extra\\\")\\nconst path = require(\\\"path\\\")\\n\\nexports.onPostBuild = () => {\\n  console.log(\\\"Copying locales\\\")\\n  fs.copySync(\\n    path.join(__dirname, \\\"/src/locales\\\"),\\n    path.join(__dirname, \\\"/public/locales\\\")\\n  )\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"using-with-a-component\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#using-with-a-component\",\n    \"aria-label\": \"using with a component permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Using with a component\"), mdx(\"p\", null, \"With the packages installed and locales setup, we\\u2019re ready to wire up a\\ncomponent!\"), mdx(\"p\", null, \"React-i18next uses a HOC to wrap your component and provide some props to handle\\nlanguage switching. Here\\u2019s our \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PageHeader\"), \" component:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import React, { Component } from \\\"react\\\"\\nimport { translate } from \\\"react-i18next\\\"\\n\\nclass PageHeader extends Component {\\n  render() {\\n    const { t } = this.props\\n\\n    return (\\n      <div className=\\\"PageHeader\\\">\\n        <h2>{t(\\\"heading\\\")}</h2>\\n        <p>{t(\\\"description\\\")}</p>\\n      </div>\\n    )\\n  }\\n}\\n\\nexport default translate(\\\"PageHeader\\\")(PageHeader)\\n\")), mdx(\"p\", null, \"Pretty simple! The string provided to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"translate\"), \" is the corresponding JSON file\\nname for the translation, and the second instance is the component itself. We\\nkeep these names the same to make it easier to match up translation files and\\ncomponents.\"), mdx(\"h3\", {\n    \"id\": \"tip-react-helmet\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#tip-react-helmet\",\n    \"aria-label\": \"tip react helmet permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"TIP: React Helmet\"), mdx(\"p\", null, \"You can also use translation strings for page titles! Here\\u2019s an example with\\nReact Helmet:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<div className=\\\"Pricing\\\">\\n    <Helmet title={t('heading')}>\\n</div>\\n\")), mdx(\"h2\", {\n    \"id\": \"switching-languages\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#switching-languages\",\n    \"aria-label\": \"switching languages permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Switching Languages\"), mdx(\"p\", null, \"Finally, to make it easy for our users to switch language we need to create a\\nlittle component. Here\\u2019s an example from our site:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import React, { Component } from \\\"react\\\"\\nimport classNames from \\\"classnames\\\"\\nimport { translate } from \\\"react-i18next\\\"\\n\\nclass LanguageSwitcher extends Component {\\n  constructor(props) {\\n    super(props)\\n    const { i18n } = this.props\\n    this.state = { language: i18n.language }\\n\\n    this.handleChangeLanguage = this.handleChangeLanguage.bind(this)\\n  }\\n\\n  componentWillReceiveProps(nextProps) {\\n    this.setState({ language: nextProps.i18n.language })\\n  }\\n\\n  handleChangeLanguage(lng) {\\n    const { i18n } = this.props\\n    i18n.changeLanguage(lng)\\n  }\\n\\n  renderLanguageChoice({ code, label }) {\\n    const buttonClass = classNames(\\\"LanguageSwitcher__button\\\", {\\n      \\\"LanguageSwitcher__button--selected\\\": this.state.language === code,\\n    })\\n\\n    return (\\n      <button\\n        key={code}\\n        className={buttonClass}\\n        onClick={() => this.handleChangeLanguage(code)}\\n      >\\n        {label}\\n      </button>\\n    )\\n  }\\n\\n  render() {\\n    const languages = [\\n      { code: \\\"en\\\", label: \\\"English\\\" },\\n      { code: \\\"cy\\\", label: \\\"Cymraeg\\\" },\\n    ]\\n\\n    return (\\n      <div className=\\\"LanguageSwitcher\\\">\\n        {languages.map(language => this.renderLanguageChoice(language))}\\n      </div>\\n    )\\n  }\\n}\\n\\nexport default translate(\\\"LanguageSwitcher\\\")(LanguageSwitcher)\\n\")), mdx(\"p\", null, \"This is a pretty simple component. We\\u2019re setting the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"language\"), \" state based on\\nthe i18n prop so that we can check which language is currently active and show\\nthat in our menu.\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"handleLanguageChange\"), \" function just wraps the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"react-i18n\"), \" function passed\\nin as a prop through \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"translate\"), \". Pretty much everything is handled for us.\\nHooray! \\uD83C\\uDF89\"), mdx(\"h2\", {\n    \"id\": \"ssr\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#ssr\",\n    \"aria-label\": \"ssr permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"SSR\"), mdx(\"p\", null, \"To let it render the content into html, you need to load i18n namespaces (using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"i18n.loadNamespaces\"), \") before render\"), mdx(\"h3\", {\n    \"id\": \"with-redux\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#with-redux\",\n    \"aria-label\": \"with redux permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"With redux\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// gatsby-ssr.js\\n\\nimport React from \\\"react\\\"\\nimport { Provider } from \\\"react-redux\\\"\\nimport { renderToString } from \\\"react-dom/server\\\"\\nimport i18n from \\\"./src/i18n\\\"\\n\\nimport createStore from \\\"./src/state/createStore\\\"\\n\\nexports.replaceRenderer = ({ bodyComponent, replaceBodyHTMLString }) => {\\n  i18n.loadNamespaces([\\\"common\\\"], () => {\\n    const store = createStore()\\n    const ConnectedBody = () => (\\n      <Provider store={store}>{bodyComponent}</Provider>\\n    )\\n    replaceBodyHTMLString(renderToString(<ConnectedBody />))\\n  })\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"without-redux\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#without-redux\",\n    \"aria-label\": \"without redux permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Without redux\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Not yet tested\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// gatsby-ssr.js\\n\\nimport React from \\\"react\\\"\\nimport { renderToString } from \\\"react-dom/server\\\"\\nimport i18n from \\\"./src/i18n\\\"\\n\\nimport createStore from \\\"./src/state/createStore\\\"\\n\\nexports.replaceRenderer = ({ bodyComponent, replaceBodyHTMLString }) => {\\n  i18n.loadNamespaces([\\\"common\\\"], () => {\\n    replaceBodyHTMLString(bodyComponent)\\n  })\\n}\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"translate\"), \" hoc from react-i18next cause page / component not able to SSR. I make it works by import i18n & use i18n.t\")), mdx(\"h2\", {\n    \"id\": \"finishing-up\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#finishing-up\",\n    \"aria-label\": \"finishing up permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Finishing up\"), mdx(\"p\", null, \"As you can see, i18n in Gatsby is actually pretty simple when you know how! We\\nhad to work a few things out for ourselves (the locales folder being one of\\nthem!), so hopefully reading this will allow you to get started serving\\ninternational users even quicker.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "excerpt": "Languages are a key part of who we are; they are an expression of our identity.\nServing users content in their own language is a powerful…",
        "timeToRead": 3,
        "fields": {
          "slug": "/blog/2017-10-17-building-i18n-with-gatsby/",
          "publishedAt": null
        },
        "frontmatter": {
          "title": "Building i18n with Gatsby",
          "excerpt": null,
          "date": "October 17th 2017",
          "rawDate": "2017-10-17T00:00:00.000Z",
          "canonicalLink": null,
          "tags": [
            "i18n"
          ],
          "image": null,
          "imageAuthor": null,
          "imageAuthorLink": null,
          "imageTitle": null,
          "showImageInArticle": null,
          "author": {
            "id": "Samuel Goudie",
            "bio": "Cofounder & Head of Product at https://doopoll.co",
            "twitter": "@sgoudie",
            "avatar": {
              "childImageSharp": {
                "fixed": {
                  "tracedSVG": "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%3e%3crect%20width='100%25'%20height='100%25'%20fill='%23f6f2f8'/%3e%3cpath%20d='M13%204c-3%201-4%203-4%208v5l1-4c1-4%202-5%205-5l6%201c1%201%201%201%201-1%200-4-4-6-9-4m1%2014c-3%200-2%203%202%204%202%200%203%200%204-2l-3-3-3%201m6%205c-2%202-6%203-6%201h-4l-1%201-1%201-1%201c-1%201-1%200-1-2s0-2-1%200c0%201-1%204-3%205l-2%202h7c6%200%207%200%207-2l4-3c4-2%204-2%202%203-1%202-1%202%205%202%208%200%209-1%203-4-2-1-5-2-5-4-2-2-2-2-3-1'%20fill='%23e0d6eb'%20fill-rule='evenodd'/%3e%3c/svg%3e",
                  "width": 64,
                  "height": 64,
                  "src": "/static/dc6e5869628527325f591d179bce7bc7/88ae8/samuel-goudie.jpg",
                  "srcSet": "/static/dc6e5869628527325f591d179bce7bc7/88ae8/samuel-goudie.jpg 1x,\n/static/dc6e5869628527325f591d179bce7bc7/0740f/samuel-goudie.jpg 1.5x,\n/static/dc6e5869628527325f591d179bce7bc7/c9264/samuel-goudie.jpg 2x"
                }
              }
            },
            "fields": {
              "slug": "/contributors/samuel-goudie/"
            }
          }
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/blog/2017-10-17-building-i18n-with-gatsby/",
      "prev": {
        "fields": {
          "slug": "/blog/2017-10-16-making-website-building-fun/",
          "package": null,
          "released": true
        },
        "frontmatter": {
          "title": "Making website building fun",
          "draft": null,
          "canonicalLink": null,
          "publishedAt": null,
          "issue": null,
          "tags": [
            "web-building-blocks",
            "gatsby-image",
            "react",
            "graphql",
            "plugins"
          ]
        }
      },
      "next": {
        "fields": {
          "slug": "/blog/2017-10-20-from-wordpress-to-developing-in-react-starting-to-see-it/",
          "package": null,
          "released": true
        },
        "frontmatter": {
          "title": "From WordPress to Developing in React — Starting to See It",
          "draft": null,
          "canonicalLink": null,
          "publishedAt": null,
          "issue": null,
          "tags": [
            "react",
            "getting-started",
            "wordpress"
          ]
        }
      }
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateBlogPostJs2991924798(\n  $slug: String!\n) {\n  mdx(fields: {slug: {eq: $slug}}) {\n    body\n    excerpt\n    timeToRead\n    fields {\n      slug\n      publishedAt\n    }\n    frontmatter {\n      title\n      excerpt\n      date(formatString: \"MMMM Do YYYY\")\n      rawDate: date\n      canonicalLink\n      tags\n      image {\n        childImageSharp {\n          resize(width: 1500, height: 1500) {\n            src\n          }\n          fluid(maxWidth: 786) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      imageAuthor\n      imageAuthorLink\n      imageTitle\n      showImageInArticle\n      author {\n        id\n        bio\n        twitter\n        avatar {\n          childImageSharp {\n            fixed(width: 64, height: 64, quality: 75, traceSVG: {turdSize: 10, background: \"#f6f2f8\", color: \"#e0d6eb\"}) {\n              ...GatsbyImageSharpFixed_tracedSVG\n            }\n          }\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n}\n\nfragment GatsbyImageSharpFluid on ImageSharpFluid {\n  base64\n  aspectRatio\n  src\n  srcSet\n  sizes\n}\n\nfragment GatsbyImageSharpFixed_tracedSVG on ImageSharpFixed {\n  tracedSVG\n  width\n  height\n  src\n  srcSet\n}\n"
}