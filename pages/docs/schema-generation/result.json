{
  "path": "/docs/schema-generation/",
  "result": {
    "data": {
      "mdx": {
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Schema Generation\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"This documentation isn\\u2019t up to date with latest\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/schema-customization\"\n  }), \"schema customization changes\"), \". Help Gatsby by\\nmaking a PR to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/issues/14228\"\n  }), \"update this documentation\"), \"!\")), mdx(\"p\", null, \"Once the nodes have been sourced and transformed, the next step is to generate the GraphQL Schema. This is one of the more complex parts of the Gatsby code base. In fact, as of writing, it accounts for a third of the lines of code in core Gatsby. It involves inferring a GraphQL schema from all the nodes that have been sourced and transformed so far. Read on to find out how it\\u2019s done.\"), mdx(\"h3\", {\n    \"id\": \"group-all-nodes-by-type\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#group-all-nodes-by-type\",\n    \"aria-label\": \"group all nodes by type permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Group all nodes by type\"), mdx(\"p\", null, \"Each sourced or transformed node has a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"node.internal.type\"), \", which is set by the plugin that created it. E.g, the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"source-filesystem\"), \" plugin \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-filesystem/src/create-file-node.js#L46\"\n  }), \"sets the type to File\"), \". The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"transformer-json\"), \" plugin creates a dynamic type \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-transformer-json/src/gatsby-node.js#L48\"\n  }), \"based on the parent node\"), \". E.g \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PostsJson\"), \" for a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"posts.json\"), \" file.\"), mdx(\"p\", null, \"During the schema generation phase, we must generate what\\u2019s called a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ProcessedNodeType\"), \" in Gatsby. This is a simple structure that builds on top of a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://graphql.org/graphql-js/type/#graphqlobjecttype\"\n  }), \"graphql-js GraphQLObjectType\"), \". Our goal in the below steps is to infer and construct this object for each unique node type in redux.\"), mdx(\"p\", null, \"The flow is summarized by the below graph. It shows the intermediate transformations or relevant parts of the user\\u2019s GraphQL query that are performed by code in the Gatsby \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby/src/schema\"\n  }), \"schema folder\"), \", finally resulting in the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/schema/build-node-types.js#L182\"\n  }), \"ProcessedNodeType\"), \". It uses the example of building a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"File\"), \" GraphQL type.\"), mdx(\"svg\", {\n    \"width\": \"499pt\",\n    \"height\": \"757pt\",\n    \"viewBox\": \"0.00 0.00 499.41 756.80\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\",\n    \"xlink\": \"http://www.w3.org/1999/xlink\",\n    \"style\": {\n      \"maxWidth\": \"100%\",\n      \"height\": \"auto\"\n    }\n  }, mdx(\"g\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"id\": \"graph0\",\n    \"className\": \"graph\",\n    \"transform\": \"scale(1 1) rotate(0) translate(4 752.8)\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"graphname\"), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"#ffffff\",\n    \"stroke\": \"transparent\",\n    \"points\": \"-4,4 -4,-752.8 495.4056,-752.8 495.4056,4 -4,4\"\n  })), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"node1\",\n    \"className\": \"node\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"pluginFields\"), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"points\": \"226.4433,-526.6006 52.9049,-526.6006 52.9049,-383.7994 226.4433,-383.7994 226.4433,-526.6006\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"61.0396\",\n    \"y\": \"-509.8\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"custom plugin fields\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"61.0396\",\n    \"y\": \"-493\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"{\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"61.0396\",\n    \"y\": \"-476.2\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \" \\xA0\\xA0\\xA0publicURL: {\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"61.0396\",\n    \"y\": \"-459.4\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \" \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0type: GraphQLString,\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"61.0396\",\n    \"y\": \"-442.6\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \" \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0resolve(file, a, c) { ... }\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"61.0396\",\n    \"y\": \"-425.8\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \" \\xA0\\xA0\\xA0}\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"61.0396\",\n    \"y\": \"-409\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"}\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"middle\",\n    \"x\": \"139.6741\",\n    \"y\": \"-392.2\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \" \")), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"node5\",\n    \"className\": \"node\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"gqlType\"), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"points\": \"363.3784,-347.9002 167.9698,-347.9002 167.9698,-239.2998 363.3784,-239.2998 363.3784,-347.9002\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"176.072\",\n    \"y\": \"-331.4\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"gqlType (GraphQLObjectType)\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"176.072\",\n    \"y\": \"-314.6\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"{\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"176.072\",\n    \"y\": \"-297.8\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \" \\xA0\\xA0\\xA0fields,\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"176.072\",\n    \"y\": \"-281\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \" \\xA0\\xA0\\xA0name: `File`\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"176.072\",\n    \"y\": \"-264.2\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"}\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"middle\",\n    \"x\": \"265.6741\",\n    \"y\": \"-247.4\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \" \")), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"edge2\",\n    \"className\": \"edge\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"pluginFields->gqlType\"), mdx(\"path\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"d\": \"M195.3063,-383.8495C202.5467,-374.5633 209.9188,-365.1084 217.0328,-355.9843\"\n  })), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"#000000\",\n    \"stroke\": \"#000000\",\n    \"points\": \"219.8196,-358.1023 223.2084,-348.064 214.2993,-353.7981 219.8196,-358.1023\"\n  }))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"node8\",\n    \"className\": \"node\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"inputFilters\"), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"points\": \"296.1587,-203.0006 119.1895,-203.0006 119.1895,-77.7994 296.1587,-77.7994 296.1587,-203.0006\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"127.1818\",\n    \"y\": \"-186.6\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"InputFilters\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"127.1818\",\n    \"y\": \"-169.8\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"file({\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"127.1818\",\n    \"y\": \"-153\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \" \\xA0\\xA0\\xA0relativePath: {\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"127.1818\",\n    \"y\": \"-136.2\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \" \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0eq: `blogs/my-blog.md`\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"127.1818\",\n    \"y\": \"-119.4\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \" \\xA0\\xA0\\xA0}\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"127.1818\",\n    \"y\": \"-102.6\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"})\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"middle\",\n    \"x\": \"207.6741\",\n    \"y\": \"-85.8\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \" \")), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"edge1\",\n    \"className\": \"edge\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"pluginFields->inputFilters\"), mdx(\"path\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"d\": \"M139.3255,-383.9693C140.7362,-341.2763 145.4289,-286.3117 158.6741,-239.2 161.1933,-230.2397 164.5226,-221.1196 168.2636,-212.2237\"\n  })), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"#000000\",\n    \"stroke\": \"#000000\",\n    \"points\": \"171.4759,-213.6135 172.2945,-203.0503 165.0673,-210.7975 171.4759,-213.6135\"\n  }))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"node2\",\n    \"className\": \"node\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"typeNodes\"), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"points\": \"426.0393,-748.6019 257.3089,-748.6019 257.3089,-707.3981 426.0393,-707.3981 426.0393,-748.6019\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"265.4917\",\n    \"y\": \"-732.2\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"all redux nodes of type\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"middle\",\n    \"x\": \"341.6741\",\n    \"y\": \"-715.4\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"e.g internal.type === `File`\")), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"node3\",\n    \"className\": \"node\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"exampleValue\"), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"points\": \"451.8081,-671.1002 231.5401,-671.1002 231.5401,-562.4998 451.8081,-562.4998 451.8081,-671.1002\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"239.6071\",\n    \"y\": \"-654.6\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"exampleValue\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"239.6071\",\n    \"y\": \"-637.8\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"{\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"239.6071\",\n    \"y\": \"-621\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \" \\xA0\\xA0\\xA0relativePath: `blogs/my-blog.md`,\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"239.6071\",\n    \"y\": \"-604.2\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \" \\xA0\\xA0\\xA0accessTime: 8292387234\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"239.6071\",\n    \"y\": \"-587.4\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"}\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"middle\",\n    \"x\": \"341.6741\",\n    \"y\": \"-570.6\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \" \")), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"edge6\",\n    \"className\": \"edge\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"typeNodes->exampleValue\"), mdx(\"path\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"d\": \"M341.6741,-707.3447C341.6741,-699.7802 341.6741,-690.7643 341.6741,-681.3985\"\n  })), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"#000000\",\n    \"stroke\": \"#000000\",\n    \"points\": \"345.1742,-681.1504 341.6741,-671.1504 338.1742,-681.1505 345.1742,-681.1504\"\n  }))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"node4\",\n    \"className\": \"node\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"resolve\"), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"points\": \"400.9632,-41.4019 246.385,-41.4019 246.385,-.1981 400.9632,-.1981 400.9632,-41.4019\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"254.2796\",\n    \"y\": \"-25\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"ProcessedNodeType\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"middle\",\n    \"x\": \"323.6741\",\n    \"y\": \"-8.2\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \" including final resolve()\")), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"edge8\",\n    \"className\": \"edge\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"typeNodes->resolve\"), mdx(\"path\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"d\": \"M414.8704,-707.3748C432.5371,-698.9563 449.5159,-687.2811 460.6741,-671.2 515.6129,-592.0227 479.6741,-551.5707 479.6741,-455.2 479.6741,-455.2 479.6741,-455.2 479.6741,-293.6 479.6741,-192.5637 398.0381,-94.9484 352.8771,-48.6777\"\n  })), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"#000000\",\n    \"stroke\": \"#000000\",\n    \"points\": \"355.2213,-46.071 345.6942,-41.4356 350.2512,-51.0004 355.2213,-46.071\"\n  }))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"node6\",\n    \"className\": \"node\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"parentChild\"), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"points\": \"213.5226,-671.1002 -.1744,-671.1002 -.1744,-562.4998 213.5226,-562.4998 213.5226,-671.1002\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"8\",\n    \"y\": \"-654.6\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"Parent/Children fields\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"8\",\n    \"y\": \"-637.8\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"node {\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"8\",\n    \"y\": \"-621\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \" \\xA0\\xA0\\xA0childMarkdownRemark { html }\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"8\",\n    \"y\": \"-604.2\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \" \\xA0\\xA0\\xA0parent { id }\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"8\",\n    \"y\": \"-587.4\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"}\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"middle\",\n    \"x\": \"106.6741\",\n    \"y\": \"-570.6\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \" \")), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"edge7\",\n    \"className\": \"edge\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"typeNodes->parentChild\"), mdx(\"path\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"d\": \"M298.0231,-707.3447C276.5574,-697.1873 249.5619,-684.4133 222.6712,-671.6889\"\n  })), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"#000000\",\n    \"stroke\": \"#000000\",\n    \"points\": \"224.1001,-668.493 213.564,-667.3794 221.106,-674.8204 224.1001,-668.493\"\n  }))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"node7\",\n    \"className\": \"node\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"objectFields\"), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"points\": \"400.8073,-509.5002 282.5409,-509.5002 282.5409,-400.8998 400.8073,-400.8998 400.8073,-509.5002\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"290.3578\",\n    \"y\": \"-493\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"Object node fields\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"290.3578\",\n    \"y\": \"-476.2\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \" \\xA0node {\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"290.3578\",\n    \"y\": \"-459.4\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \" \\xA0\\xA0\\xA0relativePath,\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"290.3578\",\n    \"y\": \"-442.6\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \" \\xA0\\xA0\\xA0accessTime\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"start\",\n    \"x\": \"290.3578\",\n    \"y\": \"-425.8\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"}\"), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"middle\",\n    \"x\": \"341.6741\",\n    \"y\": \"-409\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \" \")), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"edge9\",\n    \"className\": \"edge\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"exampleValue->objectFields\"), mdx(\"path\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"d\": \"M341.6741,-562.0896C341.6741,-548.4586 341.6741,-533.7178 341.6741,-519.6649\"\n  })), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"#000000\",\n    \"stroke\": \"#000000\",\n    \"points\": \"345.1742,-519.5795 341.6741,-509.5796 338.1742,-519.5796 345.1742,-519.5795\"\n  }))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"edge11\",\n    \"className\": \"edge\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"gqlType->resolve\"), mdx(\"path\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"d\": \"M292.3334,-239.0837C297.1174,-227.4672 301.5633,-215.1071 304.6741,-203.2 318.298,-151.052 322.212,-88.1102 323.3004,-51.4544\"\n  })), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"#000000\",\n    \"stroke\": \"#000000\",\n    \"points\": \"326.8006,-51.4861 323.5468,-41.4033 319.8027,-51.3145 326.8006,-51.4861\"\n  }))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"edge5\",\n    \"className\": \"edge\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"gqlType->inputFilters\"), mdx(\"path\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"d\": \"M245.0622,-239.156C241.8102,-230.5664 238.4043,-221.57 235.0282,-212.6525\"\n  })), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"#000000\",\n    \"stroke\": \"#000000\",\n    \"points\": \"238.1992,-211.1429 231.3852,-203.03 231.6526,-213.6214 238.1992,-211.1429\"\n  }))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"edge4\",\n    \"className\": \"edge\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"parentChild->gqlType\"), mdx(\"path\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"d\": \"M204.3977,-562.3038C216.548,-551.828 227.5375,-539.8561 235.6741,-526.4 266.2856,-475.7759 271.826,-407.703 270.886,-358.2512\"\n  })), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"#000000\",\n    \"stroke\": \"#000000\",\n    \"points\": \"274.3772,-357.8906 270.5937,-347.9944 267.3801,-358.09 274.3772,-357.8906\"\n  }))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"edge3\",\n    \"className\": \"edge\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"objectFields->gqlType\"), mdx(\"path\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"d\": \"M315.944,-400.4896C309.4088,-386.5939 302.3313,-371.5449 295.6071,-357.2471\"\n  })), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"#000000\",\n    \"stroke\": \"#000000\",\n    \"points\": \"298.6717,-355.5392 291.2486,-347.9796 292.3373,-358.5183 298.6717,-355.5392\"\n  }))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"edge10\",\n    \"className\": \"edge\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"inputFilters->resolve\"), mdx(\"path\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"d\": \"M268.392,-77.7978C278.2282,-67.6563 287.96,-57.6225 296.4524,-48.8666\"\n  })), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"#000000\",\n    \"stroke\": \"#000000\",\n    \"points\": \"299.118,-51.1454 303.5678,-41.5303 294.0931,-46.2718 299.118,-51.1454\"\n  }))))), mdx(\"h3\", {\n    \"id\": \"for-each-unique-type\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#for-each-unique-type\",\n    \"aria-label\": \"for each unique type permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"For each unique Type\"), mdx(\"p\", null, \"The majority of schema generation code kicks off in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/schema/build-node-types.js\"\n  }), \"build-node-types.js\"), \". The below steps will be executed for each unique type.\"), mdx(\"h4\", {\n    \"id\": \"1-plugins-create-custom-fields\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#1-plugins-create-custom-fields\",\n    \"aria-label\": \"1 plugins create custom fields permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"1. Plugins create custom fields\"), mdx(\"p\", null, \"Gatsby infers GraphQL Types from the fields on the sourced and transformed nodes. But before that, we allow plugins to create their own custom fields. For example, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"source-filesystem\"), \" creates a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-filesystem/src/extend-file-node.js#L11\"\n  }), \"publicURL\"), \" field that when resolved, will copy the file into the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"public/static\"), \" directory and return the new path.\"), mdx(\"p\", null, \"To declare custom fields, plugins implement the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/node-apis/#setFieldsOnGraphQLNodeType\"\n  }), \"setFieldsOnGraphQLNodeType\"), \" API and apply the change only to types that they care about (e.g source-filesystem \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-filesystem/src/extend-file-node.js#L6\"\n  }), \"only proceeds if type.name = \", mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"File\")), \". During schema generation, Gatsby will call this API, allowing the plugin to declare these custom fields, \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/schema/build-node-types.js#L151\"\n  }), \"which are returned\"), \" to the main schema process.\"), mdx(\"h4\", {\n    \"id\": \"2-create-a-gqltype\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#2-create-a-gqltype\",\n    \"aria-label\": \"2 create a gqltype permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"2. Create a \\u201CGQLType\\u201D\"), mdx(\"p\", null, \"This step is quite complex, but at its most basic, it infers GraphQL Fields by constructing an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"exampleObject\"), \" that merges all fields of the type in Redux. It uses this to infer all possible fields and their types, and construct GraphQL versions of them. It does the same for fields created by plugins (like in step 1). This step is explained in detail in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/schema-gql-type\"\n  }), \"GraphQL Node Types Creation\"), \".\"), mdx(\"h4\", {\n    \"id\": \"3-create-input-filters\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#3-create-input-filters\",\n    \"aria-label\": \"3 create input filters permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"3. Create Input filters\"), mdx(\"p\", null, \"This step creates GraphQL input filters for each field so the objects can be queried by them. More details in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/schema-input-gql\"\n  }), \"Building the Input Filters\"), \".\"), mdx(\"h4\", {\n    \"id\": \"4-processedtypenode-creation-with-resolve-implementation\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#4-processedtypenode-creation-with-resolve-implementation\",\n    \"aria-label\": \"4 processedtypenode creation with resolve implementation permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"4. ProcessedTypeNode creation with resolve implementation\"), mdx(\"p\", null, \"Finally, we have everything we need to construct our final Gatsby Type object (known as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ProcessedTypeNode\"), \"). This contains the input filters and gqlType created above, and implements a resolve function for it using sift. More detail in the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/schema-sift\"\n  }), \"Querying with Sift\"), \" section.\"), mdx(\"h4\", {\n    \"id\": \"5-create-connections-for-each-type\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#5-create-connections-for-each-type\",\n    \"aria-label\": \"5 create connections for each type permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"5. Create Connections for each type\"), mdx(\"p\", null, \"We\\u2019ve inferred all GraphQL Types, and the ability to query for a single node. But now we need to be able to query for collections of that type (e.g \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"allMarkdownRemark\"), \"). \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/schema-connections/\"\n  }), \"Schema Connections\"), \" takes care of that.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "excerpt": "This documentation isn't up to date with latest\n schema customization changes . Help Gatsby by\nmaking a PR to  update this documentation…",
        "timeToRead": 2,
        "tableOfContents": {
          "items": [
            {
              "url": "#group-all-nodes-by-type",
              "title": "Group all nodes by type"
            },
            {
              "url": "#for-each-unique-type",
              "title": "For each unique Type",
              "items": [
                {
                  "url": "#1-plugins-create-custom-fields",
                  "title": "1. Plugins create custom fields"
                },
                {
                  "url": "#2-create-a-gqltype",
                  "title": "2. Create a \"GQLType\""
                },
                {
                  "url": "#3-create-input-filters",
                  "title": "3. Create Input filters"
                },
                {
                  "url": "#4-processedtypenode-creation-with-resolve-implementation",
                  "title": "4. ProcessedTypeNode creation with resolve implementation"
                },
                {
                  "url": "#5-create-connections-for-each-type",
                  "title": "5. Create Connections for each type"
                }
              ]
            }
          ]
        },
        "fields": {
          "slug": "/docs/schema-generation/",
          "anchor": "schema-generation"
        },
        "frontmatter": {
          "title": "Schema Generation",
          "overview": null,
          "issue": null,
          "disableTableOfContents": null,
          "tableOfContentsDepth": null
        },
        "parent": {
          "__typename": "File",
          "relativePath": "docs/schema-generation.md"
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/docs/schema-generation/",
      "prev": {
        "title": "Node Creation",
        "link": "/docs/node-creation/"
      },
      "next": {
        "title": "Building the GqlType",
        "link": "/docs/schema-gql-type/"
      }
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsMarkdownJs2546709735(\n  $path: String!\n) {\n  mdx(fields: {slug: {eq: $path}}) {\n    body\n    excerpt\n    timeToRead\n    tableOfContents\n    fields {\n      slug\n      anchor\n    }\n    frontmatter {\n      title\n      overview\n      issue\n      disableTableOfContents\n      tableOfContentsDepth\n    }\n    ...MarkdownPageFooterMdx\n  }\n}\n\nfragment MarkdownPageFooterMdx on Mdx {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}