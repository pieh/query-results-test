{
  "path": "/docs/sourcing-from-kentico-cloud/",
  "result": {
    "data": {
      "mdx": {
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Sourcing from Kentico Cloud\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In this guide, you\\u2019ll go through how to quickly source content for your Gatsby site from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://kenticocloud.com/\"\n  }), \"Kentico Cloud\"), \".\"), mdx(\"p\", null, \"Kentico Cloud is a hosted CMS that offers you Content as a Service (CaaS) for all your content needs. Using CaaS ensures that your content will be future-proof and reusable, so you can add a mobile app that uses the same content as your Gatsby site without worrying about how it will fit. Kentico Cloud offers CaaS with an easy-to-use editing interface and excellent collaboration features, so all your work on content can happen in one place without requiring technical help for each user.\"), mdx(\"p\", null, \"You can also take advantage of Kentico Cloud\\u2019s ability to deliver content in multiple languages and create relationships among various content with linked items. However you structure your content in Kentico Cloud, the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Kentico/gatsby-source-kentico-cloud\"\n  }), \"source plugin\"), \" will ensure the proper nodes are created for your Gatsby site.\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Note: For this guide, you\\u2019ll work from scratch from the \", mdx(\"a\", _extends({\n    parentName: \"em\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby-starter-default\"\n  }), \"Gatsby default starter\"), \" to get a feel for how sourcing from Kentico Cloud works. If you\\u2019d like to look at an example of a complete basic site, have a look at the \", mdx(\"a\", _extends({\n    parentName: \"em\"\n  }, {\n    \"href\": \"https://github.com/Kentico/gatsby-starter-kentico-cloud\"\n  }), \"Kentico Cloud Gatsby starter site\"), \", which includes worked examples for querying content.\")), mdx(\"h2\", {\n    \"id\": \"setup\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#setup\",\n    \"aria-label\": \"setup permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Setup\"), mdx(\"h3\", {\n    \"id\": \"kentico-cloud\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#kentico-cloud\",\n    \"aria-label\": \"kentico cloud permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Kentico Cloud\"), mdx(\"p\", null, \"The first thing to do, if you haven\\u2019t already done so, is \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://app.kenticocloud.com/sign-up\"\n  }), \"sign up for a Kentico Cloud account\"), \". This will automatically start a free 30-day trial with all Kentico Cloud features. At any point during the trial or after, you can switch to a Starter plan (which always starts as free) or a higher plan with more features.\"), mdx(\"p\", null, \"Once you have a subscription to Kentico Cloud, you need some content to retrieve. If you know what you want, you can set up your own content types (templates for your content) and then create content items (the actual content) based on them. If you\\u2019d like to take a shortcut and see some example content, you can use our \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://app.kenticocloud.com/sample-project-generator\"\n  }), \"Sample Project generator\"), \" to create sample content. This guide will continue with the example of the Sample Project.\"), mdx(\"p\", null, \"The created Sample Project is a comprehensive presentation of a fictional coffee company named Dancing Goat that showcases various Kentico Cloud features. It can be displayed in various channels, as you can see by going to the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://app.kenticocloud.com/quickstart\"\n  }), \"Quickstart page in Kentico Cloud\"), \" from within that project.\"), mdx(\"p\", null, \"For this guide, you don\\u2019t have to worry about most of the features. You\\u2019ll just pull some data to display within the Gatsby site you\\u2019ll create in the next step. The only thing you need to continue is your Project ID, which you can find in Kentico Cloud under \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Project settings\"), \" -> \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"API keys\"), \".\"), mdx(\"h3\", {\n    \"id\": \"gatsby\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#gatsby\",\n    \"aria-label\": \"gatsby permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Gatsby\"), mdx(\"h4\", {\n    \"id\": \"adding-content-to-existing-pages\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#adding-content-to-existing-pages\",\n    \"aria-label\": \"adding content to existing pages permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Adding content to existing pages\"), mdx(\"p\", null, \"Now that you have some content to pull, you can create a basic Gatsby site to display the content. Assuming you have the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/quick-start/#install-gatsbys-command-line-tool\"\n  }), \"Gatsby CLI installed\"), \", create a new site and navigate to it in your terminal:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"gatsby new kentico-cloud-guide\\ncd kentico-cloud-guide\\n\")), mdx(\"p\", null, \"Next, install the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Kentico/gatsby-source-kentico-cloud\"\n  }), \"Kentico Cloud source plugin\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"npm install --save gatsby-source-kentico-cloud\\n\")), mdx(\"p\", null, \"Once that\\u2019s done, you need to add the plugin to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config.js\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"module.exports = {\\n  siteMetadata: {\\n   ...\\n  },\\n  plugins: [\\n    {\\n      resolve: `gatsby-source-kentico-cloud`,\\n        options: {\\n          deliveryClientConfig: {\\n            projectId: `<YourProjectID>` // Fill in your Project ID\\n          },\\n          // Please note that with the Sample Project generated above, `en-US` is the default language for the project and this config. For a blank project, this needs to be `default`.\\n          languageCodenames: [\\n                    `en-US` // Or the languages in your project (Project settings -> Localization)\\n          ]\\n      }\\n    },\\n    ...\\n\")), mdx(\"p\", null, \"And that\\u2019s enough for you to be able to access content from Kentico Cloud in your site. You can see this by starting Gatsby in development mode:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"gatsby develop\\n\")), mdx(\"p\", null, \"To see all the content that\\u2019s available from Kentico Cloud, you can test out GraphQL queries in GraphiQL at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://localhost:8000/___graphql\"), \". Nodes from Kentico Cloud will be prefixed with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"kenticoCloud\"), \" (for single nodes) or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"allKenticoCloud\"), \" (for all examples of a given type). Then each node has \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Item\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Type\"), \", depending on what it is, and lastly you can add the codename of a specific type you are looking for. Feel free to explore the responses in GraphiQL.\"), mdx(\"p\", null, \"To see how to put that data into your site, first go to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://localhost:8000/\"), \". Notice that the default title for the site is \\u201CGatsby Default Starter\\u201D. You can change that by pulling the title for your site from Kentico Cloud.\"), mdx(\"p\", null, \"The title here is generated in the layout from the site metadata. By default, the Kentico Cloud Sample Project has a single item named \\u201CHome\\u201D that is the only item of the Home type. So you can change the layout component to query the metadata of that item and then use that data to populate your title.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript:title=src/components/layout.js\"\n  }), \"...\\nconst Layout = ({ children }) => (\\n  <StaticQuery\\n    query={graphql`\\n      query {\\n        kenticoCloudItemHome {\\n          elements {\\n            metadata__meta_title {\\n              value\\n            }\\n          }\\n        }\\n      }\\n    `}\\n    render={data => (\\n      <>\\n        <Header siteTitle={data.kenticoCloudItemHome.elements.metadata__meta_title.value} />\\n...\\n\")), mdx(\"p\", null, \"If you look at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://localhost:8000/\"), \", you\\u2019ll notice the title is now \\u201CDancing Goat\\u2013Freshest coffee on the block!\\u201C. You can easily change this title in Kentico Cloud to whatever you want and rerun \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby develop\"), \" to rebuild the site (\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#continuous-deployment\"\n  }), \"see below about automatic builds\"), \").\"), mdx(\"p\", null, \"So you\\u2019ve seen how to add content to existing pages in Gatsby using Kentico Cloud. Next, you will start creating new pages of your own.\"), mdx(\"h4\", {\n    \"id\": \"creating-new-pages\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#creating-new-pages\",\n    \"aria-label\": \"creating new pages permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Creating new pages\"), mdx(\"p\", null, \"It\\u2019s great to be able to add content to existing static pages, but one of the great benefits of using CaaS is being able to define pages in Kentico Cloud and having them generated automatically. To see how, you\\u2019ll add pages based on content from the Sample Project in the Article type (feel free to explore how these are structured in Kentico Cloud).\"), mdx(\"p\", null, \"Start by making use of the URL pattern in the Article type to generate slugs for your Article nodes:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript:title=gatsby-node.js\"\n  }), \"exports.onCreateNode = ({ node, actions: { createNodeField } }) => {\\n  if (node.internal.type === `KenticoCloudItemArticle`) {\\n    createNodeField({\\n      node,\\n      name: `slug`,\\n      value: node.elements.url_pattern.value,\\n    })\\n  }\\n}\\n\")), mdx(\"p\", null, \"Now that you have a pretty way to define the path for your pages, you can create the pages programmatically:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript:title=gatsby-node.js\"\n  }), \"const path = require(`path`) // highlight-line\\n\\nexports.onCreateNode = ({ node, actions: { createNodeField } }) => {\\n  if (node.internal.type === `KenticoCloudItemArticle`) {\\n    createNodeField({\\n      node,\\n      name: `slug`,\\n      value: node.elements.url_pattern.value,\\n    })\\n  }\\n}\\n\\n// highlight-start\\nexports.createPages = async ({ graphql, actions }) => {\\n  const { createPage } = actions\\n\\n  // Query data from Kentico\\n  const result = await graphql(`\\n    {\\n      allKenticoCloudItemArticle {\\n        edges {\\n          node {\\n            fields {\\n              slug\\n            }\\n          }\\n        }\\n      }\\n    }\\n  `)\\n\\n  // Create pages\\n  result.data.allKenticoCloudItemArticle.edges.forEach(({ node }) => {\\n    createPage({\\n      path: node.fields.slug,\\n      component: path.resolve(`src/templates/article.js`),\\n      context: {\\n        slug: node.fields.slug,\\n      },\\n    })\\n  })\\n}\\n// highlight-end\\n\")), mdx(\"p\", null, \"Now create a basic template to display each article with a title and the body that you pull with a GraphQL query:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript:title=src/templates/article.js\"\n  }), \"import React from \\\"react\\\"\\nimport { graphql } from \\\"gatsby\\\"\\n\\nimport Layout from \\\"../components/layout\\\"\\n\\nconst Article = ({ data }) => {\\n  const item = data.kenticoCloudItemArticle.elements\\n\\n  return (\\n    <Layout>\\n      <h1>{item.title.value}</h1>\\n      <div dangerouslySetInnerHTML={{ __html: item.body_copy.value }} />\\n    </Layout>\\n  )\\n}\\n\\nexport default Article\\n\\nexport const query = graphql`\\n  query articleQuery($slug: String!) {\\n    kenticoCloudItemArticle(fields: { slug: { eq: $slug } }) {\\n      fields {\\n        slug\\n      }\\n      elements {\\n        body_copy {\\n          value\\n        }\\n        title {\\n          value\\n        }\\n      }\\n    }\\n  }\\n`\\n\")), mdx(\"p\", null, \"When you rerun \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby develop\"), \", you\\u2019ll be able to see each article as a page with content pulled from Kentico Cloud. To see a list of all pages, visit \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://localhost:8000/asdf\"), \" (or any other url that generates a 404).\"), mdx(\"p\", null, \"The body copy for this article comes from a rich text element in Kentico Cloud. Links and inline linked items (e.g., embedded videos) are not resolved by default for rich text elements. If you want to resolve them, you can use the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Kentico/gatsby-source-kentico-cloud#embedded-js-sdk-resolution\"\n  }), \"embedded JS SDK resolution\"), \" or query the required data in structured form for resolution and create your own React components for \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Kentico/gatsby-source-kentico-cloud#content-items-in-rich-text-elements\"\n  }), \"inline content items\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Kentico/gatsby-source-kentico-cloud#links-in-rich-text-elements\"\n  }), \"links\"), \", and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Kentico/gatsby-source-kentico-cloud#images-in-rich-text-elements\"\n  }), \"images\"), \".\"), mdx(\"p\", null, \"Now you know how to create pages programmatically and pull their content from Kentico Cloud. To get the most out of your CaaS, you\\u2019ll want to also make sure your site builds automatically whenever published content changes inside Kentico Cloud.\"), mdx(\"h3\", {\n    \"id\": \"continuous-deployment\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#continuous-deployment\",\n    \"aria-label\": \"continuous deployment permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Continuous deployment\"), mdx(\"p\", null, \"To keep your site static but always up to date with the latest content from Kentico Cloud, it helps to set up automatic deployment whenever your published content changes. Here, you can see how to set that up using \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.netlify.com/docs/continuous-deployment/\"\n  }), \"Netlify\"), \", but the principle is similar using other services like \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://travis-ci.org/\"\n  }), \"Travis CI\"), \", as with another \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Kentico/kentico.github.io/wiki/How-the-automatic-deployment-works\"\n  }), \"site sourced from Kentico Cloud\"), \".\"), mdx(\"p\", null, \"For simple automatic deployment from Netlify, first store your site\\u2019s source code in a Git provider such as GitHub. Then log in to Netlify (e.g., through the same Git provider), create a new site from Git, and choose your site\\u2019s source code. Netlify should automatically detect that you\\u2019re using Gatsby and include the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby build\"), \" command. If so, go ahead and deploy your site. Your site will now automatically build whenever you push changes to the source code in the Git repository.\"), mdx(\"p\", null, \"Now that your site\\u2019s up and running, you need to set up automatic builds when published content in Kentico Cloud changes. First, in Netlify \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.netlify.com/docs/webhooks/\"\n  }), \"create a new build hook\"), \" with a name like \\u201CChange in Kentico Cloud content\\u201D and copy the URL. Then go to Kentico Cloud. Under \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Project settings\"), \", choose \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Webhooks\"), \" and create a new webhook. Give it a name like \\u201CNetlify build\\u201D and paste the URL into the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"URL address\"), \" field. And that\\u2019s it. Now whenever published content changes (\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.kenticocloud.com/docs/webhooks#section-when-webhooks-are-called\"\n  }), \"see what actions call a webhook\"), \"), your webhook will trigger a build in Netlify to ensure your static content is updated to the latest version.\"), mdx(\"h2\", {\n    \"id\": \"whats-next\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#whats-next\",\n    \"aria-label\": \"whats next permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"What\\u2019s next?\"), mdx(\"p\", null, \"You\\u2019ve seen how to set up a simple Gatsby site that sources content from Kentico Cloud and is automatically redeployed on any change to the content. Kentico Cloud is capable of creating many other kinds of relationships, including taxonomies for categorization, multiple languages, and linking items together. Want to do more?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"See \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/Kentico/gatsby-source-kentico-cloud#features\"\n  }), \"more about what the Kentico Cloud source plugin can do\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Read the \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://developer.kenticocloud.com/docs\"\n  }), \"Kentico Cloud documentation\"), \" to see what\\u2019s possible.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Explore the \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/Kentico/gatsby-starter-kentico-cloud\"\n  }), \"Kentico Cloud Gatsby starter\"), \" to see a more complete example.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Read a \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/blog/2018-12-19-kentico-cloud-and-gatsby-take-you-beyond-static-websites/\"\n  }), \"blog post about using Kentico Cloud and Gatsby\"), \".\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "excerpt": "In this guide, you'll go through how to quickly source content for your Gatsby site from  Kentico Cloud . Kentico Cloud is a hosted CMS that…",
        "timeToRead": 5,
        "tableOfContents": {
          "items": [
            {
              "url": "#setup",
              "title": "Setup",
              "items": [
                {
                  "url": "#kentico-cloud",
                  "title": "Kentico Cloud"
                },
                {
                  "url": "#gatsby",
                  "title": "Gatsby",
                  "items": [
                    {
                      "url": "#adding-content-to-existing-pages",
                      "title": "Adding content to existing pages"
                    },
                    {
                      "url": "#creating-new-pages",
                      "title": "Creating new pages"
                    }
                  ]
                },
                {
                  "url": "#continuous-deployment",
                  "title": "Continuous deployment"
                }
              ]
            },
            {
              "url": "#whats-next",
              "title": "What's next?"
            }
          ]
        },
        "fields": {
          "slug": "/docs/sourcing-from-kentico-cloud/",
          "anchor": "sourcing-from-kentico-cloud"
        },
        "frontmatter": {
          "title": "Sourcing from Kentico Cloud",
          "overview": null,
          "issue": null,
          "disableTableOfContents": null,
          "tableOfContentsDepth": null
        },
        "parent": {
          "__typename": "File",
          "relativePath": "docs/sourcing-from-kentico-cloud.md"
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/docs/sourcing-from-kentico-cloud/"
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsMarkdownJs2546709735(\n  $path: String!\n) {\n  mdx(fields: {slug: {eq: $path}}) {\n    body\n    excerpt\n    timeToRead\n    tableOfContents\n    fields {\n      slug\n      anchor\n    }\n    frontmatter {\n      title\n      overview\n      issue\n      disableTableOfContents\n      tableOfContentsDepth\n    }\n    ...MarkdownPageFooterMdx\n  }\n}\n\nfragment MarkdownPageFooterMdx on Mdx {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}