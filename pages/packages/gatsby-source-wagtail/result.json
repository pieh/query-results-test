{
  "path": "/packages/gatsby-source-wagtail/",
  "result": {
    "data": {
      "markdownRemark": null,
      "npmPackage": {
        "name": "gatsby-source-wagtail",
        "description": "Gatsby plugin which adds Wagtail Grapple support to Gatsby",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "graphql",
          "universal"
        ],
        "lastPublisher": {
          "name": "nathanhorrigan",
          "avatar": "https://gravatar.com/avatar/0372990e5694c624a1ce4a8262ef7b95"
        },
        "repository": {
          "url": "https://github.com/NathHorrigan/gatsby-source-wagtail"
        },
        "readme": {
          "childMarkdownRemark": {
            "html": "<h1 id=\"gatsby-source-wagtail\"><a href=\"#gatsby-source-wagtail\" aria-label=\"gatsby source wagtail permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>gatsby-source-wagtail</h1>\n<blockquote>\n<p>NOTE: This plugin requires that your Wagtail site uses the <a href=\"https://github.com/Torchbox/wagtail-grapple\">Wagtail-Grapple</a>\nlibrary to build a compatible GraphQL endpoint. This plugin requires an existing GraphQL endoint and does not work with\nwagtail out of the box.</p>\n</blockquote>\n<h2 id=\"features-\"><a href=\"#features-\" aria-label=\"features  permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Features: ðŸš€</h2>\n<ul>\n<li>Stitches your Wagtail GraphQL endpoint into your internal Gastby one.</li>\n<li>Simple router that matches your Django models to Gatsby templates.</li>\n<li>Redirect support which makes your Wagtail redirects work with sites hosted on Netlify &#x26; S3.</li>\n<li>Out-of-the-box support for Wagtail Preview with realtime updates as you type in the admin.</li>\n<li>Fragments for cool images with <a href=\"https://github.com/nathhorrigan/gatsby-image\">Gatsby Image</a>.</li>\n</ul>\n<h2 id=\"how-to-use\"><a href=\"#how-to-use\" aria-label=\"how to use permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to use</h2>\n<h3 id=\"installation\"><a href=\"#installation\" aria-label=\"installation permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installation</h3>\n<p>Just install the package via NPM:\n<code class=\"language-text\">npm install gatsby-source-wagtail</code></p>\n<blockquote>\n<p>If you want to use the Gatsby Image fragments then you will need to install the server-side Wagtail library for this also:\n<a href=\"https://github.com/torchbox/wagtail-gatsby\">Wagtail Gatsby</a>.</p>\n</blockquote>\n<h3 id=\"configuration\"><a href=\"#configuration\" aria-label=\"configuration permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuration</h3>\n<p>Simply add the package to your <code class=\"language-text\">gatsby-config.js</code> with the url to your Wagtail GQL endpoint:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">...</span>\n<span class=\"token punctuation\">{</span>\n  resolve<span class=\"token punctuation\">:</span> <span class=\"token string\">\"gatsby-source-wagtail\"</span><span class=\"token punctuation\">,</span>\n  options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    url<span class=\"token punctuation\">:</span> <span class=\"token string\">\"http://localhost:8000/graphql\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token operator\">...</span></code></pre></div>\n<h4 id=\"available-config-options\"><a href=\"#available-config-options\" aria-label=\"available config options permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Available Config Options</h4>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Required</th>\n<th>Description</th>\n<th>Datatype</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>url</td>\n<td>Y</td>\n<td>The url of the Wagtail GraphQL endpoint</td>\n<td>string</td>\n<td>null</td>\n</tr>\n<tr>\n<td>websocketUrl</td>\n<td>N*</td>\n<td>The url of your GraphQL subscriptions endpoint, during development this can be inferred but will likely need to be set in a production env</td>\n<td>string</td>\n<td>N/A</td>\n</tr>\n<tr>\n<td>headers</td>\n<td>N</td>\n<td>A JSON object of headers you want appended to all HTTP requests (Gatsby Build + Page Preview).</td>\n<td>json</td>\n<td>{}</td>\n</tr>\n<tr>\n<td>fieldName</td>\n<td>N*</td>\n<td>The field name you want your remote endpoint accessible under. If you have multiple connections then you will need to provide a value for at least one of them.</td>\n<td>string</td>\n<td>wagtail</td>\n</tr>\n<tr>\n<td>typeName</td>\n<td>N*</td>\n<td>The internal type name of the remote schema. You can ignore this unless you have multiple connections, if so, you will need to provide a value (just copy fieldName).</td>\n<td>string</td>\n<td>wagtail</td>\n</tr>\n<tr>\n<td>isDefault</td>\n<td>N*</td>\n<td>A settings that tells the plugin which Wagtail is the default is the primary/default one and should be used for preview and page generation. If you have multiple connections then you need to choose which one you will generate pages from, multiple site page generation is planned for future development.</td>\n<td>string</td>\n<td>true</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"page-router\"><a href=\"#page-router\" aria-label=\"page router permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Page Router</h3>\n<p>This source plugin provides an easy to use router that maps a Django model to a specifc Gatsby template. Simply pass a JSON map like\nso to the function in your <code class=\"language-text\">gatsby-node.js</code>. This router also adds Wagtail Preview to your Gatsby site automagically! Now just point your backend\nto your Gatsby site and everything will work: <a href=\"LINK%20TO%20BACKEND%20DOCS\">How to link Wagtail &#x26; Gatsby</a>.</p>\n<p>This maps a Django model with Contentype of <code class=\"language-text\">home.BlogPage</code> to a template located at <code class=\"language-text\">./src/templates/blog.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createWagtailPages <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gatsby-source-wagtail/pages.js\"</span><span class=\"token punctuation\">)</span>\n\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">createPages</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> graphql<span class=\"token punctuation\">,</span> actions <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">createWagtailPages</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"home.BlogPage\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"templates/blog.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> graphql<span class=\"token punctuation\">,</span> actions<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Here is an example template:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token operator\">...</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function-variable function\">BlogPage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> page <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>wagtail\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span> page<span class=\"token punctuation\">.</span>title <span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  )\n}\n\nexport const query = graphql`\n  query($slug: String) {\n    wagtail {\n      page(slug: $slug) {\n        ...on BlogPage {\n          title\n        }\n      }\n    }\n  }\n`</span></code></pre></div>\n<p>As you can see some information about the specific page is passed to page through gatsbyâ€™s context prop. The following passed\nvariables and hence are availble in the templates GraphQL query are:</p>\n<ul>\n<li>$id: Int</li>\n<li>$slug: String</li>\n<li>$url: String</li>\n<li>$contentType: String</li>\n</ul>\n<h3 id=\"redirects\"><a href=\"#redirects\" aria-label=\"redirects permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redirects</h3>\n<p>There isnâ€™t much you need to know about redirects, basically the plugin queries your Wagtail endpoint for any redirects\nthat have been defined and if they exist then they are passed to Gatsby <code class=\"language-text\">createRedirect</code> function which works out of the\nbox with Netlify &#x26; S3 hosting.</p>\n<h3 id=\"image-fragments\"><a href=\"#image-fragments\" aria-label=\"image fragments permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Image Fragments</h3>\n<p>As mentioned, the library supports Gatsby Image assuming the <a href=\"https://github.com/nathhorrigan/wagtail-gatsby\">Wagtail Gatsby</a>\nhas been installed. The availble image fragments are:</p>\n<ul>\n<li>WagtailImageFixed</li>\n<li>WagtailImageFixed_tracedSVG</li>\n<li>WagtailImageFixed_noBase64</li>\n<li>WagtailImageFluid</li>\n<li>WagtailImageFluid_tracedSVG</li>\n<li>WagtailImageFluid_noBase64</li>\n</ul>",
            "timeToRead": 4
          }
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/packages/gatsby-source-wagtail/",
      "id": "03b40e7f-a551-5379-9d47-d3a29a67d713",
      "layout": "plugins"
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsRemotePackagesJs803499274(\n  $slug: String!\n) {\n  markdownRemark(fields: {slug: {eq: $slug}}) {\n    ...MarkdownPageFooter\n  }\n  npmPackage(slug: {eq: $slug}) {\n    name\n    description\n    keywords\n    lastPublisher {\n      name\n      avatar\n    }\n    repository {\n      url\n    }\n    readme {\n      childMarkdownRemark {\n        html\n        timeToRead\n      }\n    }\n  }\n}\n\nfragment MarkdownPageFooter on MarkdownRemark {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}