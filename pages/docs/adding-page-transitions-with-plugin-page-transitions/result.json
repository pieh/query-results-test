{
  "path": "/docs/adding-page-transitions-with-plugin-page-transitions/",
  "result": {
    "data": {
      "mdx": {
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Adding Page Transitions with gatsby-plugin-page-transitions\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-plugin-page-transitions\"), \" is a Gatsby plugin that allows you to add page transitions to your Gatsby site.\"), mdx(\"p\", null, \"This guide will cover the setup and the various ways you can utilize this plugin.\"), mdx(\"p\", null, \"This is a stub. Help our community expand it.\"), mdx(\"p\", null, \"Please use the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/contributing/gatsby-style-guide/\"\n  }), \"Gatsby Style Guide\"), \" to ensure your\\npull request gets accepted.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "excerpt": "gatsby-plugin-page-transitions  is a Gatsby plugin that allows you to add page transitions to your Gatsby site. This guide will cover theâ€¦",
        "timeToRead": 1,
        "tableOfContents": {},
        "fields": {
          "slug": "/docs/adding-page-transitions-with-plugin-page-transitions/",
          "anchor": "adding-page-transitions-with-plugin-page-transitions"
        },
        "frontmatter": {
          "title": "Adding Page Transitions with gatsby-plugin-page-transitions",
          "overview": null,
          "issue": null,
          "disableTableOfContents": null,
          "tableOfContentsDepth": null
        },
        "parent": {
          "__typename": "File",
          "relativePath": "docs/adding-page-transitions-with-plugin-page-transitions.md"
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/docs/adding-page-transitions-with-plugin-page-transitions/",
      "prev": {
        "title": "Adding Page Transitions with gatsby-plugin-transition-link",
        "link": "/docs/adding-page-transitions-with-plugin-transition-link/",
        "breadcrumbTitle": "gatsby-plugin-transition-link"
      },
      "next": {
        "title": "Making Your Site Accessible",
        "link": "/docs/making-your-site-accessible/"
      }
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsMarkdownJs2546709735(\n  $path: String!\n) {\n  mdx(fields: {slug: {eq: $path}}) {\n    body\n    excerpt\n    timeToRead\n    tableOfContents\n    fields {\n      slug\n      anchor\n    }\n    frontmatter {\n      title\n      overview\n      issue\n      disableTableOfContents\n      tableOfContentsDepth\n    }\n    ...MarkdownPageFooterMdx\n  }\n}\n\nfragment MarkdownPageFooterMdx on Mdx {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}