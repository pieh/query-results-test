{
  "path": "/blog/2019-05-17-improvements-to-schema-customization/",
  "result": {
    "data": {
      "mdx": {
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Improvements to Schema Customization API - Available in Gatsby 2.5.0\",\n  \"date\": \"2019-05-17T00:00:00.000Z\",\n  \"author\": \"Mikhail Novikov\",\n  \"tags\": [\"graphql\", \"releases\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Today we are releasing further improvements to the schema customization that \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/blog/2019-03-18-releasing-new-schema-customization\"\n  }), \"we\\u2019ve released in version 2.2.0\"), \". You can use them with Gatsby 2.5.0.\"), mdx(\"p\", null, \"It is now possible to indicate to Gatsby, that you want to add a resolver to an explicitly defined fields. Use extensions like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@link\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@dateformat\"), \" to add default arguments or/and resolvers to fields. In addition, when \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@dontInfer\"), \" is set, Gatsby will no longer run inference for marked type, allowing one to improve performance for large data sets.\"), mdx(\"h2\", {\n    \"id\": \"summary\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#summary\",\n    \"aria-label\": \"summary permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Summary\"), mdx(\"p\", null, \"After about a month of testing schema customization both pre and post release, we determined a couple of issues. The original aim of our schema customisation work was to remove uncertainty in a user\\u2019s schemas when their data changes.\"), mdx(\"p\", null, \"However, the original design allowed some uncertainties to still creep in. In addition, it made inference a heavier process, trading performance for consistency without providing a way to opt-out completely. To summarize, the schema customization work released in Gatsby 2.2.0 suffered from a few non-ideal issues:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Resolvers and arguments of fields like Date and File was determined by inferred data\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"There was no easy way to use arguments/resolvers to override the above\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Inference was run even when \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"@dontInfer\"), \" flag was on\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"There was no way to control inference outside of SDL, eg in Type Builders\")), mdx(\"p\", null, \"Therefore we are excited to announce some changes in how we perform inference. In addition, we are deprecating some of the features introduced in 2.2.0 and will remove them in Gatsby v3.\"), mdx(\"h2\", {\n    \"id\": \"changes-in-gatsby-250\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#changes-in-gatsby-250\",\n    \"aria-label\": \"changes in gatsby 250 permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Changes in Gatsby 2.5.0\"), mdx(\"h3\", {\n    \"id\": \"nodefaultresolvers-and-inference-modes\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#nodefaultresolvers-and-inference-modes\",\n    \"aria-label\": \"nodefaultresolvers and inference modes permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"noDefaultResolvers\"), \" and inference modes\"), mdx(\"p\", null, \"First of all, we are deprecating \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"noDefaultResolvers\"), \". It was an argument of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"infer\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dontInfer\"), \". We feel it was confusing and in some cases it didn\\u2019t even actually add resolvers :). We will support \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"noDefaultResolvers\"), \" until version 3, after which \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@infer\"), \" behavior (see below) will become a default and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"noDefaultResolvers\"), \" will be removed.\"), mdx(\"p\", null, \"We didn\\u2019t want to break things, so we keep old default behavior, even though we think it\\u2019s not optimal. Add explicit \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@infer\"), \" and resolver extensions (like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@link\"), \") to fields to be future proof.\"), mdx(\"h4\", {\n    \"id\": \"default-deprecated-removed-in-v3\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#default-deprecated-removed-in-v3\",\n    \"aria-label\": \"default deprecated removed in v3 permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Default (deprecated, removed in v3)\"), mdx(\"p\", null, \"Applies with no \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@infer\"), \" and no \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@dontInfer\"), \" on a type. Equals to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@infer(noDefaultResolvers: false)\"), \".\"), mdx(\"p\", null, \"Type gets all inferred fields added. If type has defined fields of types \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Date\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"File\"), \" and any other node, and we inferred that they should have resolver options, resolver options will be added to type with a warning.\"), mdx(\"h4\", {\n    \"id\": \"strict-inference-future-default-in-v3\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#strict-inference-future-default-in-v3\",\n    \"aria-label\": \"strict inference future default in v3 permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Strict inference (future default in v3)\"), mdx(\"p\", null, \"Applies with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@infer\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@infer(noDefaultResolvers: true)\"), \".\"), mdx(\"p\", null, \"Type gets all inferred fields added. Existing fields won\\u2019t automatically get resolvers (use the provided resolver extensions).\"), mdx(\"h4\", {\n    \"id\": \"no-inference\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#no-inference\",\n    \"aria-label\": \"no inference permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"No inference\"), mdx(\"p\", null, \"Applies with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@dontInfer\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@dontInfer(noDefaultResolvers: true)\"), \".\"), mdx(\"p\", null, \"Inference won\\u2019t run at all. Existing fields won\\u2019t automatically get resolvers (use resolver extensions).\"), mdx(\"h4\", {\n    \"id\": \"no-new-fields-with-default-resolvers-deprecated-removed-in-v3\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#no-new-fields-with-default-resolvers-deprecated-removed-in-v3\",\n    \"aria-label\": \"no new fields with default resolvers deprecated removed in v3 permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"No new fields with default resolvers (deprecated, removed in v3)\"), mdx(\"p\", null, \"Applies with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@dontInfer(noDefaultResolvers: false)\")), mdx(\"p\", null, \"Inference will run, but fields won\\u2019t be added. If a type has defined fields of types \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Date\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"File\"), \", and any other node, and we inferred that they should have resolvers/args. These will still be added in Gatsby v2, but we will now warn and note the deprecation.\"), mdx(\"h3\", {\n    \"id\": \"migrating-your-code\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#migrating-your-code\",\n    \"aria-label\": \"migrating your code permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Migrating your code\"), mdx(\"p\", null, \"Here are suggested changes to your code if you are using schema customization already. Your code will work in Gatsby 2.5.0, but those changes will ensure it stays compatible with Gatsby 3.0\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Add resolver directives to fields\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Add \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"@infer\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"@dontInfer\"), \" to your type if you don\\u2019t have it already\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql:title=gatsby-node.js\"\n  }), \"exports.sourceNodes = function sourceNodes({ actions }) {\\n  const { createTypes } = actions\\n\\n  createTypes(`\\n    type MyType {\\n      date: Date\\n      image: File\\n      authorByEmail: AuthorJson\\n    }\\n  `)\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql:title=gatsby-node.js\"\n  }), \"exports.sourceNodes = function sourceNodes({ actions }) {\\n  const { createTypes } = actions\\n\\n  createTypes(`\\n    type MyType @infer {\\n      date: Date @dateformat\\n      image: File @fileByRelativePath\\n      authorByEmail: Author @link\\n    }\\n  `)\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"resolver-extensions\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#resolver-extensions\",\n    \"aria-label\": \"resolver extensions permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Resolver extensions\"), mdx(\"p\", null, \"Add resolver and resolver options (such as arguments) to the given field. There are currently 3 extensions available.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"@dateformat\"), \" - add date formatting arguments. Accepts \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"formatString\"), \" and\\n\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"locale\"), \" options that sets the defaults for this field\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"@link\"), \" - connect to a different Node. Arguments \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"by\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"from\"), \", which\\ndefine which field to compare to on a remote node and which field to use on\\nthe source node\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"@fileByRelativePath\"), \" - connect to a File node. Same arguments. The\\ndifference from link is that this normalizes the relative path to be\\nrelative from the path where source node is found.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"proxy\"), \" - in case the underlying node data contains field names with\\ncharacters that are invalid in GraphQL, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"proxy\"), \" allows to explicitly\\nproxy those properties to fields with valid field names. Takes a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"from\"), \" arg.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql:title=gatsby-node.js\"\n  }), \"exports.sourceNodes = function sourceNodes({ actions }) {\\n  const { createTypes } = actions\\n\\n  createTypes(`\\n    type MyType @infer {\\n      date: Date @dateformat(formatString: \\\"DD MMM\\\", locale: \\\"fi\\\")\\n      image: File @fileByRelativePath\\n      authorByEmail: Author @link(by: \\\"email\\\")\\n    }\\n  `)\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"type-builders-and-extensions\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#type-builders-and-extensions\",\n    \"aria-label\": \"type builders and extensions permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Type Builders and extensions\"), mdx(\"p\", null, \"You can now apply configuration to type builder types through an exposed \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"extensions\"), \" property.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"schema.buildObjectType({\\n  name: MyType,\\n  extensions: {\\n    infer: true,\\n  },\\n  fields: {\\n    date: {\\n      type: \\\"Date\\\",\\n      extensions: {\\n        dateformat: {\\n          formatString: \\\"DD MMM\\\",\\n          locale: \\\"fi\\\",\\n        },\\n      },\\n    },\\n  },\\n})\\n\")), mdx(\"h2\", {\n    \"id\": \"conclusions\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#conclusions\",\n    \"aria-label\": \"conclusions permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Conclusions\"), mdx(\"p\", null, \"With these improvements we are confident that we\\u2019ve solved some pain points that people may have been experiencing with the schema customization API. We would love for feedback about these new features and schema customization, in general. Please post your thoughts to the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/issues/12272\"\n  }), \"schema customization umbrella issue\"), \" if you encounter any problems or have any suggestions!\"), mdx(\"p\", null, \"However, this is but a start and a path of continual, gradual improvement. We are continuously working on further improvements, like allowing users and plugins to define their own extensions (see \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/pull/13738\"\n  }), \"PR #13738\"), \").\"), mdx(\"h2\", {\n    \"id\": \"helpful-links\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#helpful-links\",\n    \"aria-label\": \"helpful links permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Helpful links\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.gatsbyjs.org/docs/actions/#createTypes\"\n  }), \"createTypes Documentation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/issues/12272\"\n  }), \"Umbrella issue for schema customization bug reports\"))));\n}\n;\nMDXContent.isMDXComponent = true;",
        "excerpt": "Today we are releasing further improvements to the schema customization that  we've released in version 2.2.0 . You can use them with Gatsby…",
        "timeToRead": 3,
        "fields": {
          "slug": "/blog/2019-05-17-improvements-to-schema-customization/",
          "publishedAt": null
        },
        "frontmatter": {
          "title": "Improvements to Schema Customization API - Available in Gatsby 2.5.0",
          "excerpt": null,
          "date": "May 17th 2019",
          "rawDate": "2019-05-17T00:00:00.000Z",
          "canonicalLink": null,
          "tags": [
            "graphql",
            "releases"
          ],
          "image": null,
          "imageAuthor": null,
          "imageAuthorLink": null,
          "imageTitle": null,
          "showImageInArticle": null,
          "author": {
            "id": "Mikhail Novikov",
            "bio": "GraphQL sommelier. Did Reindex, GraphQL Delegation, Schema Stitching, Launchpad. Organizer @GraphQLFinland.",
            "twitter": "@freiksenet",
            "avatar": {
              "childImageSharp": {
                "fixed": {
                  "tracedSVG": "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%3e%3crect%20width='100%25'%20height='100%25'%20fill='%23f6f2f8'/%3e%3cpath%20d='M12%209v8l2%204%201%203%201%203-1%203h5c6%200%207%200%205-5v-6c0-2-4-3-4-1l-3%201c-2%200-3-7-2-9l1-2c-2-2-4-1-5%201'%20fill='%23e0d6eb'%20fill-rule='evenodd'/%3e%3c/svg%3e",
                  "width": 64,
                  "height": 64,
                  "src": "/static/5429bb44f659c90adf5ad9756da87eaa/88ae8/freiksenet.jpg",
                  "srcSet": "/static/5429bb44f659c90adf5ad9756da87eaa/88ae8/freiksenet.jpg 1x,\n/static/5429bb44f659c90adf5ad9756da87eaa/0740f/freiksenet.jpg 1.5x,\n/static/5429bb44f659c90adf5ad9756da87eaa/c9264/freiksenet.jpg 2x"
                }
              }
            },
            "fields": {
              "slug": "/contributors/mikhail-novikov/"
            }
          }
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/blog/2019-05-17-improvements-to-schema-customization/",
      "prev": {
        "fields": {
          "slug": "/blog/2019-05-15-enterprise-gatsby-how-to-reduce-your-digital-total-cost-of-ownership-with-gatsby/",
          "package": null,
          "released": true
        },
        "frontmatter": {
          "title": "Enterprise Gatsby: How to Reduce Your Digital Total Cost of Ownership (TCO) with Gatsby",
          "draft": null,
          "canonicalLink": null,
          "publishedAt": null,
          "issue": null,
          "tags": [
            "accessibility",
            "ecommerce",
            "enterprise",
            "performance",
            "security"
          ]
        }
      },
      "next": {
        "fields": {
          "slug": "/blog/2019-05-07-advanced-sitemap-plugin-for-seo/",
          "package": null,
          "released": true
        },
        "frontmatter": {
          "title": "Advanced Sitemap Plugin for SEO",
          "draft": null,
          "canonicalLink": null,
          "publishedAt": null,
          "issue": null,
          "tags": [
            "ghost",
            "seo",
            "plugins",
            "headless-cms"
          ]
        }
      }
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateBlogPostJs2991924798(\n  $slug: String!\n) {\n  mdx(fields: {slug: {eq: $slug}}) {\n    body\n    excerpt\n    timeToRead\n    fields {\n      slug\n      publishedAt\n    }\n    frontmatter {\n      title\n      excerpt\n      date(formatString: \"MMMM Do YYYY\")\n      rawDate: date\n      canonicalLink\n      tags\n      image {\n        childImageSharp {\n          resize(width: 1500, height: 1500) {\n            src\n          }\n          fluid(maxWidth: 786) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      imageAuthor\n      imageAuthorLink\n      imageTitle\n      showImageInArticle\n      author {\n        id\n        bio\n        twitter\n        avatar {\n          childImageSharp {\n            fixed(width: 64, height: 64, quality: 75, traceSVG: {turdSize: 10, background: \"#f6f2f8\", color: \"#e0d6eb\"}) {\n              ...GatsbyImageSharpFixed_tracedSVG\n            }\n          }\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n}\n\nfragment GatsbyImageSharpFluid on ImageSharpFluid {\n  base64\n  aspectRatio\n  src\n  srcSet\n  sizes\n}\n\nfragment GatsbyImageSharpFixed_tracedSVG on ImageSharpFixed {\n  tracedSVG\n  width\n  height\n  src\n  srcSet\n}\n"
}