{
  "path": "/docs/creating-a-source-plugin/",
  "result": {
    "data": {
      "mdx": {
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Creating a Source Plugin\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"There are two types of plugins that work within Gatsby\\u2019s data system: \\u201Csource\\u201D\\nand \\u201Ctransformer\\u201D plugins.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Source\"), \" plugins \\u201Csource\\u201D data from remote or local locations into what\\nGatsby calls \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/docs/node-interface/\"\n  }), \"nodes\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Transformer\"), \" plugins \\u201Ctransform\\u201D data provided by source plugins into new\\nnodes and/or node fields.\")), mdx(\"p\", null, \"This doc focuses on source plugins and uses \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-source-filesystem\"), \" to explain how source plugins work.\"), mdx(\"h2\", {\n    \"id\": \"what-do-source-plugins-do\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#what-do-source-plugins-do\",\n    \"aria-label\": \"what do source plugins do permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"What do source plugins do?\"), mdx(\"p\", null, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/packages/gatsby-source-filesystem/\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"gatsby-source-filesystem\")), \" plugin\\n\\u201Csources\\u201D data about files from the file system. It creates nodes with a type\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"File\"), \", each File node corresponding to a file on the filesystem. On each node\\nare fields like the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"absolutePath\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"extension\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"modifiedTime\"), \", etc.\"), mdx(\"h2\", {\n    \"id\": \"what-fields-are-required\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#what-fields-are-required\",\n    \"aria-label\": \"what fields are required permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"What fields are required?\"), mdx(\"h3\", {\n    \"id\": \"media-type-is-not-required-yet-necessary-to-work-with-transformer-plugins\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#media-type-is-not-required-yet-necessary-to-work-with-transformer-plugins\",\n    \"aria-label\": \"media type is not required yet necessary to work with transformer plugins permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"media type\"), \" is not required, yet necessary to work with transformer plugins\"), mdx(\"p\", null, \"Each node created by the filesystem source plugin includes the\\nraw content of the file and its \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"media type\"), \".\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Media_type\"\n  }), \"A \", mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"media type\")), \" (also \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"MIME type\"), \"\\nand \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"content type\"), \") are an official way to identify the format of\\nfiles/content that is transmitted on the internet e.g. over HTTP or through\\nemail. You\\u2019re probably familiar with many media types such as\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"application/javascript\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"application/pdf\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"audio/mpeg\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"text/html\"), \",\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"text/plain\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"image/jpeg\"), \", etc.\"), mdx(\"p\", null, \"Each source plugin is responsible for setting the media type for the nodes they\\ncreate. This way, source and transformer plugins can work together easily.\"), mdx(\"p\", null, \"This is not a required field but it\\u2019s the way for source plugins to indicate to\\ntransformers that there is \\u201Craw\\u201D data that can still be further processed. It\\nallows plugins to remain small and focused. Source plugins don\\u2019t have to have\\nopinions on how to transform their data. They can just set the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mediaType\"), \" and\\npush that responsibility to transformer plugins.\"), mdx(\"p\", null, \"For example, it\\u2019s quite common for services to allow you to add content as\\nmarkdown. If you pull that markdown into Gatsby and create a new node, what\\nthen? How would a user of your source plugin convert that markdown into HTML\\nthey can use in their site? Luckily you don\\u2019t have to do anything. Just create a\\nnode for the markdown content and set its mediaType as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"text/markdown\"), \" and the\\nvarious Gatsby markdown transformer plugins will see your node and transform it\\ninto HTML.\"), mdx(\"p\", null, \"This loose coupling between the data source and the transformer plugins allow Gatsby site builders to quickly assemble complex data transformation pipelines with\\nlittle work on their (and your (the source plugin author)) part.\"), mdx(\"h2\", {\n    \"id\": \"what-does-the-code-look-like\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#what-does-the-code-look-like\",\n    \"aria-label\": \"what does the code look like permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"What does the code look like?\"), mdx(\"p\", null, \"A source plugin is a normal NPM package. It has a package.json with optional\\ndependencies as well as a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-node.js\"), \" where you implement Gatsby\\u2019s Node.js\\nAPIs. Gatsby\\u2019s minimum supported Node.js version is Node 8 and as it\\u2019s common to want to use more modern Node.js and JavaScript syntax, many plugins write code in a\\nsource directory and compile the code. All plugins maintained in the Gatsby repo\\nfollow this pattern.\"), mdx(\"p\", null, \"Your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-node.js\"), \" should look something like:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript:title=gatsby-node.js\"\n  }), \"exports.sourceNodes = async ({ actions }) => {\\n  const { createNode } = actions\\n  // Create nodes here, generally by downloading data\\n  // from a remote API.\\n  const data = await fetch(REMOTE_API)\\n\\n  // Process data into nodes.\\n  data.forEach(datum => createNode(processDatum(datum)))\\n\\n  // We're done, return.\\n  return\\n}\\n\")), mdx(\"p\", null, \"Peruse the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/node-apis/#sourceNodes\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"sourceNodes\")), \" and\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/actions/#createNode\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"createNode\")), \" docs for detailed\\ndocumentation on implementing those APIs.\"), mdx(\"h2\", {\n    \"id\": \"what-are-the-jobs-of-a-source-plugin\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#what-are-the-jobs-of-a-source-plugin\",\n    \"aria-label\": \"what are the jobs of a source plugin permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"What are the jobs of a source plugin?\"), mdx(\"p\", null, \"At a high-level, these are the jobs of a source plugin:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ensure local data is synced with its source and 100% accurate. If your source\\nallows you to add an \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"updatedSince\"), \" query (or something similar) you can store\\nthe last time you fetched data using\\n\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/docs/actions/#setPluginStatus\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"setPluginStatus\")), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create nodes with accurate media types, human meaningful types, and accurate\\ncontentDigests.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u201CLink\\u201D nodes types you create as appropriate (see\\n\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/docs/api-specification/\"\n  }), mdx(\"em\", {\n    parentName: \"a\"\n  }, \"Node Link\")), \" in the API specification concepts\\nsection).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Return either a promise or use the callback (3rd parameter) to report back to Gatsby when \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sourceNodes\"), \" is fully executed. If a promise or callback isn\\u2019t returned, Gatsby will continue on in the build process, before nodes are finished being created. Your nodes might not end up in the generated schema at compilation, or the process will hang while waiting for an indication that it\\u2019s finished.\")), mdx(\"h2\", {\n    \"id\": \"getting-helper-functions\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#getting-helper-functions\",\n    \"aria-label\": \"getting helper functions permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Getting helper functions\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/angeloashmore/gatsby-node-helpers\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"gatsby-node-helpers\")), \",\\na community-made NPM package, can help when writing source plugins. This\\npackage provides a set of helper functions to generate Node objects with the\\nrequired fields. This includes automatically generating fields like node IDs\\nand the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"contentDigest\"), \" MD5 hash, keeping your code focused on data gathering,\\nnot boilerplate.\"), mdx(\"h2\", {\n    \"id\": \"advanced\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#advanced\",\n    \"aria-label\": \"advanced permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Advanced\"), mdx(\"h2\", {\n    \"id\": \"two-ways-of-adding-relationships-between-nodes\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#two-ways-of-adding-relationships-between-nodes\",\n    \"aria-label\": \"two ways of adding relationships between nodes permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Two ways of adding relationships between nodes\"), mdx(\"p\", null, \"Gatsby source plugins not only create nodes, they also create relationships between nodes that are exposed to GraphQL queries.\"), mdx(\"p\", null, \"There are two ways of adding node relationships in Gatsby: (1) transformations (parent-child) or (2) foreign-key based.\"), mdx(\"h3\", {\n    \"id\": \"option-1-transformation-relationships\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#option-1-transformation-relationships\",\n    \"aria-label\": \"option 1 transformation relationships permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Option 1: transformation relationships\"), mdx(\"p\", null, \"An example of a transformation relationship is the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-transformer-remark\"), \" plugin, which transforms a parent \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"File\"), \" node\\u2019s markdown string into a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MarkdownRemark\"), \" node. The Remark transformer plugin adds its newly created child node as a child of the parent node using the action \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/actions/#createParentChildLink\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"createParentChildLink\")), \". Transformation relationships are used when a new node is \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"completely\"), \" derived from a single parent node. E.g. the markdown node is derived from the parent \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"File\"), \" node and wouldn\\u2019t ever exist if the parent \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"File\"), \" node hadn\\u2019t been created.\"), mdx(\"p\", null, \"Because all children nodes are derived from their parent, when a parent node is deleted or changed, Gatsby deletes all of the child nodes (and their child nodes, and so on) with the expectation that they\\u2019ll be recreated again by transformer plugins. This is done to ensure there are no nodes left over that were derived from older versions of data but shouldn\\u2019t exist any longer.\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Creating the transformation relationship\")), mdx(\"p\", null, \"In order to create a parent/child relationship, when calling \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"createNode\"), \" for the child node, the new node object that is passed in should have a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"parent\"), \" key with the value set to the parent node\\u2019s \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"id\"), \". After this, call the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"createParentChildLink\"), \" function exported inside \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"actions\"), \".\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Examples\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/72077527b4acd3f2109ed5a2fcb780cddefee35a/packages/gatsby-transformer-remark/src/on-node-create.js#L39-L67\"\n  }), \"Here\\u2019s the above example\"), \" from the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-transformer-remark\"), \" source plugin.\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/1fb19f9ad16618acdac7eda33d295d8ceba7f393/packages/gatsby-transformer-sharp/src/on-node-create.js#L3-L25\"\n  }), \"Here\\u2019s another example\"), \" from the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-transformer-sharp\"), \" source plugin.\"), mdx(\"h3\", {\n    \"id\": \"option-2-foreign-key-relationships\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#option-2-foreign-key-relationships\",\n    \"aria-label\": \"option 2 foreign key relationships permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Option 2: foreign-key relationships\"), mdx(\"p\", null, \"An example of a foreign-key relationship would be a Post that has an Author.\"), mdx(\"p\", null, \"In this relationship, each object is a distinct entity that exists whether or not the other does, with independent schemas, and field(s) on each entity that reference the other entity \\u2014 in this case the Post would have an Author, and the Author might have Posts. The API of a service that allows complex object modelling, for example a CMS, will often allow users to add relationships between entities and expose them through the API.\"), mdx(\"p\", null, \"When an object node is deleted, Gatsby \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"does not\"), \" delete any referenced entities. When using foreign-key references, it\\u2019s a source plugin\\u2019s responsibility to clean up any dangling entity references.\"), mdx(\"h4\", {\n    \"id\": \"creating-the-relationship\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#creating-the-relationship\",\n    \"aria-label\": \"creating the relationship permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Creating the relationship\"), mdx(\"p\", null, \"Let\\u2019s say you want to create a relationship between Posts and Authors, and let\\u2019s say you want to call the field \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"author\"), \".\"), mdx(\"p\", null, \"Before you pass the Post object and Author object into \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"createNode\"), \" and create the respective nodes, you need to create a field called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"author___NODE\"), \" on the Post object to hold the relationship to Authors. The value of this field should be the node ID of the Author.\"), mdx(\"h4\", {\n    \"id\": \"creating-the-reverse-relationship\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#creating-the-reverse-relationship\",\n    \"aria-label\": \"creating the reverse relationship permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Creating the reverse relationship\"), mdx(\"p\", null, \"It\\u2019s often convenient for querying to add to the schema backwards references. For example, you might want to query the Author of a Post but you might also want to query all the posts an author has written.\"), mdx(\"p\", null, \"If you want to call this field on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Author\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"posts\"), \", you would create a field called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"posts___NODE\"), \" to hold the relationship to Posts. The value of this field should be an array of Post IDs.\"), mdx(\"p\", null, \"Here\\u2019s an example from the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/1fb19f9ad16618acdac7eda33d295d8ceba7f393/packages/gatsby-source-wordpress/src/normalize.js#L178-L189\"\n  }), \"WordPress source plugin\"), \".\"), mdx(\"h3\", {\n    \"id\": \"union-types\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#union-types\",\n    \"aria-label\": \"union types permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Union types\"), mdx(\"p\", null, \"When creating fields linking to an array of nodes, if the array of IDs are all of the same type, the relationship field that is created will be of this type. If the linked nodes are of different types; the field will turn into a union type of all types that are linked. See the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://graphql.org/learn/schema/#union-types\"\n  }), \"GraphQL documentation on how to query union types\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "excerpt": "There are two types of plugins that work within Gatsby's data system: \"source\"\nand \"transformer\" plugins. Source  plugins \"source\" data from…",
        "timeToRead": 5,
        "tableOfContents": {
          "items": [
            {
              "url": "#what-do-source-plugins-do",
              "title": "What do source plugins do?"
            },
            {
              "url": "#what-fields-are-required",
              "title": "What fields are required?",
              "items": [
                {
                  "url": "#media-type-is-not-required-yet-necessary-to-work-with-transformer-plugins",
                  "title": "media type is not required, yet necessary to work with transformer plugins"
                }
              ]
            },
            {
              "url": "#what-does-the-code-look-like",
              "title": "What does the code look like?"
            },
            {
              "url": "#what-are-the-jobs-of-a-source-plugin",
              "title": "What are the jobs of a source plugin?"
            },
            {
              "url": "#getting-helper-functions",
              "title": "Getting helper functions"
            },
            {
              "url": "#advanced",
              "title": "Advanced"
            },
            {
              "url": "#two-ways-of-adding-relationships-between-nodes",
              "title": "Two ways of adding relationships between nodes",
              "items": [
                {
                  "url": "#option-1-transformation-relationships",
                  "title": "Option 1: transformation relationships"
                },
                {
                  "url": "#option-2-foreign-key-relationships",
                  "title": "Option 2: foreign-key relationships",
                  "items": [
                    {
                      "url": "#creating-the-relationship",
                      "title": "Creating the relationship"
                    },
                    {
                      "url": "#creating-the-reverse-relationship",
                      "title": "Creating the reverse relationship"
                    }
                  ]
                },
                {
                  "url": "#union-types",
                  "title": "Union types"
                }
              ]
            }
          ]
        },
        "fields": {
          "slug": "/docs/creating-a-source-plugin/",
          "anchor": "creating-a-source-plugin"
        },
        "frontmatter": {
          "title": "Creating a Source Plugin",
          "overview": null,
          "issue": null,
          "disableTableOfContents": null,
          "tableOfContentsDepth": null
        },
        "parent": {
          "__typename": "File",
          "relativePath": "docs/creating-a-source-plugin.md"
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/docs/creating-a-source-plugin/",
      "prev": {
        "title": "Creating a Local Plugin",
        "link": "/docs/creating-a-local-plugin/"
      },
      "next": {
        "title": "Creating a Transformer Plugin",
        "link": "/docs/creating-a-transformer-plugin/"
      }
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsMarkdownJs2546709735(\n  $path: String!\n) {\n  mdx(fields: {slug: {eq: $path}}) {\n    body\n    excerpt\n    timeToRead\n    tableOfContents\n    fields {\n      slug\n      anchor\n    }\n    frontmatter {\n      title\n      overview\n      issue\n      disableTableOfContents\n      tableOfContentsDepth\n    }\n    ...MarkdownPageFooterMdx\n  }\n}\n\nfragment MarkdownPageFooterMdx on Mdx {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}