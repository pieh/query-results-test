{
  "path": "/docs/adding-search-with-js-search/",
  "result": {
    "data": {
      "mdx": {
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Adding search with js-search\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"prerequisites\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#prerequisites\",\n    \"aria-label\": \"prerequisites permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Prerequisites\"), mdx(\"p\", null, \"Before we go through the steps needed for adding client side search to your Gatsby website, you should be familiar with the basics of Gatsby. Check out the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/tutorial/\"\n  }), \"tutorial\"), \" and brush up on the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/\"\n  }), \"documentation\"), \" if you need to. In addition, some knowledge of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://medium.freecodecamp.org/write-less-do-more-with-javascript-es6-5fd4a8e50ee2\"\n  }), \"ES6 syntax\"), \" will be useful.\"), mdx(\"h2\", {\n    \"id\": \"what-is-js-search\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#what-is-js-search\",\n    \"aria-label\": \"what is js search permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"What is JS Search\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/bvaughn/js-search\"\n  }), \"JS Search\"), \" is a library created by Brian Vaughn, a member of the core team at Facebook. It provides an efficient way to search for data on the client with JavaScript and JSON objects. It also has extensive customization options, check out their docs for more details.\"), mdx(\"p\", null, \"The full code and documentation for this library is \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/bvaughn/js-search\"\n  }), \"available on GitHub\"), \". This guide is based on the official \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"js-search\"), \" example but has been adapted to work with your Gatsby site.\"), mdx(\"h2\", {\n    \"id\": \"setup\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#setup\",\n    \"aria-label\": \"setup permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Setup\"), mdx(\"p\", null, \"You\\u2019ll start by creating a new Gatsby site based on the official \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"hello world\"), \" starter. Open up a terminal and run the following command:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"gatsby new js-search-example https://github.com/gatsbyjs/gatsby-starter-default\\n\")), mdx(\"p\", null, \"After the process is complete, some additional packages are needed.\"), mdx(\"p\", null, \"Change directories to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"js-search-example\"), \" folder and issue the following command:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"npm install --save js-search axios\\n\")), mdx(\"p\", null, \"Or if Yarn is being used:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"yarn add js-search axios\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note\"), \":\"), mdx(\"p\", null, \"For this particular example \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/axios/axios\"\n  }), \"axios\"), \" will be used to handle all of the promise-based HTTP requests.\"), mdx(\"h2\", {\n    \"id\": \"strategy-selection\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#strategy-selection\",\n    \"aria-label\": \"strategy selection permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Strategy selection\"), mdx(\"p\", null, \"In the next sections you\\u2019ll learn about two approaches to implementing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"js-search\"), \" in your site. Which one you choose will depend on the number of items you want to search. For a small to medium dataset, the first strategy documented should work out nicely.\"), mdx(\"p\", null, \"For larger datasets you could use the second approach, as most of the work is done beforehand through the use of Gatsby\\u2019s internal API.\"), mdx(\"p\", null, \"Both ways are fairly generalistic, they were implemented using the default options for the library, so that it can be experimented without going through into the specifics of the library.\"), mdx(\"p\", null, \"And finally as you go through the code, be mindful it does not adhere to the best practices, it\\u2019s just for demonstration purposes, in a real site it would have been implemented in a different way.\"), mdx(\"h2\", {\n    \"id\": \"js-search-with-a-small-to-medium-dataset\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#js-search-with-a-small-to-medium-dataset\",\n    \"aria-label\": \"js search with a small to medium dataset permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"JS-Search with a small to medium dataset\"), mdx(\"p\", null, \"Start by creating a file named \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SearchContainer.js\"), \" in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/components/\"), \" folder, then add the following code to get started:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"import React, { Component } from \\\"react\\\"\\nimport Axios from \\\"axios\\\"\\nimport * as JsSearch from \\\"js-search\\\"\\n\\nclass Search extends Component {\\n  state = {\\n    bookList: [],\\n    search: [],\\n    searchResults: [],\\n    isLoading: true,\\n    isError: false,\\n    searchQuery: \\\"\\\",\\n  }\\n  /**\\n   * React lifecycle method to fetch the data\\n   */\\n  async componentDidMount() {\\n    Axios.get(\\\"https://bvaughn.github.io/js-search/books.json\\\")\\n      .then(result => {\\n        const bookData = result.data\\n        this.setState({ bookList: bookData.books })\\n        this.rebuildIndex()\\n      })\\n      .catch(err => {\\n        this.setState({ isError: true })\\n        console.log(\\\"====================================\\\")\\n        console.log(`Something bad happened while fetching the data\\\\n${err}`)\\n        console.log(\\\"====================================\\\")\\n      })\\n  }\\n\\n  /**\\n   * rebuilds the overall index based on the options\\n   */\\n  rebuildIndex = () => {\\n    const { bookList } = this.state\\n    const dataToSearch = new JsSearch.Search(\\\"isbn\\\")\\n    /**\\n     *  defines a indexing strategy for the data\\n     * more more about it in here https://github.com/bvaughn/js-search#configuring-the-index-strategy\\n     */\\n    dataToSearch.indexStrategy = new JsSearch.PrefixIndexStrategy()\\n    /**\\n     * defines the sanitizer for the search\\n     * to prevent some of the words from being excluded\\n     *\\n     */\\n    dataToSearch.sanitizer = new JsSearch.LowerCaseSanitizer()\\n    /**\\n     * defines the search index\\n     * read more in here https://github.com/bvaughn/js-search#configuring-the-search-index\\n     */\\n    dataToSearch.searchIndex = new JsSearch.TfIdfSearchIndex(\\\"isbn\\\")\\n\\n    dataToSearch.addIndex(\\\"title\\\") // sets the index attribute for the data\\n    dataToSearch.addIndex(\\\"author\\\") // sets the index attribute for the data\\n\\n    dataToSearch.addDocuments(bookList) // adds the data to be searched\\n    this.setState({ search: dataToSearch, isLoading: false })\\n  }\\n\\n  /**\\n   * handles the input change and perform a search with js-search\\n   * in which the results will be added to the state\\n   */\\n  searchData = e => {\\n    const { search } = this.state\\n    const queryResult = search.search(e.target.value)\\n    this.setState({ searchQuery: e.target.value, searchResults: queryResult })\\n  }\\n  handleSubmit = e => {\\n    e.preventDefault()\\n  }\\n\\n  render() {\\n    const { bookList, searchResults, searchQuery } = this.state\\n    const queryResults = searchQuery === \\\"\\\" ? bookList : searchResults\\n    return (\\n      <div>\\n        <div style={{ margin: \\\"0 auto\\\" }}>\\n          <form onSubmit={this.handleSubmit}>\\n            <div style={{ margin: \\\"0 auto\\\" }}>\\n              <label htmlFor=\\\"Search\\\" style={{ paddingRight: \\\"10px\\\" }}>\\n                Enter your search here\\n              </label>\\n              <input\\n                id=\\\"Search\\\"\\n                value={searchQuery}\\n                onChange={this.searchData}\\n                placeholder=\\\"Enter your search here\\\"\\n                style={{ margin: \\\"0 auto\\\", width: \\\"400px\\\" }}\\n              />\\n            </div>\\n          </form>\\n          <div>\\n            Number of items:\\n            {queryResults.length}\\n            <table\\n              style={{\\n                width: \\\"100%\\\",\\n                borderCollapse: \\\"collapse\\\",\\n                borderRadius: \\\"4px\\\",\\n                border: \\\"1px solid #d3d3d3\\\",\\n              }}\\n            >\\n              <thead style={{ border: \\\"1px solid #808080\\\" }}>\\n                <tr>\\n                  <th\\n                    style={{\\n                      textAlign: \\\"left\\\",\\n                      padding: \\\"5px\\\",\\n                      fontSize: \\\"14px\\\",\\n                      fontWeight: 600,\\n                      borderBottom: \\\"2px solid #d3d3d3\\\",\\n                      cursor: \\\"pointer\\\",\\n                    }}\\n                  >\\n                    Book ISBN\\n                  </th>\\n                  <th\\n                    style={{\\n                      textAlign: \\\"left\\\",\\n                      padding: \\\"5px\\\",\\n                      fontSize: \\\"14px\\\",\\n                      fontWeight: 600,\\n                      borderBottom: \\\"2px solid #d3d3d3\\\",\\n                      cursor: \\\"pointer\\\",\\n                    }}\\n                  >\\n                    Book Title\\n                  </th>\\n                  <th\\n                    style={{\\n                      textAlign: \\\"left\\\",\\n                      padding: \\\"5px\\\",\\n                      fontSize: \\\"14px\\\",\\n                      fontWeight: 600,\\n                      borderBottom: \\\"2px solid #d3d3d3\\\",\\n                      cursor: \\\"pointer\\\",\\n                    }}\\n                  >\\n                    Book Author\\n                  </th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                {queryResults.map(item => {\\n                  return (\\n                    <tr key={`row_${item.isbn}`}>\\n                      <td\\n                        style={{\\n                          fontSize: \\\"14px\\\",\\n                          border: \\\"1px solid #d3d3d3\\\",\\n                        }}\\n                      >\\n                        {item.isbn}\\n                      </td>\\n                      <td\\n                        style={{\\n                          fontSize: \\\"14px\\\",\\n                          border: \\\"1px solid #d3d3d3\\\",\\n                        }}\\n                      >\\n                        {item.title}\\n                      </td>\\n                      <td\\n                        style={{\\n                          fontSize: \\\"14px\\\",\\n                          border: \\\"1px solid #d3d3d3\\\",\\n                        }}\\n                      >\\n                        {item.author}\\n                      </td>\\n                    </tr>\\n                  )\\n                })}\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n    )\\n  }\\n}\\nexport default Search\\n\")), mdx(\"p\", null, \"Breaking down the code into smaller parts:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"When the component is mounted, the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"componentDidMount()\"), \" lifecycle method is triggered and the data will be fetched.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"If no errors occur, the data received is added to the state and the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"rebuildIndex()\"), \" function is invoked.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The search engine is then created and configured with the default options.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The data is then indexed using js-search.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"When the contents of the input changes, js-search starts the search process based on the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"input\"), \"\\u2019s value and returns the search results if any, which is then presented to the user via the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"table\"), \" element.\")), mdx(\"h3\", {\n    \"id\": \"joining-all-the-pieces\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#joining-all-the-pieces\",\n    \"aria-label\": \"joining all the pieces permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Joining all the pieces\"), mdx(\"p\", null, \"In order to get it working in your site, you would only need to import the newly created component to a page.\\nAs you can see \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/tree/master/examples/using-js-search/src/pages/index.js\"\n  }), \"in the example site\"), \".\"), mdx(\"p\", null, \"Run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby develop\"), \" and if all went well, open your browser of choice and enter the url \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://localhost:8000\"), \" - you\\u2019ll have a fully functional search at your disposal.\"), mdx(\"h2\", {\n    \"id\": \"js-search-with-a-big-dataset\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#js-search-with-a-big-dataset\",\n    \"aria-label\": \"js search with a big dataset permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"JS-Search with a big dataset\"), mdx(\"p\", null, \"Now let\\u2019s try a different approach, this time instead of letting the component do all of the work, it\\u2019s Gatsby\\u2019s job to do that and pass all the data to a page defined by the path property, via \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/behind-the-scenes-terminology/#pagecontext\"\n  }), \"pageContext\"), \".\"), mdx(\"p\", null, \"To do this, some changes are required.\"), mdx(\"p\", null, \"Start by modifying the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-node.js\"), \" file by adding the following code:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"const path = require(\\\"path\\\")\\nconst axios = require(\\\"axios\\\")\\n\\nexports.createPages = ({ actions }) => {\\n  const { createPage } = actions\\n  return new Promise((resolve, reject) => {\\n    axios\\n      .get(\\\"https://bvaughn.github.io/js-search/books.json\\\")\\n      .then(result => {\\n        const { data } = result\\n        /**\\n         * creates a dynamic page with the data received\\n         * injects the data into the context object alongside with some options\\n         * to configure js-search\\n         */\\n        createPage({\\n          path: \\\"/search\\\",\\n          component: path.resolve(`./src/templates/ClientSearchTemplate.js`),\\n          context: {\\n            bookData: {\\n              allBooks: data.books,\\n              options: {\\n                indexStrategy: \\\"Prefix match\\\",\\n                searchSanitizer: \\\"Lower Case\\\",\\n                TitleIndex: true,\\n                AuthorIndex: true,\\n                SearchByTerm: true,\\n              },\\n            },\\n          },\\n        })\\n        resolve()\\n      })\\n      .catch(err => {\\n        console.log(\\\"====================================\\\")\\n        console.log(`error creating Page:${err}`)\\n        console.log(\\\"====================================\\\")\\n        reject(new Error(`error on page creation:\\\\n${err}`))\\n      })\\n  })\\n}\\n\")), mdx(\"p\", null, \"Create a file named \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ClientSearchTemplate.js\"), \" in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/templates/\"), \" folder, then add the following code to get started:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"import React from \\\"react\\\"\\nimport ClientSearch from \\\"../components/ClientSearch\\\"\\n\\nconst SearchTemplate = props => {\\n  const { pageContext } = props\\n  const { bookData } = pageContext\\n  const { allBooks, options } = bookData\\n  return (\\n    <div>\\n      <h1 style={{ marginTop: `3em`, textAlign: `center` }}>\\n        Search data using JS Search using Gatsby Api\\n      </h1>\\n      <div>\\n        <ClientSearch books={allBooks} engine={options} />\\n      </div>\\n    </div>\\n  )\\n}\\n\\nexport default SearchTemplate\\n\")), mdx(\"p\", null, \"Create a file named \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ClientSearch.js\"), \" in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/components/\"), \" folder, then add the following code as a baseline:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"import React, { Component } from \\\"react\\\"\\nimport * as JsSearch from \\\"js-search\\\"\\n\\nclass ClientSearch extends Component {\\n  state = {\\n    isLoading: true,\\n    searchResults: [],\\n    search: null,\\n    isError: false,\\n    indexByTitle: false,\\n    indexByAuthor: false,\\n    termFrequency: true,\\n    removeStopWords: false,\\n    searchQuery: \\\"\\\",\\n    selectedStrategy: \\\"\\\",\\n    selectedSanitizer: \\\"\\\",\\n  }\\n  /**\\n   * React lifecycle method that will inject the data into the state.\\n   */\\n  static getDerivedStateFromProps(nextProps, prevState) {\\n    if (prevState.search === null) {\\n      const { engine } = nextProps\\n      return {\\n        indexByTitle: engine.TitleIndex,\\n        indexByAuthor: engine.AuthorIndex,\\n        termFrequency: engine.SearchByTerm,\\n        selectedSanitizer: engine.searchSanitizer,\\n        selectedStrategy: engine.indexStrategy,\\n      }\\n    }\\n    return null\\n  }\\n  async componentDidMount() {\\n    this.rebuildIndex()\\n  }\\n\\n  /**\\n   * rebuilds the overall index based on the options\\n   */\\n  rebuildIndex = () => {\\n    const {\\n      selectedStrategy,\\n      selectedSanitizer,\\n      removeStopWords,\\n      termFrequency,\\n      indexByTitle,\\n      indexByAuthor,\\n    } = this.state\\n    const { books } = this.props\\n\\n    const dataToSearch = new JsSearch.Search(\\\"isbn\\\")\\n\\n    if (removeStopWords) {\\n      dataToSearch.tokenizer = new JsSearch.StopWordsTokenizer(\\n        dataToSearch.tokenizer\\n      )\\n    }\\n    /**\\n     * defines an indexing strategy for the data\\n     * read more about it here https://github.com/bvaughn/js-search#configuring-the-index-strategy\\n     */\\n    if (selectedStrategy === \\\"All\\\") {\\n      dataToSearch.indexStrategy = new JsSearch.AllSubstringsIndexStrategy()\\n    }\\n    if (selectedStrategy === \\\"Exact match\\\") {\\n      dataToSearch.indexStrategy = new JsSearch.ExactWordIndexStrategy()\\n    }\\n    if (selectedStrategy === \\\"Prefix match\\\") {\\n      dataToSearch.indexStrategy = new JsSearch.PrefixIndexStrategy()\\n    }\\n\\n    /**\\n     * defines the sanitizer for the search\\n     * to prevent some of the words from being excluded\\n     */\\n    selectedSanitizer === \\\"Case Sensitive\\\"\\n      ? (dataToSearch.sanitizer = new JsSearch.CaseSensitiveSanitizer())\\n      : (dataToSearch.sanitizer = new JsSearch.LowerCaseSanitizer())\\n    termFrequency === true\\n      ? (dataToSearch.searchIndex = new JsSearch.TfIdfSearchIndex(\\\"isbn\\\"))\\n      : (dataToSearch.searchIndex = new JsSearch.UnorderedSearchIndex())\\n\\n    // sets the index attribute for the data\\n    if (indexByTitle) {\\n      dataToSearch.addIndex(\\\"title\\\")\\n    }\\n    // sets the index attribute for the data\\n    if (indexByAuthor) {\\n      dataToSearch.addIndex(\\\"author\\\")\\n    }\\n\\n    dataToSearch.addDocuments(books) // adds the data to be searched\\n\\n    this.setState({ search: dataToSearch, isLoading: false })\\n  }\\n  /**\\n   * handles the input change and perform a search with js-search\\n   * in which the results will be added to the state\\n   */\\n  searchData = e => {\\n    const { search } = this.state\\n    const queryResult = search.search(e.target.value)\\n    this.setState({ searchQuery: e.target.value, searchResults: queryResult })\\n  }\\n  handleSubmit = e => {\\n    e.preventDefault()\\n  }\\n  render() {\\n    const { searchResults, searchQuery } = this.state\\n    const { books } = this.props\\n    const queryResults = searchQuery === \\\"\\\" ? books : searchResults\\n    return (\\n      <div>\\n        <div style={{ margin: \\\"0 auto\\\" }}>\\n          <form onSubmit={this.handleSubmit}>\\n            <div style={{ margin: \\\"0 auto\\\" }}>\\n              <label htmlFor=\\\"Search\\\" style={{ paddingRight: \\\"10px\\\" }}>\\n                Enter your search here\\n              </label>\\n              <input\\n                id=\\\"Search\\\"\\n                value={searchQuery}\\n                onChange={this.searchData}\\n                placeholder=\\\"Enter your search here\\\"\\n                style={{ margin: \\\"0 auto\\\", width: \\\"400px\\\" }}\\n              />\\n            </div>\\n          </form>\\n          <div>\\n            Number of items:\\n            {queryResults.length}\\n            <table\\n              style={{\\n                width: \\\"100%\\\",\\n                borderCollapse: \\\"collapse\\\",\\n                borderRadius: \\\"4px\\\",\\n                border: \\\"1px solid #d3d3d3\\\",\\n              }}\\n            >\\n              <thead style={{ border: \\\"1px solid #808080\\\" }}>\\n                <tr>\\n                  <th\\n                    style={{\\n                      textAlign: \\\"left\\\",\\n                      padding: \\\"5px\\\",\\n                      fontSize: \\\"14px\\\",\\n                      fontWeight: 600,\\n                      borderBottom: \\\"2px solid #d3d3d3\\\",\\n                      cursor: \\\"pointer\\\",\\n                    }}\\n                  >\\n                    Book ISBN\\n                  </th>\\n                  <th\\n                    style={{\\n                      textAlign: \\\"left\\\",\\n                      padding: \\\"5px\\\",\\n                      fontSize: \\\"14px\\\",\\n                      fontWeight: 600,\\n                      borderBottom: \\\"2px solid #d3d3d3\\\",\\n                      cursor: \\\"pointer\\\",\\n                    }}\\n                  >\\n                    Book Title\\n                  </th>\\n                  <th\\n                    style={{\\n                      textAlign: \\\"left\\\",\\n                      padding: \\\"5px\\\",\\n                      fontSize: \\\"14px\\\",\\n                      fontWeight: 600,\\n                      borderBottom: \\\"2px solid #d3d3d3\\\",\\n                      cursor: \\\"pointer\\\",\\n                    }}\\n                  >\\n                    Book Author\\n                  </th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                {queryResults.map(item => {\\n                  return (\\n                    <tr key={`row_${item.isbn}`}>\\n                      <td\\n                        style={{\\n                          fontSize: \\\"14px\\\",\\n                          border: \\\"1px solid #d3d3d3\\\",\\n                        }}\\n                      >\\n                        {item.isbn}\\n                      </td>\\n                      <td\\n                        style={{\\n                          fontSize: \\\"14px\\\",\\n                          border: \\\"1px solid #d3d3d3\\\",\\n                        }}\\n                      >\\n                        {item.title}\\n                      </td>\\n                      <td\\n                        style={{\\n                          fontSize: \\\"14px\\\",\\n                          border: \\\"1px solid #d3d3d3\\\",\\n                        }}\\n                      >\\n                        {item.author}\\n                      </td>\\n                    </tr>\\n                  )\\n                })}\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n    )\\n  }\\n}\\nexport default ClientSearch\\n\")), mdx(\"p\", null, \"Breaking down the code into smaller parts:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"When the component is mounted, the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"getDerivedStateFromProps()\"), \" lifecycle method is invoked and it will evaluate the state and if necessary update it.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Then the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"componentDidMount()\"), \" lifecycle method will be triggered and the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"rebuildIndex()\"), \" function is invoked.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The search engine is then created and configured with the options defined.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The data is then indexed using js-search.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"When the contents of the input changes, js-search starts the search process based on the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"input\"), \"\\u2019s value and returns the search results if any, which is then presented to the user via the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"table\"), \" element.\")), mdx(\"h3\", {\n    \"id\": \"joining-all-the-pieces-1\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#joining-all-the-pieces-1\",\n    \"aria-label\": \"joining all the pieces 1 permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Joining all the pieces\"), mdx(\"p\", null, \"Once again to get it to work on your site you would only need to copy over \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/tree/master/examples/using-js-search/gatsby-node.js\"\n  }), \"the \", mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"gatsby-node.js\"), \" file located here\"), \".\"), mdx(\"p\", null, \"And both the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/tree/master/examples/using-js-search/src/templates/ClientSearchTemplate.js\"\n  }), \"template\"), \" and the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/tree/master/examples/using-js-search/src/components/ClientSearch.js\"\n  }), \"search component\"), \".\"), mdx(\"p\", null, \"Issuing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby develop\"), \" again, and if all went without any issues one more time, open your browser of choice and enter the url \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://localhost:8000/search\"), \", you\\u2019ll have a fully functional search at your disposal coupled with Gatsby API.\"), mdx(\"p\", null, \"Hopefully this rather extensive guide has shed some insights on how to implement client search using js-search.\"), mdx(\"p\", null, \"Now go make something great!\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "excerpt": "Prerequisites Before we go through the steps needed for adding client side search to your Gatsby website, you should be familiar with the…",
        "timeToRead": 3,
        "tableOfContents": {
          "items": [
            {
              "url": "#prerequisites",
              "title": "Prerequisites"
            },
            {
              "url": "#what-is-js-search",
              "title": "What is JS Search"
            },
            {
              "url": "#setup",
              "title": "Setup"
            },
            {
              "url": "#strategy-selection",
              "title": "Strategy selection"
            },
            {
              "url": "#js-search-with-a-small-to-medium-dataset",
              "title": "JS-Search with a small to medium dataset",
              "items": [
                {
                  "url": "#joining-all-the-pieces",
                  "title": "Joining all the pieces"
                }
              ]
            },
            {
              "url": "#js-search-with-a-big-dataset",
              "title": "JS-Search with a big dataset",
              "items": [
                {
                  "url": "#joining-all-the-pieces-1",
                  "title": "Joining all the pieces"
                }
              ]
            }
          ]
        },
        "fields": {
          "slug": "/docs/adding-search-with-js-search/",
          "anchor": "adding-search-with-js-search"
        },
        "frontmatter": {
          "title": "Adding search with js-search",
          "overview": null,
          "issue": null,
          "disableTableOfContents": null,
          "tableOfContentsDepth": null
        },
        "parent": {
          "__typename": "File",
          "relativePath": "docs/adding-search-with-js-search.md"
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/docs/adding-search-with-js-search/",
      "prev": {
        "title": "Adding Search with elasticlunr*",
        "link": "/docs/adding-search-with-elasticlunr/"
      },
      "next": {
        "title": "Adding Analytics",
        "link": "/docs/adding-analytics/",
        "breadcrumbTitle": "Analytics"
      }
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsMarkdownJs2546709735(\n  $path: String!\n) {\n  mdx(fields: {slug: {eq: $path}}) {\n    body\n    excerpt\n    timeToRead\n    tableOfContents\n    fields {\n      slug\n      anchor\n    }\n    frontmatter {\n      title\n      overview\n      issue\n      disableTableOfContents\n      tableOfContentsDepth\n    }\n    ...MarkdownPageFooterMdx\n  }\n}\n\nfragment MarkdownPageFooterMdx on Mdx {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}