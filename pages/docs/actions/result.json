{
  "path": "/docs/actions/",
  "result": {
    "data": {
      "allFile": {
        "nodes": [
          {
            "relativePath": "gatsby/src/redux/actions/public.js",
            "childrenDocumentationJs": [
              {
                "availableIn": [],
                "codeLocation": {
                  "start": {
                    "line": 74
                  },
                  "end": {
                    "line": 79
                  }
                },
                "kind": "function",
                "name": "deletePage",
                "description": {
                  "childMdx": {
                    "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Delete a page\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                  }
                },
                "deprecated": null,
                "examples": [
                  {
                    "highlighted": "<span class=\"token function\">deletePage</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">)</span>"
                  }
                ],
                "type": null,
                "params": [
                  {
                    "name": "page",
                    "description": {
                      "childMdx": {
                        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"a page object\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                      }
                    },
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "Object",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": [
                      {
                        "name": "path",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "string",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The path of the page\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      },
                      {
                        "name": "component",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "string",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The absolute path to the page component\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      }
                    ],
                    "returns": null,
                    "members": null
                  }
                ],
                "properties": null,
                "optional": false,
                "returns": null,
                "members": {
                  "static": null
                }
              },
              {
                "availableIn": [],
                "codeLocation": {
                  "start": {
                    "line": 112
                  },
                  "end": {
                    "line": 417
                  }
                },
                "kind": "function",
                "name": "createPage",
                "description": {
                  "childMdx": {
                    "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Create a page. See \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/creating-and-modifying-pages/\"\n  }), \"the guide on creating and modifying pages\"), \"\\nfor detailed documentation about creating pages.\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                  }
                },
                "deprecated": null,
                "examples": [
                  {
                    "highlighted": "<span class=\"token function\">createPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  path<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/my-sweet-new-page/</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  component<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./src/templates/my-sweet-new-page.js</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// The context is passed as props to the component as well</span>\n  <span class=\"token comment\">// as into the component's GraphQL query.</span>\n  context<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    id<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">123456</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>"
                  }
                ],
                "type": null,
                "params": [
                  {
                    "name": "page",
                    "description": {
                      "childMdx": {
                        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"a page object\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                      }
                    },
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "Object",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": [
                      {
                        "name": "path",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "string",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Any valid URL. Must start with a forward slash\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      },
                      {
                        "name": "matchPath",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "string",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Path that Reach Router uses to match the page on the client side.\\nAlso see docs on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/gatsby-internals-terminology/#matchpath\"\n  }), \"matchPath\")));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      },
                      {
                        "name": "component",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "string",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The absolute path to the component for this page\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      },
                      {
                        "name": "context",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "Object",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Context data for this page. Passed as props\\nto the component \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"this.props.pageContext\"), \" as well as to the graphql query\\nas graphql arguments.\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      }
                    ],
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "plugin",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "Plugin",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": true,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "actionOptions",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "ActionOptions",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": true,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  }
                ],
                "properties": null,
                "optional": false,
                "returns": null,
                "members": {
                  "static": null
                }
              },
              {
                "availableIn": [],
                "codeLocation": {
                  "start": {
                    "line": 426
                  },
                  "end": {
                    "line": 494
                  }
                },
                "kind": "function",
                "name": "deleteNode",
                "description": {
                  "childMdx": {
                    "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Delete a node\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                  }
                },
                "deprecated": null,
                "examples": [
                  {
                    "highlighted": "<span class=\"token function\">deleteNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">:</span> node<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>"
                  }
                ],
                "type": null,
                "params": [
                  {
                    "name": "options",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": null,
                      "type": "AllLiteral",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "plugin",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "Plugin",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "args",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": null,
                      "type": "AllLiteral",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "$0",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "object",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": [
                      {
                        "name": "node",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "object",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"the node object\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      }
                    ],
                    "returns": null,
                    "members": null
                  }
                ],
                "properties": null,
                "optional": false,
                "returns": null,
                "members": {
                  "static": null
                }
              },
              {
                "availableIn": [],
                "codeLocation": {
                  "start": {
                    "line": 502
                  },
                  "end": {
                    "line": 522
                  }
                },
                "kind": "function",
                "name": "deleteNodes",
                "description": {
                  "childMdx": {
                    "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Batch delete nodes\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                  }
                },
                "deprecated": null,
                "examples": [
                  {
                    "highlighted": "<span class=\"token function\">deleteNodes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">node1</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">node2</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>"
                  }
                ],
                "type": null,
                "params": [
                  {
                    "name": "nodes",
                    "description": {
                      "childMdx": {
                        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"an array of node ids\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                      }
                    },
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "Array",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "plugin",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "Plugin",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  }
                ],
                "properties": null,
                "optional": false,
                "returns": null,
                "members": {
                  "static": null
                }
              },
              {
                "availableIn": [],
                "codeLocation": {
                  "start": {
                    "line": 800
                  },
                  "end": {
                    "line": 826
                  }
                },
                "kind": "function",
                "name": "touchNode",
                "description": {
                  "childMdx": {
                    "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\u201CTouch\\u201D a node. Tells Gatsby a node still exists and shouldn\\u2019t\\nbe garbage collected. Primarily useful for source plugins fetching\\nnodes from a remote system that can return only nodes that have\\nupdated. The source plugin then touches all the nodes that haven\\u2019t\\nupdated but still exist so Gatsby knows to keep them.\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                  }
                },
                "deprecated": null,
                "examples": [
                  {
                    "highlighted": "<span class=\"token function\">touchNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> nodeId<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">a-node-id</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>"
                  }
                ],
                "type": null,
                "params": [
                  {
                    "name": "options",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": null,
                      "type": "AllLiteral",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "plugin",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "Plugin",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": true,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "$0",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "Object",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": [
                      {
                        "name": "nodeId",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "string",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The id of a node\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      }
                    ],
                    "returns": null,
                    "members": null
                  }
                ],
                "properties": null,
                "optional": false,
                "returns": null,
                "members": {
                  "static": null
                }
              },
              {
                "availableIn": [],
                "codeLocation": {
                  "start": {
                    "line": 857
                  },
                  "end": {
                    "line": 917
                  }
                },
                "kind": "function",
                "name": "createNodeField",
                "description": {
                  "childMdx": {
                    "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Extend another node. The new node field is placed under the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fields\"), \"\\nkey on the extended node object.\"), mdx(\"p\", null, \"Once a plugin has claimed a field name the field name can\\u2019t be used by\\nother plugins.  Also since nodes are immutable, you can\\u2019t mutate the node\\ndirectly. So to extend another node, use this.\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                  }
                },
                "deprecated": null,
                "examples": [
                  {
                    "highlighted": "<span class=\"token function\">createNodeField</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  node<span class=\"token punctuation\">,</span>\n  name<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">happiness</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  value<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">is sweet graphql queries</span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// The field value is now accessible at node.fields.happiness</span>"
                  }
                ],
                "type": null,
                "params": [
                  {
                    "name": "$0",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "Object",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": [
                      {
                        "name": "node",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "Object",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"the target node object\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      },
                      {
                        "name": "name",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "string",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"the name for the field\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      },
                      {
                        "name": "value",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "string",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"the value for the field\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      },
                      {
                        "name": "fieldName",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "string",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"[deprecated]\", \" the name for the field\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      },
                      {
                        "name": "fieldValue",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "string",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"[deprecated]\", \" the value for the field\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      }
                    ],
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "plugin",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "Plugin",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "actionOptions",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "ActionOptions",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": true,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  }
                ],
                "properties": null,
                "optional": false,
                "returns": null,
                "members": {
                  "static": null
                }
              },
              {
                "availableIn": [],
                "codeLocation": {
                  "start": {
                    "line": 931
                  },
                  "end": {
                    "line": 944
                  }
                },
                "kind": "function",
                "name": "createParentChildLink",
                "description": {
                  "childMdx": {
                    "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Creates a link between a parent and child node. This is used when you\\ntransform content from a node creating a new child node. You need to add\\nthis new child node to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"children\"), \" array of the parent but since you\\ndon\\u2019t have direct access to the immutable parent node, use this action\\ninstead.\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                  }
                },
                "deprecated": null,
                "examples": [
                  {
                    "highlighted": "<span class=\"token function\">createParentChildLink</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> parent<span class=\"token punctuation\">:</span> parentNode<span class=\"token punctuation\">,</span> child<span class=\"token punctuation\">:</span> childNode <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>"
                  }
                ],
                "type": null,
                "params": [
                  {
                    "name": "$0",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "Object",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": [
                      {
                        "name": "parent",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "Object",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"the parent node object\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      },
                      {
                        "name": "child",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "Object",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"the child node object\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      }
                    ],
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "plugin",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "Plugin",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": true,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  }
                ],
                "properties": null,
                "optional": false,
                "returns": null,
                "members": {
                  "static": null
                }
              },
              {
                "availableIn": [],
                "codeLocation": {
                  "start": {
                    "line": 955
                  },
                  "end": {
                    "line": 961
                  }
                },
                "kind": "function",
                "name": "setWebpackConfig",
                "description": {
                  "childMdx": {
                    "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Merge additional configuration into the current webpack config. A few\\nconfigurations options will be ignored if set, in order to try prevent accidental breakage.\\nSpecifically, any change to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"entry\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"output\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"target\"), \", or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"resolveLoaders\"), \" will be ignored.\"), mdx(\"p\", null, \"For full control over the webpack config, use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"replaceWebpackConfig()\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                  }
                },
                "deprecated": null,
                "examples": [],
                "type": null,
                "params": [
                  {
                    "name": "config",
                    "description": {
                      "childMdx": {
                        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"partial webpack config, to be merged into the current one\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                      }
                    },
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "Object",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "plugin",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": null,
                      "type": "NullableType",
                      "elements": null,
                      "expression": {
                        "type": "NameExpression",
                        "name": "Plugin",
                        "typeDef___NODE": null
                      },
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  }
                ],
                "properties": null,
                "optional": false,
                "returns": null,
                "members": {
                  "static": null
                }
              },
              {
                "availableIn": [],
                "codeLocation": {
                  "start": {
                    "line": 972
                  },
                  "end": {
                    "line": 978
                  }
                },
                "kind": "function",
                "name": "replaceWebpackConfig",
                "description": {
                  "childMdx": {
                    "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Completely replace the webpack config for the current stage. This can be\\ndangerous and break Gatsby if certain configuration options are changed.\"), mdx(\"p\", null, \"Generally only useful for cases where you need to handle config merging logic\\nyourself, in which case consider using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"webpack-merge\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                  }
                },
                "deprecated": null,
                "examples": [],
                "type": null,
                "params": [
                  {
                    "name": "config",
                    "description": {
                      "childMdx": {
                        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"complete webpack config\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                      }
                    },
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "Object",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "plugin",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": null,
                      "type": "NullableType",
                      "elements": null,
                      "expression": {
                        "type": "NameExpression",
                        "name": "Plugin",
                        "typeDef___NODE": null
                      },
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  }
                ],
                "properties": null,
                "optional": false,
                "returns": null,
                "members": {
                  "static": null
                }
              },
              {
                "availableIn": [],
                "codeLocation": {
                  "start": {
                    "line": 991
                  },
                  "end": {
                    "line": 1018
                  }
                },
                "kind": "function",
                "name": "setBabelOptions",
                "description": {
                  "childMdx": {
                    "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Set top-level Babel options. Plugins and presets will be ignored. Use\\nsetBabelPlugin and setBabelPreset for this.\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                  }
                },
                "deprecated": null,
                "examples": [
                  {
                    "highlighted": "<span class=\"token function\">setBabelOptions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    sourceMaps<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">inline</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>"
                  }
                ],
                "type": null,
                "params": [
                  {
                    "name": "options",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "Object",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "plugin",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": null,
                      "type": "NullableType",
                      "elements": null,
                      "expression": {
                        "type": "NameExpression",
                        "name": "Plugin",
                        "typeDef___NODE": null
                      },
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "config",
                    "description": {
                      "childMdx": {
                        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"An options object in the shape of a normal babelrc JavaScript object\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                      }
                    },
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "Object",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  }
                ],
                "properties": null,
                "optional": false,
                "returns": null,
                "members": {
                  "static": null
                }
              },
              {
                "availableIn": [],
                "codeLocation": {
                  "start": {
                    "line": 1033
                  },
                  "end": {
                    "line": 1054
                  }
                },
                "kind": "function",
                "name": "setBabelPlugin",
                "description": {
                  "childMdx": {
                    "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Add new plugins or merge options into existing Babel plugins.\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                  }
                },
                "deprecated": null,
                "examples": [
                  {
                    "highlighted": "<span class=\"token function\">setBabelPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span>  <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">babel-plugin-emotion</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    sourceMap<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>"
                  }
                ],
                "type": null,
                "params": [
                  {
                    "name": "config",
                    "description": {
                      "childMdx": {
                        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A config object describing the Babel plugin to be added.\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                      }
                    },
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "Object",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": [
                      {
                        "name": "name",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "string",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The name of the Babel plugin\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      },
                      {
                        "name": "options",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "Object",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Options to pass to the Babel plugin.\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      }
                    ],
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "plugin",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": null,
                      "type": "NullableType",
                      "elements": null,
                      "expression": {
                        "type": "NameExpression",
                        "name": "Plugin",
                        "typeDef___NODE": null
                      },
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  }
                ],
                "properties": null,
                "optional": false,
                "returns": null,
                "members": {
                  "static": null
                }
              },
              {
                "availableIn": [],
                "codeLocation": {
                  "start": {
                    "line": 1069
                  },
                  "end": {
                    "line": 1090
                  }
                },
                "kind": "function",
                "name": "setBabelPreset",
                "description": {
                  "childMdx": {
                    "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Add new presets or merge options into existing Babel presets.\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                  }
                },
                "deprecated": null,
                "examples": [
                  {
                    "highlighted": "<span class=\"token function\">setBabelPreset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">@babel/preset-react</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    pragma<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Glamor.createElement</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>"
                  }
                ],
                "type": null,
                "params": [
                  {
                    "name": "config",
                    "description": {
                      "childMdx": {
                        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A config object describing the Babel plugin to be added.\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                      }
                    },
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "Object",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": [
                      {
                        "name": "name",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "string",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The name of the Babel preset.\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      },
                      {
                        "name": "options",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "Object",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Options to pass to the Babel preset.\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      }
                    ],
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "plugin",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": null,
                      "type": "NullableType",
                      "elements": null,
                      "expression": {
                        "type": "NameExpression",
                        "name": "Plugin",
                        "typeDef___NODE": null
                      },
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  }
                ],
                "properties": null,
                "optional": false,
                "returns": null,
                "members": {
                  "static": null
                }
              },
              {
                "availableIn": [],
                "codeLocation": {
                  "start": {
                    "line": 1104
                  },
                  "end": {
                    "line": 1110
                  }
                },
                "kind": "function",
                "name": "createJob",
                "description": {
                  "childMdx": {
                    "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Create a \\u201Cjob\\u201D. This is a long-running process that are generally\\nstarted as side-effects to GraphQL queries.\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/packages/gatsby-plugin-sharp/\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"gatsby-plugin-sharp\")), \" uses this for\\nexample.\"), mdx(\"p\", null, \"Gatsby doesn\\u2019t finish its bootstrap until all jobs are ended.\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                  }
                },
                "deprecated": null,
                "examples": [
                  {
                    "highlighted": "<span class=\"token function\">createJob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">write file id: 123</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> fileName<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">something.jpeg</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>"
                  }
                ],
                "type": null,
                "params": [
                  {
                    "name": "job",
                    "description": {
                      "childMdx": {
                        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A job object with at least an id set\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                      }
                    },
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "Object",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": [
                      {
                        "name": "id",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "id",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The id of the job\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      }
                    ],
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "plugin",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": null,
                      "type": "NullableType",
                      "elements": null,
                      "expression": {
                        "type": "NameExpression",
                        "name": "Plugin",
                        "typeDef___NODE": null
                      },
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  }
                ],
                "properties": null,
                "optional": false,
                "returns": null,
                "members": {
                  "static": null
                }
              },
              {
                "availableIn": [],
                "codeLocation": {
                  "start": {
                    "line": 1121
                  },
                  "end": {
                    "line": 1127
                  }
                },
                "kind": "function",
                "name": "setJob",
                "description": {
                  "childMdx": {
                    "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Set (update) a \\u201Cjob\\u201D. Sometimes on really long running jobs you want\\nto update the job as it continues.\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                  }
                },
                "deprecated": null,
                "examples": [
                  {
                    "highlighted": "<span class=\"token function\">setJob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">write file id: 123</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> progress<span class=\"token punctuation\">:</span> <span class=\"token number\">50</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>"
                  }
                ],
                "type": null,
                "params": [
                  {
                    "name": "job",
                    "description": {
                      "childMdx": {
                        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A job object with at least an id set\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                      }
                    },
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "Object",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": [
                      {
                        "name": "id",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "id",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The id of the job\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      }
                    ],
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "plugin",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": null,
                      "type": "NullableType",
                      "elements": null,
                      "expression": {
                        "type": "NameExpression",
                        "name": "Plugin",
                        "typeDef___NODE": null
                      },
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  }
                ],
                "properties": null,
                "optional": false,
                "returns": null,
                "members": {
                  "static": null
                }
              },
              {
                "availableIn": [],
                "codeLocation": {
                  "start": {
                    "line": 1138
                  },
                  "end": {
                    "line": 1144
                  }
                },
                "kind": "function",
                "name": "endJob",
                "description": {
                  "childMdx": {
                    "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"End a \\u201Cjob\\u201D.\"), mdx(\"p\", null, \"Gatsby doesn\\u2019t finish its bootstrap until all jobs are ended.\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                  }
                },
                "deprecated": null,
                "examples": [
                  {
                    "highlighted": "<span class=\"token function\">endJob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">write file id: 123</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>"
                  }
                ],
                "type": null,
                "params": [
                  {
                    "name": "job",
                    "description": {
                      "childMdx": {
                        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A job object with at least an id set\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                      }
                    },
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "Object",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": [
                      {
                        "name": "id",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "id",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The id of the job\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      }
                    ],
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "plugin",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": null,
                      "type": "NullableType",
                      "elements": null,
                      "expression": {
                        "type": "NameExpression",
                        "name": "Plugin",
                        "typeDef___NODE": null
                      },
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  }
                ],
                "properties": null,
                "optional": false,
                "returns": null,
                "members": {
                  "static": null
                }
              },
              {
                "availableIn": [],
                "codeLocation": {
                  "start": {
                    "line": 1154
                  },
                  "end": {
                    "line": 1163
                  }
                },
                "kind": "function",
                "name": "setPluginStatus",
                "description": {
                  "childMdx": {
                    "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Set plugin status. A plugin can use this to save status keys e.g. the last\\nit fetched something. These values are persisted between runs of Gatsby.\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                  }
                },
                "deprecated": null,
                "examples": [
                  {
                    "highlighted": "<span class=\"token function\">setPluginStatus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> lastFetched<span class=\"token punctuation\">:</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>"
                  }
                ],
                "type": null,
                "params": [
                  {
                    "name": "status",
                    "description": {
                      "childMdx": {
                        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"An object with arbitrary values set\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                      }
                    },
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "Object",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "plugin",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "Plugin",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  }
                ],
                "properties": null,
                "optional": false,
                "returns": null,
                "members": {
                  "static": null
                }
              },
              {
                "availableIn": [],
                "codeLocation": {
                  "start": {
                    "line": 1198
                  },
                  "end": {
                    "line": 1220
                  }
                },
                "kind": "function",
                "name": "createRedirect",
                "description": {
                  "childMdx": {
                    "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Create a redirect from one page to another. Server redirects don\\u2019t work out\\nof the box. You must have a plugin setup to integrate the redirect data with\\nyour hosting technology e.g. the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/packages/gatsby-plugin-netlify/\"\n  }), \"Netlify\\nplugin\"), \", or the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/packages/gatsby-plugin-s3/\"\n  }), \"Amazon S3\\nplugin\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                  }
                },
                "deprecated": null,
                "examples": [
                  {
                    "highlighted": "<span class=\"token comment\">// Generally you create redirects while creating pages.</span>\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">createPages</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> graphql<span class=\"token punctuation\">,</span> actions <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createRedirect <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> actions\n  <span class=\"token function\">createRedirect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> fromPath<span class=\"token punctuation\">:</span> <span class=\"token string\">'/old-url'</span><span class=\"token punctuation\">,</span> toPath<span class=\"token punctuation\">:</span> <span class=\"token string\">'/new-url'</span><span class=\"token punctuation\">,</span> isPermanent<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">createRedirect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> fromPath<span class=\"token punctuation\">:</span> <span class=\"token string\">'/url'</span><span class=\"token punctuation\">,</span> toPath<span class=\"token punctuation\">:</span> <span class=\"token string\">'/zn-CH/url'</span><span class=\"token punctuation\">,</span> Language<span class=\"token punctuation\">:</span> <span class=\"token string\">'zn'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">createRedirect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> fromPath<span class=\"token punctuation\">:</span> <span class=\"token string\">'/not_so-pretty_url'</span><span class=\"token punctuation\">,</span> toPath<span class=\"token punctuation\">:</span> <span class=\"token string\">'/pretty/url'</span><span class=\"token punctuation\">,</span> statusCode<span class=\"token punctuation\">:</span> <span class=\"token number\">200</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// Create pages here</span>\n<span class=\"token punctuation\">}</span>"
                  }
                ],
                "type": null,
                "params": [
                  {
                    "name": "redirect",
                    "description": {
                      "childMdx": {
                        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Redirect data\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                      }
                    },
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "Object",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": [
                      {
                        "name": "fromPath",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "string",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Any valid URL. Must start with a forward slash\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      },
                      {
                        "name": "isPermanent",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "boolean",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This is a permanent redirect; defaults to temporary\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      },
                      {
                        "name": "redirectInBrowser",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "boolean",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Redirects are generally for redirecting legacy URLs to their new configuration. If you can\\u2019t update your UI for some reason, set \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"redirectInBrowser\"), \" to true and Gatsby will handle redirecting in the client as well.\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      },
                      {
                        "name": "toPath",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "string",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"URL of a created page (see \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"createPage\"), \")\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      },
                      {
                        "name": "force",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "boolean",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"(Plugin-specific) Will trigger the redirect even if the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fromPath\"), \" matches a piece of content. This is not part of the Gatsby API, but implemented by (some) plugins that configure hosting provider redirects\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      },
                      {
                        "name": "statusCode",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "number",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"(Plugin-specific) Manually set the HTTP status code. This allows you to create a rewrite (status code 200) or custom error page (status code 404). Note that this will override the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"isPermanent\"), \" option which also sets the status code. This is not part of the Gatsby API, but implemented by (some) plugins that configure hosting provider redirects\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      },
                      {
                        "name": "rest",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": null,
                          "type": "RestType",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": null,
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      }
                    ],
                    "returns": null,
                    "members": null
                  }
                ],
                "properties": null,
                "optional": false,
                "returns": null,
                "members": {
                  "static": null
                }
              },
              {
                "availableIn": [],
                "codeLocation": {
                  "start": {
                    "line": 600
                  },
                  "end": {
                    "line": 767
                  }
                },
                "kind": "constant",
                "name": "createNode",
                "description": {
                  "childMdx": {
                    "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Create a new node.\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                  }
                },
                "deprecated": null,
                "examples": [
                  {
                    "highlighted": "<span class=\"token function\">createNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Data for the node.</span>\n  field1<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">a string</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  field2<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n  field3<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token operator\">...</span>arbitraryOtherData<span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Required fields.</span>\n  id<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">a-node-id</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  parent<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">the-id-of-the-parent-node</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// or null if it's a source node without a parent</span>\n  children<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  internal<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    type<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">CoolServiceMarkdownField</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    contentDigest<span class=\"token punctuation\">:</span> crypto\n      <span class=\"token punctuation\">.</span><span class=\"token function\">createHash</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">md5</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>fieldData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">digest</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">hex</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    mediaType<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">text/markdown</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// optional</span>\n    content<span class=\"token punctuation\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>fieldData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// optional</span>\n    description<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Cool Service: \"Title of entry\"</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// optional</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>"
                  }
                ],
                "type": null,
                "params": [
                  {
                    "name": "node",
                    "description": {
                      "childMdx": {
                        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"a node object\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                      }
                    },
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "Object",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": [
                      {
                        "name": "id",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "string",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The node\\u2019s ID. Must be globally unique.\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      },
                      {
                        "name": "parent",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "string",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The ID of the parent\\u2019s node. If the node is\\nderived from another node, set that node as the parent. Otherwise it can\\njust be \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"null\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      },
                      {
                        "name": "children",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "Array",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"An array of children node IDs. If you\\u2019re\\ncreating the children nodes while creating the parent node, add the\\nchildren node IDs here directly. If you\\u2019re adding a child node to a\\nparent node created by a plugin, you can\\u2019t mutate this value directly\\nto add your node id, instead use the action creator \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"createParentChildLink\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      },
                      {
                        "name": "internal",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "Object",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": [
                          {
                            "name": "mediaType",
                            "examples": null,
                            "type": {
                              "typeDef": null,
                              "name": "string",
                              "type": "NameExpression",
                              "elements": null,
                              "expression": null,
                              "applications": null
                            },
                            "optional": false,
                            "params": null,
                            "properties": null,
                            "description": {
                              "childMdx": {
                                "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"An optional field to indicate to\\ntransformer plugins that your node has raw content they can transform.\\nUse either an official media type (we use mime-db as our source\\n(\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.npmjs.com/package/mime-db\"\n  }), \"https://www.npmjs.com/package/mime-db\"), \") or a made-up one if your data\\ndoesn\\u2019t fit in any existing bucket. Transformer plugins use node media types\\nfor deciding if they should transform a node into a new one. E.g.\\nmarkdown transformers look for media types of\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"text/markdown\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                              }
                            },
                            "deprecated": null,
                            "returns": null,
                            "members": null
                          },
                          {
                            "name": "type",
                            "examples": null,
                            "type": {
                              "typeDef": null,
                              "name": "string",
                              "type": "NameExpression",
                              "elements": null,
                              "expression": null,
                              "applications": null
                            },
                            "optional": false,
                            "params": null,
                            "properties": null,
                            "description": {
                              "childMdx": {
                                "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"An arbitrary globally unique type\\nchosen by the plugin creating the node. Should be descriptive of the\\nnode as the type is used in forming GraphQL types so users will query\\nfor nodes based on the type chosen here. Nodes of a given type can\\nonly be created by one plugin.\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                              }
                            },
                            "deprecated": null,
                            "returns": null,
                            "members": null
                          },
                          {
                            "name": "content",
                            "examples": null,
                            "type": {
                              "typeDef": null,
                              "name": "string",
                              "type": "NameExpression",
                              "elements": null,
                              "expression": null,
                              "applications": null
                            },
                            "optional": false,
                            "params": null,
                            "properties": null,
                            "description": {
                              "childMdx": {
                                "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"An optional field. This is rarely\\nused. It is used when a source plugin sources data it doesn\\u2019t know how\\nto transform e.g. a markdown string pulled from an API. The source plugin\\ncan defer the transformation to a specialized transformer plugin like\\ngatsby-transformer-remark. This \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"content\"), \" field holds the raw content\\n(so for the markdown case, the markdown string).\"), mdx(\"p\", null, \"Data that\\u2019s already structured should be added to the top-level of the node\\nobject and \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"not\"), \" added here. You should not \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"JSON.stringify\"), \" your node\\u2019s\\ndata here.\"), mdx(\"p\", null, \"If the content is very large and can be lazy-loaded, e.g. a file on disk,\\nyou can define a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"loadNodeContent\"), \" function for this node and the node\\ncontent will be lazy loaded when it\\u2019s needed.\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                              }
                            },
                            "deprecated": null,
                            "returns": null,
                            "members": null
                          },
                          {
                            "name": "contentDigest",
                            "examples": null,
                            "type": {
                              "typeDef": null,
                              "name": "string",
                              "type": "NameExpression",
                              "elements": null,
                              "expression": null,
                              "applications": null
                            },
                            "optional": false,
                            "params": null,
                            "properties": null,
                            "description": {
                              "childMdx": {
                                "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"the digest for the content\\nof this node. Helps Gatsby avoid doing extra work on data that hasn\\u2019t\\nchanged.\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                              }
                            },
                            "deprecated": null,
                            "returns": null,
                            "members": null
                          },
                          {
                            "name": "description",
                            "examples": null,
                            "type": {
                              "typeDef": null,
                              "name": "string",
                              "type": "NameExpression",
                              "elements": null,
                              "expression": null,
                              "applications": null
                            },
                            "optional": false,
                            "params": null,
                            "properties": null,
                            "description": {
                              "childMdx": {
                                "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"An optional field. Human\\nreadable description of what this node represent / its source. It will\\nbe displayed when type conflicts are found, making it easier to find\\nand correct type conflicts.\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                              }
                            },
                            "deprecated": null,
                            "returns": null,
                            "members": null
                          }
                        ],
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"node fields that aren\\u2019t generally\\ninteresting to consumers of node data but are very useful for plugin writers\\nand Gatsby core.\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      }
                    ],
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "plugin",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "Plugin",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": true,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "actionOptions",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "ActionOptions",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  }
                ],
                "properties": null,
                "optional": false,
                "returns": [
                  {
                    "name": null,
                    "description": {
                      "childMdx": {
                        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The returned Promise resolves when all cascading\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onCreateNode\"), \" API calls triggered by \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"createNode\"), \" have finished.\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                      }
                    },
                    "deprecated": null,
                    "optional": false,
                    "type": {
                      "name": "Promise",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    }
                  }
                ],
                "members": {
                  "static": null
                }
              }
            ]
          },
          {
            "relativePath": "gatsby/src/redux/actions/restricted.js",
            "childrenDocumentationJs": [
              {
                "availableIn": [
                  "createSchemaCustomization",
                  "sourceNodes"
                ],
                "codeLocation": {
                  "start": {
                    "line": 22
                  },
                  "end": {
                    "line": 33
                  }
                },
                "kind": "function",
                "name": "addThirdPartySchema",
                "description": {
                  "childMdx": {
                    "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Add a third-party schema to be merged into main schema. Schema has to be a\\ngraphql-js GraphQLSchema object.\"), mdx(\"p\", null, \"This schema is going to be merged as-is. This can easily break the main\\nGatsby schema, so it\\u2019s user\\u2019s responsibility to make sure it doesn\\u2019t happen\\n(by eg namespacing the schema).\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                  }
                },
                "deprecated": null,
                "examples": [],
                "type": null,
                "params": [
                  {
                    "name": "$0",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "Object",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": [
                      {
                        "name": "schema",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "GraphQLSchema",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"GraphQL schema to add\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      }
                    ],
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "plugin",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "Plugin",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "traceId",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "string",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": true,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  }
                ],
                "properties": null,
                "optional": false,
                "returns": null,
                "members": {
                  "static": null
                }
              },
              {
                "availableIn": [
                  "createSchemaCustomization",
                  "sourceNodes"
                ],
                "codeLocation": {
                  "start": {
                    "line": 177
                  },
                  "end": {
                    "line": 192
                  }
                },
                "kind": "function",
                "name": "createTypes",
                "description": {
                  "childMdx": {
                    "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Add type definitions to the GraphQL schema.\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                  }
                },
                "deprecated": null,
                "examples": [
                  {
                    "highlighted": "exports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">createSchemaCustomization</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> actions <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createTypes <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> actions\n  <span class=\"token keyword\">const</span> typeDefs <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n    \"\"\"\n    Markdown Node\n    \"\"\"\n    type MarkdownRemark implements Node @infer {\n      frontmatter: Frontmatter!\n    }\n\n    \"\"\"\n    Markdown Frontmatter\n    \"\"\"\n    type Frontmatter @infer {\n      title: String!\n      author: AuthorJson! @link\n      date: Date! @dateformat\n      published: Boolean!\n      tags: [String!]!\n    }\n\n    \"\"\"\n    Author information\n    \"\"\"\n    # Does not include automatically inferred fields\n    type AuthorJson implements Node @dontInfer {\n      name: String!\n      birthday: Date! @dateformat(locale: \"ru\")\n    }\n  </span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token function\">createTypes</span><span class=\"token punctuation\">(</span>typeDefs<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// using Gatsby Type Builder API</span>\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">createSchemaCustomization</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> actions<span class=\"token punctuation\">,</span> schema <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createTypes <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> actions\n  <span class=\"token keyword\">const</span> typeDefs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    schema<span class=\"token punctuation\">.</span><span class=\"token function\">buildObjectType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      name<span class=\"token punctuation\">:</span> <span class=\"token string\">'MarkdownRemark'</span><span class=\"token punctuation\">,</span>\n      fields<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        frontmatter<span class=\"token punctuation\">:</span> <span class=\"token string\">'Frontmatter!'</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      interfaces<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Node'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      extensions<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        infer<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    schema<span class=\"token punctuation\">.</span><span class=\"token function\">buildObjectType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Frontmatter'</span><span class=\"token punctuation\">,</span>\n      fields<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        title<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          type<span class=\"token punctuation\">:</span> <span class=\"token string\">'String!'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">parent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> parent<span class=\"token punctuation\">.</span>title <span class=\"token operator\">||</span> <span class=\"token string\">'(Untitled)'</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        author<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          type<span class=\"token punctuation\">:</span> <span class=\"token string\">'AuthorJson'</span>\n          extensions<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            link<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span>\n        date<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          type<span class=\"token punctuation\">:</span> <span class=\"token string\">'Date!'</span>\n          extensions<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            dateformat<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        published<span class=\"token punctuation\">:</span> <span class=\"token string\">'Boolean!'</span><span class=\"token punctuation\">,</span>\n        tags<span class=\"token punctuation\">:</span> <span class=\"token string\">'[String!]!'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    schema<span class=\"token punctuation\">.</span><span class=\"token function\">buildObjectType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      name<span class=\"token punctuation\">:</span> <span class=\"token string\">'AuthorJson'</span><span class=\"token punctuation\">,</span>\n      fields<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        name<span class=\"token punctuation\">:</span> <span class=\"token string\">'String!'</span>\n        birthday<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          type<span class=\"token punctuation\">:</span> <span class=\"token string\">'Date!'</span>\n          extensions<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            dateformat<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n              locale<span class=\"token punctuation\">:</span> <span class=\"token string\">'ru'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      interfaces<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Node'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      extensions<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        infer<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span>\n  <span class=\"token function\">createTypes</span><span class=\"token punctuation\">(</span>typeDefs<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>"
                  }
                ],
                "type": null,
                "params": [
                  {
                    "name": "types",
                    "description": {
                      "childMdx": {
                        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Type definitions\"), mdx(\"p\", null, \"Type definitions can be provided either as\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://graphql.org/graphql-js/\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"graphql-js\"), \" types\"), \", in\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://graphql.org/learn/\"\n  }), \"GraphQL schema definition language (SDL)\"), \"\\nor using Gatsby Type Builders available on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"schema\"), \" API argument.\"), mdx(\"p\", null, \"Things to note:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"type definitions targeting node types, i.e. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MarkdownRemark\"), \" and others\\nadded in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sourceNodes\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"onCreateNode\"), \" APIs, need to implement the\\n\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Node\"), \" interface. Interface fields will be added automatically, but it\\nis mandatory to label those types with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"implements Node\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"by default, explicit type definitions from \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"createTypes\"), \" will be merged\\nwith inferred field types, and default field resolvers for \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Date\"), \" (which\\nadds formatting options) and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"File\"), \" (which resolves the field value as\\na \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"relativePath\"), \" foreign-key field) are added. This behavior can be\\ncustomised with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"@infer\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"@dontInfer\"), \" directives or extensions. Fields\\nmay be assigned resolver (and other option like args) with additional\\ndirectives. Currently \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"@dateformat\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"@link\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"@fileByRelativePath\"), \" and\\n\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"@proxy\"), \" are available.\")), mdx(\"p\", null, \"Schema customization controls:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"@infer\"), \" - run inference on the type and add fields that don\\u2019t exist on the\\ndefined type to it.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"@dontInfer\"), \" - don\\u2019t run any inference on the type\")), mdx(\"p\", null, \"Extensions to add resolver options:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"@dateformat\"), \" - add date formatting arguments. Accepts \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"formatString\"), \" and\\n\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"locale\"), \" options that sets the defaults for this field\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"@link\"), \" - connect to a different Node. Arguments \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"by\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"from\"), \", which\\ndefine which field to compare to on a remote node and which field to use on\\nthe source node\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"@fileByRelativePath\"), \" - connect to a File node. Same arguments. The\\ndifference from link is that this normalizes the relative path to be\\nrelative from the path where source node is found.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"@proxy\"), \" - in case the underlying node data contains field names with\\ncharacters that are invalid in GraphQL, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"proxy\"), \" allows to explicitly\\nproxy those properties to fields with valid field names. Takes a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"from\"), \" arg.\")));\n}\n;\nMDXContent.isMDXComponent = true;"
                      }
                    },
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": null,
                      "type": "UnionType",
                      "elements": [
                        {
                          "type": "NameExpression",
                          "name": "string",
                          "typeDef___NODE": null
                        },
                        {
                          "type": "NameExpression",
                          "name": "GraphQLOutputType",
                          "typeDef___NODE": null
                        },
                        {
                          "type": "NameExpression",
                          "name": "GatsbyGraphQLType",
                          "typeDef___NODE": null
                        },
                        {
                          "type": "TypeApplication",
                          "expression": {
                            "type": "NameExpression",
                            "name": "Array",
                            "typeDef___NODE": null
                          },
                          "applications": [
                            {
                              "type": "NameExpression",
                              "name": "string",
                              "typeDef___NODE": null
                            }
                          ]
                        },
                        {
                          "type": "TypeApplication",
                          "expression": {
                            "type": "NameExpression",
                            "name": "Array",
                            "typeDef___NODE": null
                          },
                          "applications": [
                            {
                              "type": "NameExpression",
                              "name": "GraphQLOutputType",
                              "typeDef___NODE": null
                            }
                          ]
                        },
                        {
                          "type": "TypeApplication",
                          "expression": {
                            "type": "NameExpression",
                            "name": "Array",
                            "typeDef___NODE": null
                          },
                          "applications": [
                            {
                              "type": "NameExpression",
                              "name": "GatsbyGraphQLType",
                              "typeDef___NODE": null
                            }
                          ]
                        }
                      ],
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "plugin",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "Plugin",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "traceId",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "string",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": true,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  }
                ],
                "properties": null,
                "optional": false,
                "returns": null,
                "members": {
                  "static": null
                }
              },
              {
                "availableIn": [
                  "createSchemaCustomization",
                  "sourceNodes"
                ],
                "codeLocation": {
                  "start": {
                    "line": 237
                  },
                  "end": {
                    "line": 263
                  }
                },
                "kind": "function",
                "name": "createFieldExtension",
                "description": {
                  "childMdx": {
                    "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Add a field extension to the GraphQL schema.\"), mdx(\"p\", null, \"Extensions allow defining custom behavior which can be added to fields\\nvia directive (in SDL) or on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"extensions\"), \" prop (with Type Builders).\"), mdx(\"p\", null, \"The extension definition takes a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"name\"), \", an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"extend\"), \" function, and optional\\nextension \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"args\"), \" for options. The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"extend\"), \" function has to return a (partial)\\nfield config, and receives the extension options and the previous field config\\nas arguments.\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                  }
                },
                "deprecated": null,
                "examples": [
                  {
                    "highlighted": "exports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">createSchemaCustomization</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> actions <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createFieldExtension <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> actions\n  <span class=\"token function\">createFieldExtension</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'motivate'</span><span class=\"token punctuation\">,</span>\n    args<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      caffeine<span class=\"token punctuation\">:</span> <span class=\"token string\">'Int'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">options<span class=\"token punctuation\">,</span> prevFieldConfig</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        type<span class=\"token punctuation\">:</span> <span class=\"token string\">'String'</span><span class=\"token punctuation\">,</span>\n        args<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          sunshine<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            type<span class=\"token punctuation\">:</span> <span class=\"token string\">'Int'</span><span class=\"token punctuation\">,</span>\n            defaultValue<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">source<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">,</span> info</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> motivation <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>caffeine <span class=\"token operator\">||</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> args<span class=\"token punctuation\">.</span>sunshine\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>motivation <span class=\"token operator\">></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token string\">'Work! Work! Work!'</span>\n          <span class=\"token keyword\">return</span> <span class=\"token string\">'Maybe tomorrow.'</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>"
                  }
                ],
                "type": null,
                "params": [
                  {
                    "name": "extension",
                    "description": {
                      "childMdx": {
                        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The field extension definition\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                      }
                    },
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "GraphQLFieldExtensionDefinition",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "plugin",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "Plugin",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "traceId",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "string",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": true,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  }
                ],
                "properties": null,
                "optional": false,
                "returns": null,
                "members": {
                  "static": null
                }
              },
              {
                "availableIn": [
                  "createSchemaCustomization"
                ],
                "codeLocation": {
                  "start": {
                    "line": 287
                  },
                  "end": {
                    "line": 313
                  }
                },
                "kind": "function",
                "name": "printTypeDefinitions",
                "description": {
                  "childMdx": {
                    "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Write GraphQL schema to file\"), mdx(\"p\", null, \"Writes out inferred and explicitly specified type definitions. This is not\\nthe full GraphQL schema, but only the types necessary to recreate all type\\ndefinitions, i.e. it does not include directives, built-ins, and derived\\ntypes for filtering, sorting, pagination etc. Optionally, you can define a\\nlist of types to include/exclude. This is recommended to avoid including\\ndefinitions for plugin-created types.\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                  }
                },
                "deprecated": null,
                "examples": [],
                "type": null,
                "params": [
                  {
                    "name": "$0",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "object",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": [
                      {
                        "name": "path",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "string",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": true,
                        "params": null,
                        "properties": null,
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The path to the output file, defaults to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"schema.gql\")));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      },
                      {
                        "name": "include",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "object",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": true,
                        "params": null,
                        "properties": [
                          {
                            "name": "types",
                            "examples": null,
                            "type": {
                              "typeDef": null,
                              "name": null,
                              "type": "TypeApplication",
                              "elements": null,
                              "expression": {
                                "type": "NameExpression",
                                "name": "Array",
                                "typeDef___NODE": null
                              },
                              "applications": [
                                {
                                  "type": "NameExpression",
                                  "name": "string",
                                  "typeDef___NODE": null
                                }
                              ]
                            },
                            "optional": true,
                            "params": null,
                            "properties": null,
                            "description": {
                              "childMdx": {
                                "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only include these types\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                              }
                            },
                            "deprecated": null,
                            "returns": null,
                            "members": null
                          },
                          {
                            "name": "plugins",
                            "examples": null,
                            "type": {
                              "typeDef": null,
                              "name": null,
                              "type": "TypeApplication",
                              "elements": null,
                              "expression": {
                                "type": "NameExpression",
                                "name": "Array",
                                "typeDef___NODE": null
                              },
                              "applications": [
                                {
                                  "type": "NameExpression",
                                  "name": "string",
                                  "typeDef___NODE": null
                                }
                              ]
                            },
                            "optional": true,
                            "params": null,
                            "properties": null,
                            "description": {
                              "childMdx": {
                                "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only include types owned by these plugins\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                              }
                            },
                            "deprecated": null,
                            "returns": null,
                            "members": null
                          }
                        ],
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Configure types to include\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      },
                      {
                        "name": "exclude",
                        "examples": null,
                        "type": {
                          "typeDef": null,
                          "name": "object",
                          "type": "NameExpression",
                          "elements": null,
                          "expression": null,
                          "applications": null
                        },
                        "optional": true,
                        "params": null,
                        "properties": [
                          {
                            "name": "types",
                            "examples": null,
                            "type": {
                              "typeDef": null,
                              "name": null,
                              "type": "TypeApplication",
                              "elements": null,
                              "expression": {
                                "type": "NameExpression",
                                "name": "Array",
                                "typeDef___NODE": null
                              },
                              "applications": [
                                {
                                  "type": "NameExpression",
                                  "name": "string",
                                  "typeDef___NODE": null
                                }
                              ]
                            },
                            "optional": true,
                            "params": null,
                            "properties": null,
                            "description": {
                              "childMdx": {
                                "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Do not include these types\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                              }
                            },
                            "deprecated": null,
                            "returns": null,
                            "members": null
                          },
                          {
                            "name": "plugins",
                            "examples": null,
                            "type": {
                              "typeDef": null,
                              "name": null,
                              "type": "TypeApplication",
                              "elements": null,
                              "expression": {
                                "type": "NameExpression",
                                "name": "Array",
                                "typeDef___NODE": null
                              },
                              "applications": [
                                {
                                  "type": "NameExpression",
                                  "name": "string",
                                  "typeDef___NODE": null
                                }
                              ]
                            },
                            "optional": true,
                            "params": null,
                            "properties": null,
                            "description": {
                              "childMdx": {
                                "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Do not include types owned by these plugins\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                              }
                            },
                            "deprecated": null,
                            "returns": null,
                            "members": null
                          }
                        ],
                        "description": {
                          "childMdx": {
                            "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Configure types to exclude\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                          }
                        },
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      },
                      {
                        "name": "withFieldTypes",
                        "examples": null,
                        "type": null,
                        "optional": false,
                        "params": null,
                        "properties": null,
                        "description": null,
                        "deprecated": null,
                        "returns": null,
                        "members": null
                      }
                    ],
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "plugin",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "Plugin",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "traceId",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "string",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": true,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "withFieldTypes",
                    "description": {
                      "childMdx": {
                        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Include field types, defaults to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\")));\n}\n;\nMDXContent.isMDXComponent = true;"
                      }
                    },
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "boolean",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": true,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  }
                ],
                "properties": null,
                "optional": false,
                "returns": null,
                "members": {
                  "static": null
                }
              },
              {
                "availableIn": [
                  "createSchemaCustomization"
                ],
                "codeLocation": {
                  "start": {
                    "line": 345
                  },
                  "end": {
                    "line": 367
                  }
                },
                "kind": "function",
                "name": "createResolverContext",
                "description": {
                  "childMdx": {
                    "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Make functionality available on field resolver \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"context\")));\n}\n;\nMDXContent.isMDXComponent = true;"
                  }
                },
                "deprecated": null,
                "examples": [
                  {
                    "highlighted": "<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getHtml</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">md</span> <span class=\"token operator\">=></span> <span class=\"token function\">remark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">process</span><span class=\"token punctuation\">(</span>md<span class=\"token punctuation\">)</span>\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">createSchemaCustomization</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> actions <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  actions<span class=\"token punctuation\">.</span><span class=\"token function\">createResolverContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> getHtml <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// The context value can then be accessed in any field resolver like this:</span>\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">createSchemaCustomization</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> actions <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  actions<span class=\"token punctuation\">.</span><span class=\"token function\">createTypes</span><span class=\"token punctuation\">(</span>schema<span class=\"token punctuation\">.</span><span class=\"token function\">buildObjectType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Test'</span><span class=\"token punctuation\">,</span>\n    interfaces<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Node'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    fields<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      md<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        type<span class=\"token punctuation\">:</span> <span class=\"token string\">'String!'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">async</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">source<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">,</span> info</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> processed <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> context<span class=\"token punctuation\">.</span>transformerRemark<span class=\"token punctuation\">.</span><span class=\"token function\">getHtml</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span>contents<span class=\"token punctuation\">)</span>\n          <span class=\"token keyword\">return</span> processed<span class=\"token punctuation\">.</span>contents\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>"
                  }
                ],
                "type": null,
                "params": [
                  {
                    "name": "context",
                    "description": {
                      "childMdx": {
                        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Object to make available on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"context\"), \".\\nWhen called from a plugin, the context value will be namespaced under\\nthe camel-cased plugin name without the \\u201Cgatsby-\\u201D prefix\"));\n}\n;\nMDXContent.isMDXComponent = true;"
                      }
                    },
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "object",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "plugin",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "Plugin",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": false,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  },
                  {
                    "name": "traceId",
                    "description": null,
                    "deprecated": null,
                    "examples": null,
                    "type": {
                      "typeDef": null,
                      "name": "string",
                      "type": "NameExpression",
                      "elements": null,
                      "expression": null,
                      "applications": null
                    },
                    "optional": true,
                    "params": null,
                    "properties": null,
                    "returns": null,
                    "members": null
                  }
                ],
                "properties": null,
                "optional": false,
                "returns": null,
                "members": {
                  "static": null
                }
              }
            ]
          }
        ]
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": true
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcPagesDocsActionsJs3675010920 {\n  allFile(filter: {relativePath: {in: [\"gatsby/src/redux/actions/public.js\", \"gatsby/src/redux/actions/restricted.js\"]}}) {\n    nodes {\n      relativePath\n      childrenDocumentationJs {\n        availableIn\n        codeLocation {\n          start {\n            line\n          }\n          end {\n            line\n          }\n        }\n        ...DocumentationFragment\n      }\n    }\n  }\n}\n\nfragment DocumentationFragment on DocumentationJs {\n  kind\n  ...DocumentationDescriptionFragment\n  ...DocumentationExampleFragment\n  ...DocumentationParamsFragment\n  ...DocumentationReturnsFragment\n}\n\nfragment DocumentationDescriptionFragment on DocumentationJs {\n  name\n  description {\n    childMdx {\n      body\n    }\n  }\n  deprecated {\n    childMdx {\n      body\n    }\n  }\n}\n\nfragment DocumentationExampleFragment on DocumentationJs {\n  examples {\n    highlighted\n  }\n  type {\n    typeDef {\n      examples {\n        highlighted\n      }\n    }\n  }\n}\n\nfragment DocumentationParamsFragment on DocumentationJs {\n  ...DocumentationParamsFragmentR2\n  params {\n    ...DocumentationParamsFragmentR2\n  }\n  properties {\n    ...DocumentationParamsFragmentR2\n  }\n  members {\n    static {\n      ...DocumentationParamsFragmentR2\n    }\n  }\n  type {\n    typeDef {\n      ...DocumentationParamsFragmentR2\n    }\n  }\n}\n\nfragment DocumentationReturnsFragment on DocumentationJs {\n  returns {\n    ...DocumentationDescriptionFragment\n    ...DocumentationTypeFragment\n  }\n}\n\nfragment DocumentationTypeFragment on DocumentationJs {\n  optional\n  type {\n    name\n    type\n    elements\n    expression\n    applications\n  }\n}\n\nfragment DocumentationParamsFragmentR2 on DocumentationJs {\n  ...DocumentationParamsFragmentR1\n  params {\n    ...DocumentationParamsFragmentR1\n  }\n  properties {\n    ...DocumentationParamsFragmentR1\n  }\n  members {\n    static {\n      ...DocumentationParamsFragmentR1\n    }\n  }\n  type {\n    typeDef {\n      ...DocumentationParamsFragmentR1\n    }\n  }\n}\n\nfragment DocumentationParamsFragmentR1 on DocumentationJs {\n  ...DocumentationParamsFieldsFragment\n  params {\n    ...DocumentationParamsFieldsFragment\n  }\n  properties {\n    ...DocumentationParamsFieldsFragment\n  }\n  members {\n    static {\n      ...DocumentationParamsFieldsFragment\n    }\n  }\n  type {\n    typeDef {\n      ...DocumentationParamsFieldsFragment\n    }\n  }\n}\n\nfragment DocumentationParamsFieldsFragment on DocumentationJs {\n  ...DocumentationParamBase\n  members {\n    static {\n      ...DocumentationParamBase\n      type {\n        typeDef {\n          ...DocumentationParamBase\n        }\n      }\n    }\n  }\n  type {\n    typeDef {\n      ...DocumentationParamBase\n      members {\n        static {\n          ...DocumentationParamBase\n        }\n      }\n    }\n  }\n}\n\nfragment DocumentationParamBase on DocumentationJs {\n  params {\n    name\n    ...DocumentationDescriptionFragment\n    ...DocumentationExampleFragment\n    ...DocumentationTypeFragment\n  }\n  properties {\n    name\n    ...DocumentationExampleFragment\n    ...DocumentationTypeFragment\n  }\n  ...DocumentationTypeFragment\n  ...DocumentationDescriptionFragment\n  ...DocumentationExampleFragment\n  ...DocumentationReturnsFragment\n}\n"
}