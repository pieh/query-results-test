{
  "path": "/docs/add-custom-webpack-config/",
  "result": {
    "data": {
      "mdx": {
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Adding a Custom webpack Config\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Before creating custom webpack configuration, check to see if there\\u2019s a Gatsby\\nplugin already built that handles your use case in the\\n\", mdx(\"a\", _extends({\n    parentName: \"em\"\n  }, {\n    \"href\": \"/docs/plugins/\"\n  }), \"plugins section\"), \". If there\\u2019s not yet one and your use case is a\\ngeneral one, we highly encourage you to contribute back your plugin to the\\nGatsby Plugin Library so it\\u2019s available to others (including your future self \\uD83D\\uDE00).\")), mdx(\"p\", null, \"To add custom webpack configurations, create (if there\\u2019s not one already) a\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-node.js\"), \" file in your root directory. Inside this file, export a\\nfunction called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onCreateWebpackConfig\"), \".\"), mdx(\"p\", null, \"When Gatsby creates its webpack config, this function will be called allowing\\nyou to modify the default webpack config using\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/survivejs/webpack-merge\"\n  }), \"webpack-merge\"), \".\"), mdx(\"p\", null, \"Gatsby does multiple webpack builds with somewhat different configuration. We\\ncall each build type a \\u201Cstage\\u201D. The following stages exist:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"develop: when running the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gatsby develop\"), \" command. Has configuration for hot\\nreloading and CSS injection into page\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"develop-html: same as develop but without react-hmre in the babel config for\\nrendering the HTML component.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"build-javascript: production JavaScript and CSS build. Creates route JS bundles as well\\nas commons chunks for JS and CSS.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"build-html: production build static HTML pages\")), mdx(\"p\", null, \"Check\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/utils/webpack.config.js\"\n  }), \"webpack.config.js\"), \"\\nfor the source.\"), mdx(\"p\", null, \"There are many plugins in the Gatsby repo using this API to look to for examples\\ne.g. \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/packages/gatsby-plugin-sass/\"\n  }), \"Sass\"), \",\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/packages/gatsby-plugin-typescript/\"\n  }), \"TypeScript\"), \",\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/packages/gatsby-plugin-glamor/\"\n  }), \"Glamor\"), \", and many more!\"), mdx(\"h2\", {\n    \"id\": \"examples\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#examples\",\n    \"aria-label\": \"examples permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Examples\"), mdx(\"p\", null, \"Here is an example adding an additional global variable via the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DefinePlugin\"), \" and the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"less-loader\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js:title=gatsby-node.js\"\n  }), \"exports.onCreateWebpackConfig = ({\\n  stage,\\n  rules,\\n  loaders,\\n  plugins,\\n  actions,\\n}) => {\\n  actions.setWebpackConfig({\\n    module: {\\n      rules: [\\n        {\\n          test: /\\\\.less$/,\\n          use: [\\n            // We don't need to add the matching ExtractText plugin\\n            // because gatsby already includes it and makes sure its only\\n            // run at the appropriate stages, e.g. not in development\\n            loaders.miniCssExtract(),\\n            loaders.css({ importLoaders: 1 }),\\n            // the postcss loader comes with some nice defaults\\n            // including autoprefixer for our configured browsers\\n            loaders.postcss(),\\n            `less-loader`,\\n          ],\\n        },\\n      ],\\n    },\\n    plugins: [\\n      plugins.define({\\n        __DEVELOPMENT__: stage === `develop` || stage === `develop-html`,\\n      }),\\n    ],\\n  })\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"absolute-imports\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#absolute-imports\",\n    \"aria-label\": \"absolute imports permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Absolute imports\"), mdx(\"p\", null, \"Instead of writing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"import Header from '../../components/header'\"), \" over and over again you can just write \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"import Header from 'components/header'\"), \" with absolute imports:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js:title=gatsby-node.js\"\n  }), \"exports.onCreateWebpackConfig = ({ stage, actions }) => {\\n  actions.setWebpackConfig({\\n    resolve: {\\n      modules: [path.resolve(__dirname, \\\"src\\\"), \\\"node_modules\\\"],\\n    },\\n  })\\n}\\n\")), mdx(\"p\", null, \"You can always find more information on \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"resolve\"), \" and other options in the official \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://webpack.js.org/concepts/\"\n  }), \"Webpack docs\"), \".\"), mdx(\"h3\", {\n    \"id\": \"modifying-the-babel-loader\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#modifying-the-babel-loader\",\n    \"aria-label\": \"modifying the babel loader permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Modifying the babel loader\"), mdx(\"p\", null, \"You need this if you want to do things like transpile parts of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"node_modules\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js:title=gatsby-node.js\"\n  }), \"exports.onCreateWebpackConfig = ({ actions, loaders, getConfig }) => {\\n  const config = getConfig()\\n\\n  config.module.rules = [\\n    // Omit the default rule where test === '\\\\.jsx?$'\\n    ...config.module.rules.filter(\\n      rule => String(rule.test) !== String(/\\\\.jsx?$/)\\n    ),\\n\\n    // Recreate it with custom exclude filter\\n    {\\n      // Called without any arguments, `loaders.js` will return an\\n      // object like:\\n      // {\\n      //   options: undefined,\\n      //   loader: '/path/to/node_modules/gatsby/dist/utils/babel-loader.js',\\n      // }\\n      // Unless you're replacing Babel with a different transpiler, you probably\\n      // want this so that Gatsby will apply its required Babel\\n      // presets/plugins.  This will also merge in your configuration from\\n      // `babel.config.js`.\\n      ...loaders.js(),\\n\\n      test: /\\\\.jsx?$/,\\n\\n      // Exclude all node_modules from transpilation, except for 'swiper' and 'dom7'\\n      exclude: modulePath =>\\n        /node_modules/.test(modulePath) &&\\n        !/node_modules\\\\/(swiper|dom7)/.test(modulePath),\\n    },\\n  ]\\n\\n  // This will completely replace the webpack config with the modified object.\\n  actions.replaceWebpackConfig(config)\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "excerpt": "Before creating custom webpack configuration, check to see if there's a Gatsby\nplugin already built that handles your use case in the…",
        "timeToRead": 1,
        "tableOfContents": {
          "items": [
            {
              "url": "#examples",
              "title": "Examples",
              "items": [
                {
                  "url": "#absolute-imports",
                  "title": "Absolute imports"
                },
                {
                  "url": "#modifying-the-babel-loader",
                  "title": "Modifying the babel loader"
                }
              ]
            }
          ]
        },
        "fields": {
          "slug": "/docs/add-custom-webpack-config/",
          "anchor": "add-custom-webpack-config"
        },
        "frontmatter": {
          "title": "Adding a Custom webpack Config",
          "overview": null,
          "issue": null,
          "disableTableOfContents": null,
          "tableOfContentsDepth": null
        },
        "parent": {
          "__typename": "File",
          "relativePath": "docs/add-custom-webpack-config.md"
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/docs/add-custom-webpack-config/",
      "prev": {
        "title": "Using Babel Plugin Macros",
        "link": "/docs/babel-plugin-macros/",
        "breadcrumbTitle": "Babel Plugin Macros"
      },
      "next": {
        "title": "Customizing html.js",
        "link": "/docs/custom-html/",
        "breadcrumbTitle": "html.js"
      }
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsMarkdownJs2546709735(\n  $path: String!\n) {\n  mdx(fields: {slug: {eq: $path}}) {\n    body\n    excerpt\n    timeToRead\n    tableOfContents\n    fields {\n      slug\n      anchor\n    }\n    frontmatter {\n      title\n      overview\n      issue\n      disableTableOfContents\n      tableOfContentsDepth\n    }\n    ...MarkdownPageFooterMdx\n  }\n}\n\nfragment MarkdownPageFooterMdx on Mdx {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}