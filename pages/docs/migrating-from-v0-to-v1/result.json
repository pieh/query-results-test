{
  "path": "/docs/migrating-from-v0-to-v1/",
  "result": {
    "data": {
      "mdx": {
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Migrating from v0 to v1\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"move-source-directories-pages-components-utils-etc-under-src\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#move-source-directories-pages-components-utils-etc-under-src\",\n    \"aria-label\": \"move source directories pages components utils etc under src permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Move source directories (pages, components, utils, etc.) under \", mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"src\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/issues/814\"\n  }), \"We moved site source files under a \\u201Csrc\\u201D directory\"), \"\\nto cleanly separate them from config/data/build folders so to make integration\\nwith various JavaScript tooling (e.g.\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/prettier/prettier\"\n  }), \"Prettier\"), \") simpler.\"), mdx(\"p\", null, \"Everything related to webpack, loaders, Babel, React should work nearly\\nidentically under v1 of Gatsby compared to v0 so this part of the migration is\\nsuper easy.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"mkdir src\\ngit mv pages src\\ngit mv components src\\ngit mv utils src\\n...\\n\")), mdx(\"h2\", {\n    \"id\": \"replace-react-routers-link-component-with-gatsby-link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#replace-react-routers-link-component-with-gatsby-link\",\n    \"aria-label\": \"replace react routers link component with gatsby link permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Replace react-router\\u2019s Link component with gatsby-link\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-link\"), \" is a wrapper for the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Link>\"), \" component in react-router. It\\nautomatically prefixes urls and handles prefetching. Add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-link\"), \" to your\\nproject by running:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm install --save gatsby-link\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-link\"), \" auto-detects whether to use a plain \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Link>\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<NavLink>\"), \" based\\non what props you pass it. There\\u2019s no need to wrap \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<IndexLink>\"), \" because it was\\ndropped in react-router v4 in favor of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"exact\"), \" prop.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import Link from 'gatsby-link'\\n\\n// Equivalent to react-router's <Link>\\n<Link to=\\\"/page-2/\\\">Page 2</Link>\\n\\n// Equivalent to react-router's <NavLink>\\n<Link to=\\\"/page-2/\\\" activeClassName=\\\"selected\\\">Page 2</Link>\\n\\n// `exact` prop replaces <IndexLink> from react-router v3\\n<Link to=\\\"/\\\" exact>Home</Link>\\n\")), mdx(\"p\", null, \"Prefixing links is also now handled automatically by our new \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Link>\"), \" component\\nso remove usages of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"prefixLink\"), \" in links.\"), mdx(\"p\", null, \"Use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-link\"), \" everywhere and things will Just Work\\u2122.\"), mdx(\"h2\", {\n    \"id\": \"configtoml-is-now-gatsby-configjs\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#configtoml-is-now-gatsby-configjs\",\n    \"aria-label\": \"configtoml is now gatsby configjs permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"config.toml is now gatsby-config.js\"), mdx(\"p\", null, \"If you previously added site metadata to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"config.toml\"), \", move that into the new\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config.js\"), \".\"), mdx(\"p\", null, \"You need to remove all requires/imports of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"config\"), \" in your code.\"), mdx(\"p\", null, \"Site-wide metadata should now be \\u201Cqueried\\u201D using GraphQL.\"), mdx(\"p\", null, \"A minimal config module would look like:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"module.exports = {\\n  siteMetadata: {\\n    title: `My Sweet Gatsby Site!`,\\n  },\\n}\\n\")), mdx(\"p\", null, \"and a minimal query would look like\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"export const pageQuery = graphql`\\n  query SiteMetadataLookup($slug: String!) {\\n    site {\\n      siteMetadata {\\n        title\\n      }\\n    }\\n}\\n`\\n\")), mdx(\"p\", null, \"exporting that from the same file as a React component will make the config\\ninformation available to the component as a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"data\"), \" prop on the component. For\\ninstance, the title attribute could be referenced as\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"props.data.site.siteMetadata.title\"), \".\"), mdx(\"h2\", {\n    \"id\": \"migrate-wrapper-components-to-template-components\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#migrate-wrapper-components-to-template-components\",\n    \"aria-label\": \"migrate wrapper components to template components permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Migrate wrapper components to template components\"), mdx(\"p\", null, \"In v0, there was the concept of \\u201Cwrapper\\u201D components that would render each file\\nof a given file type. E.g. markdown files would be rendered by a wrapper\\ncomponent at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"wrappers/md.js\"), \" and JSON files \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"wrappers/json.js\"), \", etc. Data would\\nbe parsed from the files and automatically injected into the wrapper components\\nas props.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"If you\\u2019re \", mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"not\"), \" using wrappers in your site, feel free to skip this section.\")), mdx(\"p\", null, \"While this proved often intuitive and workable, it was overly prescriptive and\\nrestricted the types of pages that could be created due to the required 1-to-1\\nrelationship between files and pages.\"), mdx(\"p\", null, \"So for v1, we\\u2019re moving to a mode where sites must explicitly create pages and\\ncreate mappings between template components and data.\"), mdx(\"p\", null, \"Gatsby\\u2019s new data system turns your data into a queryable database. You can\\nquery data in any way to create pages and to pull in data into these pages.\"), mdx(\"p\", null, \"These mappings can range between straightforward and complex. E.g. a markdown\\nblog would want to create a post page for every markdown file. But it also might\\nwant to create tag pages for each tag linking to the posts using that tag. See\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/issues/421\"\n  }), \"this issue on programmatic routes\"), \"\\nand this\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.bricolage.io/gatsby-open-source-work/\"\n  }), \"blog post introducing work on v1\"), \"\\nfor more background on this change.\"), mdx(\"p\", null, \"Here\\u2019s an example of migrating a markdown wrapper to Gatsby v1.\"), mdx(\"h3\", {\n    \"id\": \"add-markdown-plugins\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#add-markdown-plugins\",\n    \"aria-label\": \"add markdown plugins permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Add markdown plugins\"), mdx(\"p\", null, \"Install Gatsby plugins for handling markdown files.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm install --save gatsby-source-filesystem@next gatsby-transformer-remark@next gatsby-remark-copy-linked-files@next gatsby-remark-prismjs@next gatsby-remark-responsive-iframe@next gatsby-remark-images@next gatsby-remark-smartypants@next gatsby-plugin-sharp@next\")), mdx(\"p\", null, \"Next add them to your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config.js\"), \" file. Make your config file look\\nsomething like the following:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"module.exports = {\\n  siteMetadata: {\\n    title: `My Sweet Gatsby Site!`,\\n  },\\n  plugins: [\\n    {\\n      resolve: `gatsby-source-filesystem`,\\n      options: {\\n        name: `pages`,\\n        path: `${__dirname}/src/pages/`,\\n      },\\n    },\\n    {\\n      resolve: `gatsby-transformer-remark`,\\n      options: {\\n        plugins: [\\n          {\\n            resolve: `gatsby-remark-images`,\\n            options: {\\n              maxWidth: 690,\\n            },\\n          },\\n          {\\n            resolve: `gatsby-remark-responsive-iframe`,\\n          },\\n          `gatsby-remark-prismjs`,\\n          `gatsby-remark-copy-linked-files`,\\n          `gatsby-remark-smartypants`,\\n        ],\\n      },\\n    },\\n    `gatsby-plugin-sharp`,\\n  ],\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"create-slugs-for-markdown-files\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#create-slugs-for-markdown-files\",\n    \"aria-label\": \"create slugs for markdown files permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Create slugs for markdown files\"), mdx(\"p\", null, \"It\\u2019s handy to store the pathname or \\u201Cslug\\u201D for each markdown page with the\\nmarkdown data. This let\\u2019s you query the slug from multiple places.\"), mdx(\"p\", null, \"Here\\u2019s how you do that.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"// In your gatsby-node.js\\nconst path = require(\\\"path\\\")\\n\\nexports.onCreateNode = ({ node, boundActionCreators, getNode }) => {\\n  const { createNodeField } = boundActionCreators\\n  let slug\\n  if (node.internal.type === `MarkdownRemark`) {\\n    const fileNode = getNode(node.parent)\\n    const parsedFilePath = path.parse(fileNode.relativePath)\\n    if (parsedFilePath.name !== `index` && parsedFilePath.dir !== ``) {\\n      slug = `/${parsedFilePath.dir}/${parsedFilePath.name}/`\\n    } else if (parsedFilePath.dir === ``) {\\n      slug = `/${parsedFilePath.name}/`\\n    } else {\\n      slug = `/${parsedFilePath.dir}/`\\n    }\\n\\n    // Add slug as a field on the node.\\n    createNodeField({ node, name: `slug`, value: slug })\\n  }\\n}\\n\")), mdx(\"p\", null, \"Now we can create pages for each markdown file using our slug. In the same\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-node.js\"), \" file add:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"exports.createPages = ({ graphql, boundActionCreators }) => {\\n  const { createPage } = boundActionCreators\\n\\n  return new Promise((resolve, reject) => {\\n    const pages = []\\n    const blogPost = path.resolve(\\\"src/templates/blog-post.js\\\")\\n    // Query for all markdown \\\"nodes\\\" and for the slug we previously created.\\n    resolve(\\n      graphql(\\n        `\\n          {\\n            allMarkdownRemark {\\n              edges {\\n                node {\\n                  fields {\\n                    slug\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        `\\n      ).then(result => {\\n        if (result.errors) {\\n          console.log(result.errors)\\n          reject(result.errors)\\n        }\\n\\n        // Create blog posts pages.\\n        result.data.allMarkdownRemark.edges.forEach(edge => {\\n          createPage({\\n            path: edge.node.fields.slug, // required\\n            component: blogPost,\\n            context: {\\n              slug: edge.node.fields.slug,\\n            },\\n          })\\n        })\\n\\n        return\\n      })\\n    )\\n  })\\n}\\n\")), mdx(\"p\", null, \"So we\\u2019ve now generated the pathname or slug for each markdown page as well as\\ntold Gatsby about these pages. You\\u2019ll notice above that we reference a blog post\\ntemplate file when creating the pages. We haven\\u2019t created that yet so let\\u2019s do\\nit.\"), mdx(\"p\", null, \"In your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src\"), \" directory, create a templates directory and add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"blog-post.js\"), \".\"), mdx(\"p\", null, \"This is a normal React.js component with a special Gatsby twist\\u2014a GraphQL query\\nspecifying the data needs of the component. As a start, make the component look\\nlike the following. You can make it more complex once the basics are working.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"import React from \\\"react\\\"\\n\\nclass BlogPostTemplate extends React.Component {\\n  render() {\\n    const post = this.props.data.markdownRemark\\n\\n    return (\\n      <div>\\n        <h1>{post.frontmatter.title}</h1>\\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\\n      </div>\\n    )\\n  }\\n}\\n\\nexport default BlogPostTemplate\\n\\nexport const pageQuery = graphql`\\n  query BlogPostBySlug($slug: String!) {\\n    markdownRemark(fields: { slug: { eq: $slug } }) {\\n      html\\n      frontmatter {\\n        title\\n      }\\n    }\\n  }\\n`\\n\")), mdx(\"p\", null, \"At the bottom of the file you\\u2019ll notice the graphql query. This is how pages and\\ntemplates in Gatsby v1 get their data. In v0, wrapper components had little\\ncontrol over what data they got. In v1, templates and pages can query for\\nexactly the data they need.\"), mdx(\"p\", null, \"There will be a more in-depth tutorial and GraphQL-specific documentation soon\\nbut in the meantime, check out \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://graphql.org/\"\n  }), \"http://graphql.org/\"), \" and play around on Gatsby\\u2019s\\nbuilt-in GraphQL IDE (Graph\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"i\"), \"QL) which can be reached when you start the\\ndevelopment server.\"), mdx(\"p\", null, \"At this point you should have working markdown pages when you run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm run develop\"), \"! Now start gradually adding back what you had in your wrapper component\\nadding HTML elements, styles, and extending the GraphQL query as needed.\"), mdx(\"p\", null, \"Repeat this process for other wrapper components you were using.\"), mdx(\"h2\", {\n    \"id\": \"htmljs\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#htmljs\",\n    \"aria-label\": \"htmljs permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"html.js\"), mdx(\"p\", null, \"This should generally work the same as in v0 except there are two additional\\nprops that must be added to your HTML component. Somewhere in your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<head>\"), \" add\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"{this.props.headComponents}\"), \" and somewhere at the end of your body, remove\\nloading \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bundle.js\"), \" and add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"{this.props.postBodyComponents}\"), \".\"), mdx(\"p\", null, \"Also the target div now must have an id of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"___gatsby\"), \". So the body section of\\nyour \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"html.js\"), \" should look like:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<body>\\n  <div id=\\\"___gatsby\\\" dangerouslySetInnerHTML={{ __html: this.props.body }} />\\n  {this.props.postBodyComponents}\\n</body>\\n\")), mdx(\"h2\", {\n    \"id\": \"_templatejs-is-now-srclayoutsindexjs\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#_templatejs-is-now-srclayoutsindexjs\",\n    \"aria-label\": \"_templatejs is now srclayoutsindexjs permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"_\", \"template.js is now src/layouts/index.js\"), mdx(\"p\", null, \"You should be able to copy your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"_template.js\"), \" file directly making only one\\nchange making \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"this.props.children\"), \" a function call so \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"this.props.children()\"), \".\\nThe rational for this change is described\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/pull/940#issuecomment-300878300\"\n  }), \"in this PR comment\"), \".\"), mdx(\"p\", null, \"Nested layouts (similar to the nested \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"template feature) are \", \"_\", \"not\"), \" supported yet\\nbut are on the roadmap for v1.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "excerpt": "Move source directories (pages, components, utils, etc.) under  src We moved site source files under a \"src\" directory \nto cleanly separate…",
        "timeToRead": 3,
        "tableOfContents": {
          "items": [
            {
              "url": "#move-source-directories-pages-components-utils-etc-under-src",
              "title": "Move source directories (pages, components, utils, etc.) under src"
            },
            {
              "url": "#replace-react-routers-link-component-with-gatsby-link",
              "title": "Replace react-router's Link component with gatsby-link"
            },
            {
              "url": "#configtoml-is-now-gatsby-configjs",
              "title": "config.toml is now gatsby-config.js"
            },
            {
              "url": "#migrate-wrapper-components-to-template-components",
              "title": "Migrate wrapper components to template components",
              "items": [
                {
                  "url": "#add-markdown-plugins",
                  "title": "Add markdown plugins"
                },
                {
                  "url": "#create-slugs-for-markdown-files",
                  "title": "Create slugs for markdown files"
                }
              ]
            },
            {
              "url": "#htmljs",
              "title": "html.js"
            },
            {
              "url": "#_templatejs-is-now-srclayoutsindexjs",
              "title": "_template.js is now src/layouts/index.js"
            }
          ]
        },
        "fields": {
          "slug": "/docs/migrating-from-v0-to-v1/",
          "anchor": "migrating-from-v0-to-v1"
        },
        "frontmatter": {
          "title": "Migrating from v0 to v1",
          "overview": null,
          "issue": null,
          "disableTableOfContents": null,
          "tableOfContentsDepth": null
        },
        "parent": {
          "__typename": "File",
          "relativePath": "docs/migrating-from-v0-to-v1.md"
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/docs/migrating-from-v0-to-v1/",
      "prev": {
        "title": "Migrating from v1 to v2",
        "link": "/docs/migrating-from-v1-to-v2/"
      },
      "next": {
        "title": "Conceptual Guide",
        "link": "/docs/conceptual-guide/"
      }
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsMarkdownJs2546709735(\n  $path: String!\n) {\n  mdx(fields: {slug: {eq: $path}}) {\n    body\n    excerpt\n    timeToRead\n    tableOfContents\n    fields {\n      slug\n      anchor\n    }\n    frontmatter {\n      title\n      overview\n      issue\n      disableTableOfContents\n      tableOfContentsDepth\n    }\n    ...MarkdownPageFooterMdx\n  }\n}\n\nfragment MarkdownPageFooterMdx on Mdx {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}