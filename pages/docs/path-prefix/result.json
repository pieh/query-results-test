{
  "path": "/docs/path-prefix/",
  "result": {
    "data": {
      "mdx": {
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Adding a Path Prefix\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Many applications are hosted at something other than the root (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/\"), \") of their domain.\"), mdx(\"p\", null, \"For example, a Gatsby blog could live at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"example.com/blog/\"), \", or a site could be hosted on GitHub Pages at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"example.github.io/my-gatsby-site/\"), \".\"), mdx(\"p\", null, \"Each of these sites need a prefix added to all paths on the site. So a link to\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/my-sweet-blog-post/\"), \" should be rewritten as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/blog/my-sweet-blog-post\"), \".\"), mdx(\"p\", null, \"In addition, links to various resources (JavaScript, CSS, images, and other static content) need the same prefix, so that the site continues to function correctly when served with the path prefix in place.\"), mdx(\"p\", null, \"Adding the path prefix is a two step process, as follows:\"), mdx(\"h3\", {\n    \"id\": \"add-to-gatsby-configjs\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#add-to-gatsby-configjs\",\n    \"aria-label\": \"add to gatsby configjs permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Add to \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"gatsby-config.js\")), mdx(\"p\", null, \"Firstly, add a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pathPrefix\"), \" value to your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config.js\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js:title=gatsby-config.js\"\n  }), \"module.exports = {\\n  pathPrefix: `/blog`,\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"build\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#build\",\n    \"aria-label\": \"build permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Build\"), mdx(\"p\", null, \"The final step is to build your application with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--prefix-paths\"), \" flag, like so:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"gatsby build --prefix-paths\\n\")), mdx(\"p\", null, \"If this flag is not passed, Gatsby will ignore your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pathPrefix\"), \" and build the site as if hosted from the root domain.\"), mdx(\"h3\", {\n    \"id\": \"in-app-linking\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#in-app-linking\",\n    \"aria-label\": \"in app linking permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"In-app linking\"), mdx(\"p\", null, \"Gatsby provides APIs and libraries to make using this feature seamless. Specifically, the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/gatsby-link/\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"Link\")), \" component has built-in functionality to handle path prefixing.\"), mdx(\"p\", null, \"For example, if you want to link to the location \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/page-2\"), \", but the actual link will be prefixed (e.g. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/blog/page-2\"), \"); you don\\u2019t need to hard code the prefix into your links. By using the Gatsby \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Link\"), \" component, paths will automatically be prefixed with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pathPrefix\"), \" value assigned in your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config.js\"), \" file. If you later migrate away from using a path prefix, your links will \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"still\"), \" work seamlessly.\"), mdx(\"p\", null, \"For example, when navigating to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"page-2\"), \" location in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Link\"), \" component below; the location will be automatically prefixed with your assigned \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pathPrefix\"), \" value.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx:title=src/pages/index.js\"\n  }), \"import React from \\\"react\\\"\\nimport { Link } from \\\"gatsby\\\"\\nimport Layout from \\\"../components/layout\\\"\\n\\nfunction Index() {\\n  return (\\n    <Layout>\\n      {/* highlight-next-line */}\\n      <Link to=\\\"page-2\\\">Page 2</Link>\\n    </Layout>\\n  )\\n}\\n\")), mdx(\"p\", null, \"If you want to do programmatic/dynamic navigation, this is also possible! Expose the Gatsby \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"navigate\"), \" helper, and this too automatically handles path prefixing.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx:title=src/pages/index.js\"\n  }), \"import React from \\\"react\\\"\\nimport { navigate } from \\\"gatsby\\\"\\nimport Layout from \\\"../components/layout\\\"\\n\\nexport default function Index() {\\n  return (\\n    <Layout>\\n      {/* Note: this is an intentionally contrived example, but you get the idea! */}\\n      {/* highlight-next-line */}\\n      <button onClick={() => navigate(\\\"/page-2\\\")}>\\n        Go to page 2, dynamically\\n      </button>\\n    </Layout>\\n  )\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"additional-considerations\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#additional-considerations\",\n    \"aria-label\": \"additional considerations permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Additional Considerations\"), mdx(\"p\", null, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/asset-prefix/\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"assetPrefix\")), \" feature can be thought of as semi-related to this feature. That feature allows your assets (non-HTML files, e.g. images, JavaScript, etc.) to be hosted on a separate domain, for example a CDN.\"), mdx(\"p\", null, \"This feature works seamlessly with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"assetPrefix\"), \". Build out your application with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--prefix-paths\"), \" flag and you\\u2019ll be well on your way to hosting an application with its assets hosted on a CDN, and its core functionality available behind a path prefix.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "excerpt": "Many applications are hosted at something other than the root ( / ) of their domain. For example, a Gatsby blog could live at  example.com…",
        "timeToRead": 1,
        "tableOfContents": {
          "items": [
            {
              "url": "#add-to-gatsby-configjs",
              "title": "Add to gatsby-config.js"
            },
            {
              "url": "#build",
              "title": "Build"
            },
            {
              "url": "#in-app-linking",
              "title": "In-app linking"
            },
            {
              "url": "#additional-considerations",
              "title": "Additional Considerations"
            }
          ]
        },
        "fields": {
          "slug": "/docs/path-prefix/",
          "anchor": "path-prefix"
        },
        "frontmatter": {
          "title": "Adding a Path Prefix",
          "overview": null,
          "issue": null,
          "disableTableOfContents": null,
          "tableOfContentsDepth": null
        },
        "parent": {
          "__typename": "File",
          "relativePath": "docs/path-prefix.md"
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/docs/path-prefix/",
      "prev": {
        "title": "Deploying to Surge",
        "link": "/docs/deploying-to-surge/",
        "breadcrumbTitle": "Surge"
      },
      "next": {
        "title": "How Gatsby Works with GitHub Pages",
        "link": "/docs/how-gatsby-works-with-github-pages/",
        "breadcrumbTitle": "GitHub Pages"
      }
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsMarkdownJs2546709735(\n  $path: String!\n) {\n  mdx(fields: {slug: {eq: $path}}) {\n    body\n    excerpt\n    timeToRead\n    tableOfContents\n    fields {\n      slug\n      anchor\n    }\n    frontmatter {\n      title\n      overview\n      issue\n      disableTableOfContents\n      tableOfContentsDepth\n    }\n    ...MarkdownPageFooterMdx\n  }\n}\n\nfragment MarkdownPageFooterMdx on Mdx {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}