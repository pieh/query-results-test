{
  "path": "/docs/gatsby-link/",
  "result": {
    "data": {
      "mdx": {
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Gatsby Link API\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar EggheadEmbed = makeShortcode(\"EggheadEmbed\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"For internal navigation, Gatsby includes a built-in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Link>\"), \" component as well as a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"navigate\"), \" function which is used for programmatic navigation.\"), mdx(\"p\", null, \"Gatsby\\u2019s \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Link>\"), \" component enables linking to internal pages as well as a powerful performance feature called preloading. Preloading is used to prefetch resources so that the resources are fetched by the time the user navigates with this component. We use an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"IntersectionObserver\"), \" to fetch a low-priority request when the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Link\"), \" is in the viewport and then use an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onMouseOver\"), \" event to trigger a high-priority request when it is likely that a user will navigate to the requested resource.\"), mdx(\"p\", null, \"The component is a wrapper around \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reach.tech/router/api/Link\"\n  }), \"@reach/router\\u2019s Link component\"), \" that adds useful enhancements specific to Gatsby. All props are passed through to @reach/router\\u2019s \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Link\"), \" component.\"), mdx(\"h2\", {\n    \"id\": \"how-to-use-gatsby-link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#how-to-use-gatsby-link\",\n    \"aria-label\": \"how to use gatsby link permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"How to use Gatsby Link\"), mdx(EggheadEmbed, {\n    lessonLink: \"https://egghead.io/lessons/gatsby-why-and-how-to-use-gatsby-s-link-component\",\n    lessonTitle: \"Why and How to Use Gatsby\\u2019s Link Component\",\n    mdxType: \"EggheadEmbed\"\n  }), mdx(\"h3\", {\n    \"id\": \"replace-a-tags-with-the-link-tag-for-local-links\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#replace-a-tags-with-the-link-tag-for-local-links\",\n    \"aria-label\": \"replace a tags with the link tag for local links permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Replace \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"a\"), \" tags with the \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"Link\"), \" tag for local links\"), mdx(\"p\", null, \"In any situation where you want to link between pages on the same site, use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Link\"), \" component instead of an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"a\"), \" tag.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import React from \\\"react\\\"\\n// highlight-next-line\\nimport { Link } from \\\"gatsby\\\"\\n\\nconst Page = () => (\\n  <div>\\n    <p>\\n      {/* highlight-next-line */}\\n      Check out my <Link to=\\\"/blog\\\">blog</Link>!\\n    </p>\\n    <p>\\n      {/* Note that external links still use `a` tags. */}\\n      Follow me on <a href=\\\"https://twitter.com/gatsbyjs\\\">Twitter</a>!\\n    </p>\\n  </div>\\n)\\n\")), mdx(\"h3\", {\n    \"id\": \"add-custom-styles-for-the-currently-active-link\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#add-custom-styles-for-the-currently-active-link\",\n    \"aria-label\": \"add custom styles for the currently active link permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Add custom styles for the currently active link\"), mdx(EggheadEmbed, {\n    lessonLink: \"https://egghead.io/lessons/gatsby-add-custom-styles-for-the-active-link-using-gatsby-s-link-component\",\n    lessonTitle: \"Add Custom Styles for the Active Link Using Gatsby\\u2019s Link Component\",\n    mdxType: \"EggheadEmbed\"\n  }), mdx(\"p\", null, \"It\\u2019s often a good idea to show which page is currently being viewed by visually changing the link matching the current page.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Link\"), \" provides two options for adding styles to the active link:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"activeStyle\"), \" \\u2014\\xA0a style object that will only be applied when the current item is active\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"activeClassName\"), \" \\u2014 a class name that will only be added to the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Link\"), \" when the current item is active\")), mdx(\"p\", null, \"For example, to turn the active link red, either of the following approaches is valid:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import React from \\\"react\\\"\\nimport { Link } from \\\"gatsby\\\"\\n\\nconst SiteNavigation = () => (\\n  <nav>\\n    <Link\\n      to=\\\"/\\\"\\n      {/* highlight-start */}\\n      {/* This assumes the `active` class is defined in your CSS */}\\n      activeClassName=\\\"active\\\"\\n      {/* highlight-end */}\\n    >\\n      Home\\n    </Link>\\n    <Link\\n      to=\\\"/about/\\\"\\n      {/* highlight-next-line */}\\n      activeStyle={{ color: \\\"red\\\" }}\\n    >\\n      About\\n    </Link>\\n  </nav>\\n)\\n\")), mdx(\"h3\", {\n    \"id\": \"use-getprops-for-advanced-link-styling\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#use-getprops-for-advanced-link-styling\",\n    \"aria-label\": \"use getprops for advanced link styling permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Use \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"getProps\"), \" for advanced link styling\"), mdx(\"p\", null, \"Gatsby\\u2019s \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Link>\"), \" component comes with a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getProps\"), \" prop, which can be useful for advanced styling. It passes you an object with the following properties:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"isCurrent\"), \" \\u2014 true if the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"location.pathname\"), \" is exactly the same as the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<Link>\"), \" component\\u2019s \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"to\"), \" prop\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"isPartiallyCurrent\"), \" \\u2014 true if the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"location.pathname\"), \" starts with the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<Link>\"), \" component\\u2019s \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"to\"), \" prop\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"href\"), \" \\u2014 the value of the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"to\"), \" prop\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"location\"), \" \\u2014 the page\\u2019s \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"location\"), \" object\")), mdx(\"p\", null, \"You can read more about it on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reach.tech/router/api/Link\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"@reach/router\"), \"\\u2019s documentation\"), \".\"), mdx(\"h3\", {\n    \"id\": \"show-active-styles-for-partially-matched-and-parent-links\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#show-active-styles-for-partially-matched-and-parent-links\",\n    \"aria-label\": \"show active styles for partially matched and parent links permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Show active styles for partially matched and parent links\"), mdx(\"p\", null, \"By default the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"activeStyle\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"activeClassName\"), \" props will only be set on a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Link>\"), \" component if the current URL matches its \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"to\"), \" prop \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"exactly\"), \". Sometimes, we may want to style a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Link>\"), \" as active even if it partially matches the current URL. For example:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We may want \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/blog/hello-world\"), \" to match \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<Link to=\\\"/blog\\\">\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Or \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/gatsby-link/#passing-state-through-link-and-navigate\"), \" to match \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<Link to=\\\"/gatsby-link\\\">\"))), mdx(\"p\", null, \"In instances like these, just add the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"partiallyActive\"), \" prop to your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Link>\"), \" component and the style will also be applied even if the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"to\"), \" prop only is a partial match:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import React from \\\"react\\\"\\nimport { Link } from \\\"gatsby\\\"\\n\\nconst Header = <>\\n  <Link\\n    to=\\\"/articles/\\\"\\n    activeStyle={{ color: \\\"red\\\" }}\\n    {/* highlight-next-line */}\\n    partiallyActive={true}\\n  >\\n    Articles\\n  </Link>\\n</>;\\n\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, mdx(\"strong\", {\n    parentName: \"em\"\n  }, \"Note:\"), \" Available from Gatsby V2.1.31, if you are experiencing issues please check your version and/or update.\")), mdx(\"h3\", {\n    \"id\": \"pass-state-as-props-to-the-linked-page\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#pass-state-as-props-to-the-linked-page\",\n    \"aria-label\": \"pass state as props to the linked page permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Pass state as props to the linked page\"), mdx(EggheadEmbed, {\n    lessonLink: \"https://egghead.io/lessons/gatsby-include-information-about-state-in-navigation-with-gatsby-s-link-component\",\n    lessonTitle: \"Include Information About State in Navigation With Gatsby\\u2019s Link Component\",\n    mdxType: \"EggheadEmbed\"\n  }), mdx(\"p\", null, \"Sometimes you\\u2019ll want to pass data from the source page to the linked page. You can do this by passing a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"state\"), \" prop to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Link\"), \" component or on a call to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"navigate\"), \" function. The linked page will have a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"location\"), \" prop containing a nested \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"state\"), \" object structure containing the passed data.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"const PhotoFeedItem = ({ id }) => (\\n  <div>\\n    {/* (skip the feed item markup for brevity) */}\\n    <Link\\n      to={`/photos/${id}`}\\n      {/* highlight-next-line */}\\n      state={{ fromFeed: true }}\\n    >\\n      View Photo\\n    </Link>\\n  </div>\\n)\\n\\n// highlight-start\\nconst Photo = ({ location, photoId }) => {\\n  if (location.state.fromFeed) {\\n    // highlight-end\\n    return <FromFeedPhoto id={photoId} />\\n  } else {\\n    return <Photo id={photoId} />\\n  }\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"replace-history-to-change-back-button-behavior\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#replace-history-to-change-back-button-behavior\",\n    \"aria-label\": \"replace history to change back button behavior permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Replace history to change \\u201Cback\\u201D button behavior\"), mdx(EggheadEmbed, {\n    lessonLink: \"https://egghead.io/lessons/gatsby-replace-navigation-history-items-with-gatsby-s-link-component\",\n    lessonTitle: \"Replace Navigation History Items with Gatsby\\u2019s Link Component\",\n    mdxType: \"EggheadEmbed\"\n  }), mdx(\"p\", null, \"There are a few cases where it might make sense to modify the \\u201Cback\\u201D button\\u2019s behavior. For example, if you build a page where you choose something, then see an \\u201Care you sure?\\u201D page to make sure it\\u2019s what you really wanted, and finally see a confirmation page, it may be desirable to skip the \\u201Care you sure?\\u201D page if the \\u201Cback\\u201D button is clicked.\"), mdx(\"p\", null, \"In those cases, use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"replace\"), \" prop to replace the current URL in history with the target of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Link\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import React from \\\"react\\\"\\nimport { Link } from \\\"gatsby\\\"\\n\\nconst AreYouSureLink = () => (\\n  <Link\\n    to=\\\"/confirmation/\\\"\\n    {/* highlight-next-line */}\\n    replace\\n  >\\n    Yes, I\\u2019m sure\\n  </Link>\\n)\\n\")), mdx(\"h2\", {\n    \"id\": \"how-to-use-the-navigate-helper-function\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#how-to-use-the-navigate-helper-function\",\n    \"aria-label\": \"how to use the navigate helper function permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"How to use the \", mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"navigate\"), \" helper function\"), mdx(EggheadEmbed, {\n    lessonLink: \"https://egghead.io/lessons/gatsby-navigate-to-a-new-page-programmatically-in-gatsby\",\n    lessonTitle: \"Navigate to a New Page Programmatically in Gatsby\",\n    mdxType: \"EggheadEmbed\"\n  }), mdx(\"p\", null, \"Sometimes you need to navigate to pages programmatically, such as during form submissions. In these cases, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Link\"), \" won\\u2019t work.\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, mdx(\"strong\", {\n    parentName: \"em\"\n  }, \"Note:\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"em\"\n  }, \"navigate\"), \" was previously named \", mdx(\"inlineCode\", {\n    parentName: \"em\"\n  }, \"navigateTo\"), \". \", mdx(\"inlineCode\", {\n    parentName: \"em\"\n  }, \"navigateTo\"), \" is deprecated in Gatsby v2 and will be removed in the next major release.\")), mdx(\"p\", null, \"Instead, Gatsby exports a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"navigate\"), \" helper function that accepts \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"to\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"options\"), \" arguments.\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Argument\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Required\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"to\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"yes\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The page to navigate to (e.g. \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"/blog/\"), \").\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"options.state\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"no\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"An object. Values passed here will be available in \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"location.state\"), \" in the target page\\u2019s props.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"options.replace\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"no\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"A boolean value. If true, replaces the current URL in history.\")))), mdx(\"p\", null, \"By default, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"navigate\"), \" operates the same way as a clicked \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Link\"), \" component.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import React from \\\"react\\\"\\nimport { navigate } from \\\"gatsby\\\" // highlight-line\\n\\nconst Form = () => (\\n  <form\\n    onSubmit={event => {\\n      event.preventDefault()\\n\\n      // TODO: do something with form values\\n      // highlight-next-line\\n      navigate(\\\"/form-submitted/\\\")\\n    }}\\n  >\\n    {/* (skip form inputs for brevity) */}\\n  </form>\\n)\\n\")), mdx(\"h3\", {\n    \"id\": \"add-state-to-programmatic-navigation\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#add-state-to-programmatic-navigation\",\n    \"aria-label\": \"add state to programmatic navigation permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Add state to programmatic navigation\"), mdx(\"p\", null, \"To include state information, add an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"options\"), \" object and include a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"state\"), \" prop with the desired state.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import React from \\\"react\\\"\\nimport { navigate } from \\\"gatsby\\\"\\n\\nconst Form = () => (\\n  <form\\n    onSubmit={event => {\\n      event.preventDefault()\\n\\n      // Implementation of this function is an exercise for the reader.\\n      const formValues = getFormValues()\\n\\n      navigate(\\n        \\\"/form-submitted/\\\",\\n        // highlight-start\\n        {\\n          state: { formValues },\\n        }\\n        // highlight-end\\n      )\\n    }}\\n  >\\n    {/* (skip form inputs for brevity) */}\\n  </form>\\n)\\n\")), mdx(\"h3\", {\n    \"id\": \"replace-history-during-programmatic-navigation\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#replace-history-during-programmatic-navigation\",\n    \"aria-label\": \"replace history during programmatic navigation permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Replace history during programmatic navigation\"), mdx(\"p\", null, \"If the navigation should replace history instead of pushing a new entry into the navigation history, add the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"replace\"), \" prop with a value of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \" to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"options\"), \" argument of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"navigate\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import React from \\\"react\\\"\\nimport { navigate } from \\\"gatsby\\\"\\n\\nconst Form = () => (\\n  <form\\n    onSubmit={event => {\\n      event.preventDefault()\\n\\n      // TODO: do something with form values\\n      navigate(\\n        \\\"/form-submitted/\\\",\\n        // highlight-next-line\\n        { replace: true }\\n      )\\n    }}\\n  >\\n    {/* (skip form inputs for brevity) */}\\n  </form>\\n)\\n\")), mdx(\"h2\", {\n    \"id\": \"add-the-path-prefix-to-paths-using-withprefix\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#add-the-path-prefix-to-paths-using-withprefix\",\n    \"aria-label\": \"add the path prefix to paths using withprefix permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Add the path prefix to paths using \", mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"withPrefix\")), mdx(\"p\", null, \"It is common to host sites in a sub-directory of a site. Gatsby lets you \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/path-prefix/\"\n  }), \"set\\nthe path prefix for your site\"), \". After doing so, Gatsby\\u2019s \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Link>\"), \" component will automatically handle constructing the correct URL in development and production.\"), mdx(\"p\", null, \"For pathnames you construct manually, there\\u2019s a helper function, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"withPrefix\"), \" that prepends your path prefix in production (but doesn\\u2019t during development where paths don\\u2019t need prefixed).\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import { withPrefix } from \\\"gatsby\\\"\\n\\nconst IndexLayout = ({ children, location }) => {\\n  const isHomepage = location.pathname === withPrefix(\\\"/\\\")\\n\\n  return (\\n    <div>\\n      <h1>Welcome {isHomepage ? \\\"home\\\" : \\\"aboard\\\"}!</h1>\\n      {children}\\n    </div>\\n  )\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"reminder-use-link-only-for-internal-links\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#reminder-use-link-only-for-internal-links\",\n    \"aria-label\": \"reminder use link only for internal links permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Reminder: use \", mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"<Link>\"), \" only for internal links!\"), mdx(\"p\", null, \"This component is intended \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"only\"), \" for links to pages handled by Gatsby. For links to pages on other domains or pages on the same domain not handled by the current Gatsby site, use the normal \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<a>\"), \" element.\"), mdx(\"p\", null, \"Sometimes you won\\u2019t know ahead of time whether a link will be internal or not,\\nsuch as when the data is coming from a CMS.\\nIn these cases you may find it useful to make a component which inspects the\\nlink and renders either with Gatsby\\u2019s \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Link>\"), \" or with a regular \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<a>\"), \" tag\\naccordingly.\"), mdx(\"p\", null, \"Since deciding whether a link is internal or not depends on the site in\\nquestion, you may need to customize the heuristic to your environment, but the\\nfollowing may be a good starting point:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import { Link as GatsbyLink } from \\\"gatsby\\\"\\n\\n// Since DOM elements <a> cannot receive activeClassName\\n// and partiallyActive, destructure the prop here and\\n// pass it only to GatsbyLink\\nconst Link = ({ children, to, activeClassName, partiallyActive, ...other }) => {\\n  // Tailor the following test to your environment.\\n  // This example assumes that any internal link (intended for Gatsby)\\n  // will start with exactly one slash, and that anything else is external.\\n  const internal = /^\\\\/(?!\\\\/)/.test(to)\\n\\n  // Use Gatsby Link for internal links, and <a> for others\\n  if (internal) {\\n    return (\\n      <GatsbyLink\\n        to={to}\\n        activeClassName={activeClassName}\\n        partiallyActive={partiallyActive}\\n        {...other}\\n      >\\n        {children}\\n      </GatsbyLink>\\n    )\\n  }\\n  return (\\n    <a href={to} {...other}>\\n      {children}\\n    </a>\\n  )\\n}\\n\\nexport default Link\\n\")), mdx(\"h3\", {\n    \"id\": \"file-downloads\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#file-downloads\",\n    \"aria-label\": \"file downloads permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"File Downloads\"), mdx(\"p\", null, \"You can similarly check for file downloads:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"  const file = /\\\\.[0-9a-z]+$/i.test(to)\\n\\n  ...\\n\\n  if (internal) {\\n    if (file) {\\n        return (\\n          <a href={to} {...other}>\\n            {children}\\n          </a>\\n      )\\n    }\\n    return (\\n      <GatsbyLink to={to} {...other}>\\n        {children}\\n      </GatsbyLink>\\n    )\\n  }\\n\")), mdx(\"h2\", {\n    \"id\": \"recommendations-for-programmatic-in-app-navigation\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#recommendations-for-programmatic-in-app-navigation\",\n    \"aria-label\": \"recommendations for programmatic in app navigation permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Recommendations for programmatic, in-app navigation\"), mdx(\"p\", null, \"Neither \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Link>\"), \" nor \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"navigate\"), \" can be used for in-route navigation with a hash or query parameter. If you need this behavior, you should either use an anchor tag or import the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@reach/router\"), \" package\\u2014which Gatsby already depends upon\\u2014to make use of its \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"navigate\"), \" function, like so:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import { navigate } from '@reach/router';\\n\\n...\\n\\nonClick = () => {\\n  navigate('#some-link');\\n  // OR\\n  navigate('?foo=bar');\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"additional-resources\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#additional-resources\",\n    \"aria-label\": \"additional resources permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Additional resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/tutorial/authentication-tutorial/\"\n  }), \"Authentication tutorial for client-only routes\"))));\n}\n;\nMDXContent.isMDXComponent = true;",
        "excerpt": "For internal navigation, Gatsby includes a built-in  <Link>  component as well as a  navigate  function which is used for programmatic…",
        "timeToRead": 3,
        "tableOfContents": {
          "items": [
            {
              "url": "#how-to-use-gatsby-link",
              "title": "How to use Gatsby Link",
              "items": [
                {
                  "url": "#replace-a-tags-with-the-link-tag-for-local-links",
                  "title": "Replace a tags with the Link tag for local links"
                },
                {
                  "url": "#add-custom-styles-for-the-currently-active-link",
                  "title": "Add custom styles for the currently active link"
                },
                {
                  "url": "#use-getprops-for-advanced-link-styling",
                  "title": "Use getProps for advanced link styling"
                },
                {
                  "url": "#show-active-styles-for-partially-matched-and-parent-links",
                  "title": "Show active styles for partially matched and parent links"
                },
                {
                  "url": "#pass-state-as-props-to-the-linked-page",
                  "title": "Pass state as props to the linked page"
                },
                {
                  "url": "#replace-history-to-change-back-button-behavior",
                  "title": "Replace history to change “back” button behavior"
                }
              ]
            },
            {
              "url": "#how-to-use-the-navigate-helper-function",
              "title": "How to use the navigate helper function",
              "items": [
                {
                  "url": "#add-state-to-programmatic-navigation",
                  "title": "Add state to programmatic navigation"
                },
                {
                  "url": "#replace-history-during-programmatic-navigation",
                  "title": "Replace history during programmatic navigation"
                }
              ]
            },
            {
              "url": "#add-the-path-prefix-to-paths-using-withprefix",
              "title": "Add the path prefix to paths using withPrefix"
            },
            {
              "url": "#reminder-use-link-only-for-internal-links",
              "title": "Reminder: use <Link> only for internal links!",
              "items": [
                {
                  "url": "#file-downloads",
                  "title": "File Downloads"
                }
              ]
            },
            {
              "url": "#recommendations-for-programmatic-in-app-navigation",
              "title": "Recommendations for programmatic, in-app navigation"
            },
            {
              "url": "#additional-resources",
              "title": "Additional resources"
            }
          ]
        },
        "fields": {
          "slug": "/docs/gatsby-link/",
          "anchor": "gatsby-link"
        },
        "frontmatter": {
          "title": "Gatsby Link API",
          "overview": null,
          "issue": null,
          "disableTableOfContents": null,
          "tableOfContentsDepth": null
        },
        "parent": {
          "__typename": "File",
          "relativePath": "docs/gatsby-link.md"
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/docs/gatsby-link/",
      "prev": {
        "title": "Gatsby Themes",
        "link": "/docs/theme-api/"
      },
      "next": {
        "title": "Gatsby Image",
        "link": "/docs/gatsby-image/"
      }
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsMarkdownJs2546709735(\n  $path: String!\n) {\n  mdx(fields: {slug: {eq: $path}}) {\n    body\n    excerpt\n    timeToRead\n    tableOfContents\n    fields {\n      slug\n      anchor\n    }\n    frontmatter {\n      title\n      overview\n      issue\n      disableTableOfContents\n      tableOfContentsDepth\n    }\n    ...MarkdownPageFooterMdx\n  }\n}\n\nfragment MarkdownPageFooterMdx on Mdx {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}