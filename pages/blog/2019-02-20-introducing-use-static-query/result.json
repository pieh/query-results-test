{
  "path": "/blog/2019-02-20-introducing-use-static-query/",
  "result": {
    "data": {
      "mdx": {
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Introducing useStaticQuery\",\n  \"date\": \"2019-02-20T00:00:00.000Z\",\n  \"author\": \"Sidhartha Chatterjee\",\n  \"tags\": [\"releases\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"React Hooks are \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"cool\"), \". Besides simplifying your code and removing the need for a lot of boilerplate associated with classes in JavaScript (looking at you, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"this\"), \"), they enable some serious shareability. They also make it possible to use state in functional components.\"), mdx(\"p\", null, \"You can probably tell that we\\u2019ve been super excited about \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reactjs.org/docs/hooks-intro.html\"\n  }), \"React Hooks\"), \". So when they finally landed in React 16.8, we figured it was time to give our very own \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"StaticQuery\"), \" component the hook treatment!\"), mdx(\"h3\", {\n    \"id\": \"say-hello-to-usestaticquery\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#say-hello-to-usestaticquery\",\n    \"aria-label\": \"say hello to usestaticquery permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Say hello to useStaticQuery\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useStaticQuery\"), \" is a hook that takes a GraphQL query and returns your data. That\\u2019s it.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"No more Render Props necessary to use a Static Query\")), mdx(\"p\", null, \"This simplifies accessing data in your components and also keeps your component tree shallow.\"), mdx(\"p\", null, \"Let\\u2019s quickly check out a basic example. Here\\u2019s a typical Header component, first written using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"StaticQuery\"), \" and then \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useStaticQuery\"), \".\"), mdx(\"h3\", {\n    \"id\": \"before\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#before\",\n    \"aria-label\": \"before permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Before\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import React from \\\"react\\\"\\nimport { StaticQuery, graphql } from \\\"gatsby\\\"\\n\\nconst Header = () => {\\n  return (\\n    // highlight-next-line\\n    <StaticQuery\\n      query={graphql`\\n        query {\\n          site {\\n            siteMetadata {\\n              title\\n            }\\n          }\\n        }\\n      `}\\n      // highlight-next-line\\n      render={data => (\\n        <header>\\n          <h1>{data.site.siteMetadata.title}</h1>\\n        </header>\\n      )}\\n    />\\n  )\\n}\\n\\nexport default Header\\n\")), mdx(\"h3\", {\n    \"id\": \"after\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#after\",\n    \"aria-label\": \"after permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"After\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import React from \\\"react\\\"\\nimport { useStaticQuery, graphql } from \\\"gatsby\\\"\\n\\nconst Header = () => {\\n  // highlight-next-line\\n  const { site } = useStaticQuery(\\n    graphql`\\n      query {\\n        site {\\n          siteMetadata {\\n            title\\n          }\\n        }\\n      }\\n    `\\n  )\\n\\n  return (\\n    // highlight-next-line\\n    <header>\\n      <h1>{site.siteMetadata.title}</h1>\\n    </header>\\n  )\\n}\\n\\nexport default Header\\n\")), mdx(\"p\", null, \"Isn\\u2019t that cleaner and more succinct?\"), mdx(\"p\", null, \"Just like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"StaticQuery\"), \", when you build your site for production, Gatsby will parse \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"and\"), \" execute your queries in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useStaticQuery\"), \" and inject data in just the right place.\"), mdx(\"p\", null, \"Where this gets even more powerful is the ability to create custom hooks that use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useStaticQuery\"), \" in them. Let\\u2019s say you need to query for the site title several times in your app. Instead of a call to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useStaticQuery\"), \" in each component, you can extract it out to a custom hook like:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"const useSiteMetadata = () => {\\n  const { site } = useStaticQuery(\\n    graphql`\\n      query {\\n        site {\\n          siteMetadata {\\n            title\\n          }\\n        }\\n      }\\n    `\\n  )\\n  return site.siteMetadata\\n}\\n\")), mdx(\"p\", null, \"Now every time you need the site title, you can use this custom hook.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"const Header = () => {\\n  // highlight-next-line\\n  const { title } = useSiteMetadata()\\n\\n  return (\\n    <header>\\n      <h1>{title}</h1>\\n    </header>\\n  )\\n}\\n\")), mdx(\"p\", null, \"Isn\\u2019t that neat?\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/3cc7d5dfc58ce636f71971e823f5ab49/excited.gif\",\n    \"alt\": \"excited-gif\"\n  }))), mdx(\"p\", null, \"And if there\\u2019s a change to the structure of that data, you only need to change the query in one place!\"), mdx(\"p\", null, \"We\\u2019re really excited about this pattern and everything it enables. With our upcoming \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/blog/2019-02-11-gatsby-themes-livestream-and-example/\"\n  }), \"themes\"), \" feature, a theme could even export custom hooks of its own. Users could access data using these without writing a single query.\"), mdx(\"h1\", {\n    \"id\": \"where-can-i-get-this\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h1\"\n  }, {\n    \"href\": \"#where-can-i-get-this\",\n    \"aria-label\": \"where can i get this permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Where can I get this?\"), mdx(\"blockquote\", {\n    className: \"twitter-tweet\"\n  }, mdx(\"p\", {\n    lang: \"en\",\n    dir: \"ltr\"\n  }, \"useStaticQuery hook snuck into \", mdx(\"a\", {\n    href: \"https://twitter.com/gatsbyjs?ref_src=twsrc%5Etfw\"\n  }, \"@gatsbyjs\"), \" pretty quick \\uD83D\\uDE0D \", mdx(\"a\", {\n    href: \"https://t.co/PbzTuzk6hb\"\n  }, \"https://t.co/PbzTuzk6hb\"), \" waaay nicer API than using the <StaticQuery> component. \", mdx(\"a\", {\n    href: \"https://t.co/6Mf4sSF5C3\"\n  }, \"pic.twitter.com/6Mf4sSF5C3\")), \"\\u2014 Jacob Impson (@jacobimpson) \", mdx(\"a\", {\n    href: \"https://twitter.com/jacobimpson/status/1095930703504584706?ref_src=twsrc%5Etfw\"\n  }, \"February 14, 2019\")), \" \", mdx(\"script\", {\n    async: true,\n    src: \"https://platform.twitter.com/widgets.js\",\n    charSet: \"utf-8\"\n  }), mdx(\"p\", null, \"The astute reader (Jacob is astute, be like Jacob) would\\u2019ve noticed that we \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"stealthily\"), \" released \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useStaticQuery\"), \" last week.\"), mdx(\"p\", null, \"To use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useStaticQuery\"), \", update \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby\"), \" to v2.1.0 and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"react\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"react-dom\"), \" to v16.8.0!\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"npm install gatsby react react-dom\\n\")), mdx(\"h1\", {\n    \"id\": \"known-limitations\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h1\"\n  }, {\n    \"href\": \"#known-limitations\",\n    \"aria-label\": \"known limitations permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Known Limitations\"), mdx(\"p\", null, \"Because of the way queries are currently parsed in Gatsby, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useStaticQuery\"), \" has one small limitation at the moment. You can only use one instance of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useStaticQuery\"), \" in a file. That\\u2019s it! This doesn\\u2019t mean your app can\\u2019t have multiple uses, but rather that a single JavaScript file can only have one instance of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useStaticQuery\"), \".\"), mdx(\"p\", null, \"We\\u2019re working on fixing this soon.\"), mdx(\"h1\", {\n    \"id\": \"next-steps\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h1\"\n  }, {\n    \"href\": \"#next-steps\",\n    \"aria-label\": \"next steps permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Next Steps\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Check out the \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/docs/use-static-query/\"\n  }), \"documentation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To see \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"useStaticQuery\"), \" in action (and for a really gentle introduction to Hooks in general), check out the \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.youtube.com/watch?v=asrdFuAxPaU&list=PLz8Iz-Fnk_eTpvd49Sa77NiF8Uqq5Iykx\"\n  }), \"livestream\"), \" Jason Lengstorf and I did last week\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Hit \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://twitter.com/chatsidhartha\"\n  }), \"me\"), \" up on Twitter for any questions!\")), mdx(\"p\", null, \"We hope you enjoy using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useStaticQuery\"), \" in your Gatsby apps. Happy building!\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "excerpt": "React Hooks are  cool . Besides simplifying your code and removing the need for a lot of boilerplate associated with classes in JavaScript…",
        "timeToRead": 2,
        "fields": {
          "slug": "/blog/2019-02-20-introducing-use-static-query/",
          "publishedAt": null
        },
        "frontmatter": {
          "title": "Introducing useStaticQuery",
          "excerpt": null,
          "date": "February 20th 2019",
          "rawDate": "2019-02-20T00:00:00.000Z",
          "canonicalLink": null,
          "tags": [
            "releases"
          ],
          "image": null,
          "imageAuthor": null,
          "imageAuthorLink": null,
          "imageTitle": null,
          "showImageInArticle": null,
          "author": {
            "id": "Sidhartha Chatterjee",
            "bio": "Core team @ GatsbyJS. Full-Stack Developer. Scuba diver.",
            "twitter": "@chatsidhartha",
            "avatar": {
              "childImageSharp": {
                "fixed": {
                  "tracedSVG": "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%3e%3crect%20width='100%25'%20height='100%25'%20fill='%23f6f2f8'/%3e%3cpath%20d='M0%202l1%2011%201%209C4%2020%203%200%201%200L0%202m4%200l1%209v6l4-2c2-1%203-2%202-3l1-2%201-3c0-3%202-3%204-2s3%205%202%208-1%203%202%200%203-2%202%202c-2%206-6%208-7%204l-2-2-3-1H9v2l-2%201H6l-1%202c-2%202-2%203-1%203v3l2%201h9l7%201c2%202%204%202%207%202l3-1V0H18C4%200%204%200%204%202'%20fill='%23e0d6eb'%20fill-rule='evenodd'/%3e%3c/svg%3e",
                  "width": 64,
                  "height": 64,
                  "src": "/static/afc3d65e13f7b4f0db7851bc589c8eb3/88ae8/sidhartha-chatterjee.jpg",
                  "srcSet": "/static/afc3d65e13f7b4f0db7851bc589c8eb3/88ae8/sidhartha-chatterjee.jpg 1x,\n/static/afc3d65e13f7b4f0db7851bc589c8eb3/0740f/sidhartha-chatterjee.jpg 1.5x,\n/static/afc3d65e13f7b4f0db7851bc589c8eb3/c9264/sidhartha-chatterjee.jpg 2x"
                }
              }
            },
            "fields": {
              "slug": "/contributors/sidhartha-chatterjee/"
            }
          }
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/blog/2019-02-20-introducing-use-static-query/",
      "prev": {
        "fields": {
          "slug": "/blog/2019-02-14-behind-the-scenes-q-and-a/",
          "package": null,
          "released": true
        },
        "frontmatter": {
          "title": "Behind the Scenes Q & A: What Makes Gatsby Great Webinar",
          "draft": null,
          "canonicalLink": null,
          "publishedAt": null,
          "issue": null,
          "tags": [
            "performance"
          ]
        }
      },
      "next": {
        "fields": {
          "slug": "/blog/2019-02-26-getting-started-with-gatsby-themes/",
          "package": null,
          "released": true
        },
        "frontmatter": {
          "title": "Getting Started with Gatsby Themes and MDX",
          "draft": null,
          "canonicalLink": null,
          "publishedAt": null,
          "issue": null,
          "tags": [
            "themes",
            "getting-started"
          ]
        }
      }
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateBlogPostJs2991924798(\n  $slug: String!\n) {\n  mdx(fields: {slug: {eq: $slug}}) {\n    body\n    excerpt\n    timeToRead\n    fields {\n      slug\n      publishedAt\n    }\n    frontmatter {\n      title\n      excerpt\n      date(formatString: \"MMMM Do YYYY\")\n      rawDate: date\n      canonicalLink\n      tags\n      image {\n        childImageSharp {\n          resize(width: 1500, height: 1500) {\n            src\n          }\n          fluid(maxWidth: 786) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      imageAuthor\n      imageAuthorLink\n      imageTitle\n      showImageInArticle\n      author {\n        id\n        bio\n        twitter\n        avatar {\n          childImageSharp {\n            fixed(width: 64, height: 64, quality: 75, traceSVG: {turdSize: 10, background: \"#f6f2f8\", color: \"#e0d6eb\"}) {\n              ...GatsbyImageSharpFixed_tracedSVG\n            }\n          }\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n}\n\nfragment GatsbyImageSharpFluid on ImageSharpFluid {\n  base64\n  aspectRatio\n  src\n  srcSet\n  sizes\n}\n\nfragment GatsbyImageSharpFixed_tracedSVG on ImageSharpFixed {\n  tracedSVG\n  width\n  height\n  src\n  srcSet\n}\n"
}