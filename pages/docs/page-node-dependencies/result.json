{
  "path": "/docs/page-node-dependencies/",
  "result": {
    "data": {
      "mdx": {
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Page -> Node Dependency Tracking\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In almost every GraphQL Resolver, you\\u2019ll see the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/redux/actions.js#L788\"\n  }), \"createPageDependency\"), \", or \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/redux/index.js#L198\"\n  }), \"getNodeAndSavePathDependency\"), \" functions. These are responsible for recording which nodes are depended on by which pages. In \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"develop\"), \" mode, if a node\\u2019s content changes, we re-run pages whose queries depend on that node. This is one of the things that makes \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"develop\"), \" so awesome.\"), mdx(\"h2\", {\n    \"id\": \"how-dependencies-are-recorded\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#how-dependencies-are-recorded\",\n    \"aria-label\": \"how dependencies are recorded permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"How dependencies are recorded\"), mdx(\"p\", null, \"Recording of Page -> Node dependencies are handled by the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/redux/actions.js#L788\"\n  }), \"createPageDependency\"), \" action. It takes the page (in the form of its \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"path\"), \"), and either a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nodeId\"), \", or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"connection\"), \".\"), mdx(\"p\", null, \"If a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nodeId\"), \" is passed, we\\u2019re telling Gatsby that the page depends specifically on this node. So, if the node is changed, then the page\\u2019s query needs to be re-executed.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"connection\"), \" is a Type string. E.g \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MarkdownRemark\"), \", or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"File\"), \". If \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"createPageDependency\"), \" is called with a page path and a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"connection\"), \", we are telling Gatsby that this page depends on all nodes of this type. Therefore if any node of this type changes (e.g a change to a markdown node), then this page must be rebuilt. This variant is only called from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/schema/run-sift.js#L264\"\n  }), \"run-sift.js\"), \" when we\\u2019re running a query such as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"allFile\"), \", or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"allMarkdownRemark\"), \". See \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/schema-connections/\"\n  }), \"Schema Connections\"), \" for more info.\"), mdx(\"h2\", {\n    \"id\": \"how-dependencies-are-stored\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#how-dependencies-are-stored\",\n    \"aria-label\": \"how dependencies are stored permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"How dependencies are stored\"), mdx(\"p\", null, \"Page -> Node dependencies are tracked via the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"componentDataDependencies\"), \" redux namespace. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"createPageDependency\"), \" is the only way to mutate it. The namespace is comprised of two sub structures:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"{\\n  nodes: { ... }, // mapping nodeId -> pages\\n  connections: { ... } // mapping of type names -> pages\\n}\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Nodes\"), \" is a map of nodeID to the set of pages that depend on that node. E.g\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"// state.componentDataDependencies.nodes\\n{\\n  `ID of Some MarkdownRemark node`: [\\n    `blogs/my-blog1`,\\n    `blogs/my-blog2`\\n  ],\\n  `otherId`: [ `more pages`, ...].\\n  ...\\n}\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Connections\"), \" is a map of type name to the set of pages that depend on that type. e.g\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"// state.componentDataDependencies.connections\\n{\\n  `MarkdownRemark`: [\\n    `blogs/my-blog1`,\\n    `blogs/my-blog2`\\n  ],\\n  `File`: [ `more pages`, ... ],\\n  ...\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"how-dependency-information-is-used\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#how-dependency-information-is-used\",\n    \"aria-label\": \"how dependency information is used permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"How dependency information is used\"), mdx(\"p\", null, \"Page -> Node dependencies are used entirely during query execution to figure out which nodes are \\u201Cdirty\\u201D, and therefore which page\\u2019s queries need to be re-executed. This occurs in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"page-query-runner.js\"), \" in the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/internal-plugins/query-runner/page-query-runner.js#L89\"\n  }), \"findIdsWithoutDataDependencies\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/internal-plugins/query-runner/page-query-runner.js#L171\"\n  }), \"findDirtyIds\"), \" functions. This is described in greater detail in the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/query-execution/\"\n  }), \"Query Execution\"), \" docs.\"), mdx(\"h2\", {\n    \"id\": \"other-forms\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#other-forms\",\n    \"aria-label\": \"other forms permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Other forms\"), mdx(\"h3\", {\n    \"id\": \"add-page-dependencyjs\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#add-page-dependencyjs\",\n    \"aria-label\": \"add page dependencyjs permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"add-page-dependency.js\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/redux/actions/add-page-dependency.js\"\n  }), \"redux/actions/add-page-dependency.js\"), \" is a wrapper around the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"createPageDependency\"), \" action that performs some additional performance optimizations. It should be used instead of the raw action.\"), mdx(\"h3\", {\n    \"id\": \"getnodeandsavepathdependency-action\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#getnodeandsavepathdependency-action\",\n    \"aria-label\": \"getnodeandsavepathdependency action permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"getNodeAndSavePathDependency action\"), mdx(\"p\", null, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/redux/index.js#L198\"\n  }), \"getNodeAndSavePathDependency\"), \" action simply calls \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getNode\"), \", and then calls \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"createPageDependency\"), \" using that result. It is a programmer convenience.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "excerpt": "In almost every GraphQL Resolver, you'll see the  createPageDependency , or  getNodeAndSavePathDependency  functions. These are responsible…",
        "timeToRead": 1,
        "tableOfContents": {
          "items": [
            {
              "url": "#how-dependencies-are-recorded",
              "title": "How dependencies are recorded"
            },
            {
              "url": "#how-dependencies-are-stored",
              "title": "How dependencies are stored"
            },
            {
              "url": "#how-dependency-information-is-used",
              "title": "How dependency information is used"
            },
            {
              "url": "#other-forms",
              "title": "Other forms",
              "items": [
                {
                  "url": "#add-page-dependencyjs",
                  "title": "add-page-dependency.js"
                },
                {
                  "url": "#getnodeandsavepathdependency-action",
                  "title": "getNodeAndSavePathDependency action"
                }
              ]
            }
          ]
        },
        "fields": {
          "slug": "/docs/page-node-dependencies/",
          "anchor": "page-node-dependencies"
        },
        "frontmatter": {
          "title": "Page -> Node Dependency Tracking",
          "overview": null,
          "issue": null,
          "disableTableOfContents": null,
          "tableOfContentsDepth": null
        },
        "parent": {
          "__typename": "File",
          "relativePath": "docs/page-node-dependencies.md"
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/docs/page-node-dependencies/",
      "prev": {
        "title": "Page Creation",
        "link": "/docs/page-creation/"
      },
      "next": {
        "title": "Node Tracking",
        "link": "/docs/node-tracking/"
      }
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsMarkdownJs2546709735(\n  $path: String!\n) {\n  mdx(fields: {slug: {eq: $path}}) {\n    body\n    excerpt\n    timeToRead\n    tableOfContents\n    fields {\n      slug\n      anchor\n    }\n    frontmatter {\n      title\n      overview\n      issue\n      disableTableOfContents\n      tableOfContentsDepth\n    }\n    ...MarkdownPageFooterMdx\n  }\n}\n\nfragment MarkdownPageFooterMdx on Mdx {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}