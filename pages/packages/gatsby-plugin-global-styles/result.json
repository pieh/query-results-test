{
  "path": "/packages/gatsby-plugin-global-styles/",
  "result": {
    "data": {
      "markdownRemark": null,
      "npmPackage": {
        "name": "gatsby-plugin-global-styles",
        "description": "A Gatsby plugin for creating independent global styles with minimal configuration.",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "gatsby-plugin-global-styles",
          "css",
          "global",
          "styles"
        ],
        "lastPublisher": {
          "name": "magnusga",
          "avatar": "https://gravatar.com/avatar/108e679578e04a96a065aa8a732b4c3c"
        },
        "repository": {
          "url": "https://github.com/nfront/gatsby-plugin-global-styles"
        },
        "readme": {
          "childMarkdownRemark": {
            "html": "<p><a href=\"https://travis-ci.com/nfront/gatsby-plugin-global-styles\"><img src=\"https://travis-ci.com/nfront/gatsby-plugin-global-styles.svg?branch=master\" alt=\"Build Status\"></a> <a href=\"https://greenkeeper.io/\"><img src=\"https://badges.greenkeeper.io/nfront/gatsby-plugin-global-styles.svg\" alt=\"Greenkeeper badge\"></a> <a href=\"https://codeclimate.com/github/nfront/gatsby-plugin-global-styles/maintainability\"><img src=\"https://api.codeclimate.com/v1/badges/e0d0c8874fbb4e304b03/maintainability\" alt=\"Maintainability\"></a> <a href=\"https://codeclimate.com/github/nfront/gatsby-plugin-global-styles/test_coverage\"><img src=\"https://api.codeclimate.com/v1/badges/e0d0c8874fbb4e304b03/test_coverage\" alt=\"Test Coverage\"></a> <a href=\"https://bundlephobia.com/result?p=gatsby-plugin-global-styles\"><img src=\"https://badgen.net/bundlephobia/min/gatsby-plugin-global-styles\" alt=\"npm bundle size\"></a> <a href=\"https://www.npmjs.com/package/gatsby-plugin-global-styles\"><img src=\"https://img.shields.io/npm/v/gatsby-plugin-global-styles.svg\" alt=\"npm\"></a></p>\n<p><a href=\"https://twitter.com/intent/tweet?text=Check%20out%20this%20npm%20package:&#x26;url=https%3A%2F%2Fgithub.com%2Fnfront%2Fgatsby-plugin-global-styles\"><img src=\"https://img.shields.io/twitter/url/https/github.com/nfront/gatsby-plugin-global-styles.svg?style=social\" alt=\"Twitter URL\"></a> <a href=\"https://twitter.com/intent/follow?screen_name=magnusriga\"><img src=\"https://img.shields.io/twitter/follow/magnusriga.svg?label=Follow&#x26;style=social\" alt=\"Twitter Follow\"></a></p>\n<h1 id=\"gatsby-plugin-global-styles\"><a href=\"#gatsby-plugin-global-styles\" aria-label=\"gatsby plugin global styles permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>gatsby-plugin-global-styles</h1>\n<p>A Gatsby plugin for creating independent global CSS styles, and automatically placing them at the top of the <code class=\"language-text\">&lt;head&gt;</code> element.</p>\n<p>The plugin does not rely on any third party packages (except React), however the core <a href=\"https://github.com/nfront/global-styles\"><code class=\"language-text\">global-styles</code></a> modules have been split out to a separate package to keep it flexible and lean.</p>\n<h2 id=\"install\"><a href=\"#install\" aria-label=\"install permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install</h2>\n<p><code class=\"language-text\">npm install --save gatsby-plugin-global-styles @nfront/global-styles</code></p>\n<p>or:</p>\n<p><code class=\"language-text\">yarn add gatsby-plugin-global-styles @nfront/global-styles</code></p>\n<h2 id=\"why-to-use\"><a href=\"#why-to-use\" aria-label=\"why to use permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Why to use</h2>\n<p><code class=\"language-text\">gatsby-plugin-global-styles</code> automatically combines your own global style sheets into one collective global <code class=\"language-text\">style</code> tag, and makes sure the global <code class=\"language-text\">style</code> tag ends up where you want it to be in the <code class=\"language-text\">&lt;head&gt;</code> element.</p>\n<p>By default, the global <code class=\"language-text\">style</code> tag is placed at the top of <code class=\"language-text\">&lt;head&gt;</code>.</p>\n<p>This package is particularly useful when utilizing several CSS styling systems.</p>\n<p>For example, your site might be using <code class=\"language-text\">styled-components</code> and <code class=\"language-text\">Material-UI</code>. If you want to add your own <strong>global</strong> styling to this mix, it is important that the order of the <code class=\"language-text\">style</code> tags in the website’s or app’s <code class=\"language-text\">&lt;head&gt;</code> element is correct (properties in lower <code class=\"language-text\">style</code> tags overwrite the same properties in <code class=\"language-text\">style</code> tags above it).</p>\n<p>By using <code class=\"language-text\">gatsby-plugin-global-styles</code> and specifying the path to your <code class=\"language-text\">GlobalStyleComponent.js</code> file via the <code class=\"language-text\">pathToConfigModule</code> option (see below), the compilation and injection of your global styles is taken care of automatically by helper methods under the hood.</p>\n<p>Lastly, it is also possible to pass in props, like a theme, to your global style sheet. See below for instructions.</p>\n<h2 id=\"how-to-use\"><a href=\"#how-to-use\" aria-label=\"how to use permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to use</h2>\n<p>In <code class=\"language-text\">gatsby-config.js</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// In your gatsby-config.js</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">gatsby-plugin-global-styles</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        pathToConfigModule<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">src/styles/GlobalStyleComponent</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n        props<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          theme<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">src/styles/theme</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n          other<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            light<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In <code class=\"language-text\">src/utils/GlobalStyleComponent</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createGlobalStyle <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nfront/global-styles'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> reset <span class=\"token keyword\">from</span> <span class=\"token string\">'../styles/reset'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> globalStyle <span class=\"token keyword\">from</span> <span class=\"token string\">'../styles/globalStyle'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> GlobalStyleComponent <span class=\"token operator\">=</span> createGlobalStyle<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>reset<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\n  </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>globalStyle<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> GlobalStyleComponent<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Here, <code class=\"language-text\">reset</code> and <code class=\"language-text\">globalStyle</code> are two JavaScript files that each contain their own global styles that we want to compile into one global style element.</p>\n<p>You can include just one file here, if you like. Alternatively, several files can be specified if you have several global style sheets you want to compile into one <code class=\"language-text\">style</code> tag.</p>\n<p>As an example, in <code class=\"language-text\">src/styles/globalStyle</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> css <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nfront/global-styles'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> globalStyles <span class=\"token operator\">=</span> css<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  .my-class2 {\n    margin-bottom: 10rem;\n  }\n\n  html {\n    background-color: blue;\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> globalStyles<span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"options\"><a href=\"#options\" aria-label=\"options permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Options</h2>\n<ul>\n<li><code class=\"language-text\">pathToConfigModule</code>: (string) The path to the file in which you export your global style component.</li>\n<li><code class=\"language-text\">props.theme</code>: (string) The path to the theme that can be used in any of your global style sheet files. See below for format</li>\n<li><code class=\"language-text\">props.other</code>: Other props you want to pass to the global styles. For example: light / dark</li>\n</ul>\n<h2 id=\"how-to-use-props-like-theme-in-a-global-style-file\"><a href=\"#how-to-use-props-like-theme-in-a-global-style-file\" aria-label=\"how to use props like theme in a global style file permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to use props (like theme) in a global style file</h2>\n<p>To use <code class=\"language-text\">props</code>, like a theme, in a global style, specify <code class=\"language-text\">props.theme</code> and <code class=\"language-text\">props.other</code> in <code class=\"language-text\">gatsby-config.js</code>, as shown above.</p>\n<p>A theme can be any module exporting a normal object. Its propertis are then accessible inside any global styles file:</p>\n<p>In <code class=\"language-text\">./src/styles/theme</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> theme <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  fontFamily<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\"Roboto\", \"Helvetica\", \"Arial\", \"sans-serif\"</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  primaryColor<span class=\"token punctuation\">:</span> blue<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> theme<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Or a <code class=\"language-text\">MUI theme</code> in <code class=\"language-text\">./src/styles/theme</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createMuiTheme <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@material-ui/core/styles'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> blue <span class=\"token keyword\">from</span> <span class=\"token string\">'@material-ui/core/colors/blue'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> orange <span class=\"token keyword\">from</span> <span class=\"token string\">'@material-ui/core/colors/orange'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> red <span class=\"token keyword\">from</span> <span class=\"token string\">'@material-ui/core/colors/red'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> muiTheme <span class=\"token operator\">=</span> <span class=\"token function\">createMuiTheme</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  breakpoints<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    xs<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    sm<span class=\"token punctuation\">:</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span>\n    md<span class=\"token punctuation\">:</span> <span class=\"token number\">960</span><span class=\"token punctuation\">,</span>\n    lg<span class=\"token punctuation\">:</span> <span class=\"token number\">1280</span><span class=\"token punctuation\">,</span>\n    xl<span class=\"token punctuation\">:</span> <span class=\"token number\">1920</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  palette<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    primary<span class=\"token punctuation\">:</span> blue<span class=\"token punctuation\">,</span>\n    secondary<span class=\"token punctuation\">:</span> orange<span class=\"token punctuation\">,</span>\n    error<span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">,</span>\n    type<span class=\"token punctuation\">:</span> <span class=\"token string\">'light'</span><span class=\"token punctuation\">,</span>\n    text<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      primary<span class=\"token punctuation\">:</span> <span class=\"token string\">'rgba(0, 0, 0, 0.8)'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  typography<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    useNextVariants<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    fontFamily<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\"Roboto\", \"Helvetica\", \"Arial\", \"sans-serif\"</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    h1<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      fontSize<span class=\"token punctuation\">:</span> <span class=\"token string\">'2.25rem'</span><span class=\"token punctuation\">,</span>\n      fontFamily<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\"Roboto-Slab\", \"Roboto\", \"Helvetica\", \"Arial\", sans-serif\"</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      color<span class=\"token punctuation\">:</span> <span class=\"token string\">'rgba(0, 0, 0, 0.8)'</span><span class=\"token punctuation\">,</span>\n      lineHeight<span class=\"token punctuation\">:</span> <span class=\"token number\">1.1</span><span class=\"token punctuation\">,</span>\n      letterSpacing<span class=\"token punctuation\">:</span> <span class=\"token string\">'normal'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> muiTheme<span class=\"token punctuation\">;</span></code></pre></div>\n<p>In <code class=\"language-text\">src/styles/globalStyle</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> css <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nfront/global-styles'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> globalStyles <span class=\"token operator\">=</span> css<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  body {\n    color: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token parameter\">props</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>light <span class=\"token operator\">?</span> <span class=\"token string\">'white'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">'black'</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">;\n    font-family: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token parameter\">props</span> <span class=\"token operator\">=></span> props<span class=\"token punctuation\">.</span>theme<span class=\"token punctuation\">.</span>typography<span class=\"token punctuation\">.</span>fontFamily<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">;\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> globalStyles<span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"how-to-reorder-the-style-tag-in-the-head-element\"><a href=\"#how-to-reorder-the-style-tag-in-the-head-element\" aria-label=\"how to reorder the style tag in the head element permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to reorder the style tag in the head element</h2>\n<p>If you are using the <code class=\"language-text\">typography.js</code> plugin and want your global <code class=\"language-text\">style</code> tag above the <code class=\"language-text\">typography.js</code> tag, just import this plugin <strong>below</strong> the <code class=\"language-text\">typography.js</code> plugin in <code class=\"language-text\">gatsby-config.js</code>.</p>\n<p>The opposite can be achieved by reversing the order.</p>\n<p>To manually control the order, sort the head tags as desired in <code class=\"language-text\">gatsby-ssr.js</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> GlobalStyleComponent <span class=\"token keyword\">from</span> <span class=\"token string\">'./src/styles/GlobalStyleComponent'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">promote</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">toTop<span class=\"token punctuation\">,</span> array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>key <span class=\"token operator\">===</span> toTop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      array<span class=\"token punctuation\">.</span><span class=\"token function\">unshift</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onPreRenderHTML</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> getHeadComponents<span class=\"token punctuation\">,</span> replaceHeadComponents <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> headComponents <span class=\"token operator\">=</span> <span class=\"token function\">getHeadComponents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">promote</span><span class=\"token punctuation\">(</span>GlobalStyleComponent<span class=\"token punctuation\">.</span>globalStyle<span class=\"token punctuation\">.</span>elementId<span class=\"token punctuation\">,</span> headComponents<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">promote</span><span class=\"token punctuation\">(</span><span class=\"token string\">'TypographyStyle'</span><span class=\"token punctuation\">,</span> headComponents<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">replaceHeadComponents</span><span class=\"token punctuation\">(</span>headComponents<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"full-example\"><a href=\"#full-example\" aria-label=\"full example permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Full example</h2>\n<p>A full example, including <code class=\"language-text\">gatsby-plugin-global-styles</code>, <code class=\"language-text\">typography.js</code>, <code class=\"language-text\">Material-UI</code> and <code class=\"language-text\">styled-components</code> can be found in the starter: <code class=\"language-text\">gatsby-starter-global-styles</code>.</p>\n<h2 id=\"syntax-highlighting\"><a href=\"#syntax-highlighting\" aria-label=\"syntax highlighting permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Syntax highlighting</h2>\n<p>It is easy to add syntax highlighting. See the <a href=\"https://www.styled-components.com/docs/tooling#syntax-highlighting\">styled-components docs</a> for extensions that enable this in various IDEs.</p>\n<p>For <code class=\"language-text\">Visual Studio Code</code>, the <a href=\"https://marketplace.visualstudio.com/items?itemName=mgmcdermott.vscode-language-babel\">Babel JavaScript</a> plugin is one option that works well.</p>",
            "timeToRead": 5
          }
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/packages/gatsby-plugin-global-styles/",
      "id": "681993b1-d909-5089-a34e-3f9336ee575d",
      "layout": "plugins"
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsRemotePackagesJs803499274(\n  $slug: String!\n) {\n  markdownRemark(fields: {slug: {eq: $slug}}) {\n    ...MarkdownPageFooter\n  }\n  npmPackage(slug: {eq: $slug}) {\n    name\n    description\n    keywords\n    lastPublisher {\n      name\n      avatar\n    }\n    repository {\n      url\n    }\n    readme {\n      childMarkdownRemark {\n        html\n        timeToRead\n      }\n    }\n  }\n}\n\nfragment MarkdownPageFooter on MarkdownRemark {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}