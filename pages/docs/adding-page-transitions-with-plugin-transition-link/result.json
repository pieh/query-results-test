{
  "path": "/docs/adding-page-transitions-with-plugin-transition-link/",
  "result": {
    "data": {
      "mdx": {
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Adding Page Transitions with gatsby-plugin-transition-link\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This guide will cover how to use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-plugin-transition-link\"), \" to animate transitions between pages on your Gatsby site.\"), mdx(\"h2\", {\n    \"id\": \"overview\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#overview\",\n    \"aria-label\": \"overview permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Overview\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TransitionLink\"), \" component provides a way of describing a page transition via props on a Link component. It works with many animation libraries, like \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://popmotion.io/pose/\"\n  }), \"react-pose\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://greensock.com/\"\n  }), \"gsap\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://animejs.com/\"\n  }), \"animejs\"), \", and many others.\"), mdx(\"p\", null, \"Note that currently, as the plugin is based on link navigation, transitions when navigating with the browser buttons are not supported.\"), mdx(\"p\", null, \"For other page transition options, see the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/adding-page-transitions\"\n  }), \"overview on adding page animations\"), \".\"), mdx(\"h2\", {\n    \"id\": \"getting-started\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#getting-started\",\n    \"aria-label\": \"getting started permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Getting started\"), mdx(\"p\", null, \"First, install the plugin:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"npm install --save gatsby-plugin-transition-link\\n\")), mdx(\"p\", null, \"Make sure to add the plugin to your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config.js\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript:title=gatsby-config.js\"\n  }), \"module.exports = {\\n    plugins: [\\n      `gatsby-plugin-transition-link`\\n    ]\\n];\\n\")), mdx(\"p\", null, \"Finally, import the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TransitionLink\"), \" component wherever you want to use it:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"import TransitionLink from \\\"gatsby-plugin-transition-link\\\"\\n\")), mdx(\"h2\", {\n    \"id\": \"predefined-transitions\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#predefined-transitions\",\n    \"aria-label\": \"predefined transitions permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Predefined transitions\"), mdx(\"p\", null, \"You can use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AniLink\"), \" component to add page transitions without having to define your own custom transitions. It\\u2019s a wrapper around \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TransitionLink\"), \" that provides 4 predefined transitions: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fade\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"swipe\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cover\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"paintDrip\"), \". You can preview them at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://gatsby-plugin-transition-link.netlify.com/\"\n  }), \"this demo site\"), \".\"), mdx(\"p\", null, \"To use AniLink, you will need to install the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gsap\"), \" animation library:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"npm install --save gsap\\n\")), mdx(\"p\", null, \"Then, import the AniLink component:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"import AniLink from \\\"gatsby-plugin-transition-link/AniLink\\\"\\n\")), mdx(\"p\", null, \"Finally, make sure you provide your desired animation\\u2019s name as a blank prop to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AniLink\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"<AniLink paintDrip to=\\\"page-4\\\">\\n  Go to Page 4\\n</AniLink>\\n\")), mdx(\"p\", null, \"Options like transition duration, direction, and more are customizable with props. See \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://transitionlink.tylerbarnes.ca/docs/anilink/\"\n  }), \"the documentation of AniLink\"), \" for more details.\"), mdx(\"h2\", {\n    \"id\": \"custom-transitions\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#custom-transitions\",\n    \"aria-label\": \"custom transitions permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Custom transitions\"), mdx(\"p\", null, \"You have two main methods of creating page transitions:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Use the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"trigger\"), \" function defined in your \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"exit\"), \"/\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"entry\"), \" prop. More details in the \\u2019\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#using-the-trigger-function\"\n  }), \"Using the \", mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"trigger\"), \" function\"), \"\\u2019 subsection.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Use the props passed by \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"TransitionLink\"), \" to define your transitions. More details in the \\u2019\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#using-passed-props\"\n  }), \"Using passed props\"), \"\\u2019 subsection.\")), mdx(\"p\", null, \"Additionally, you can specify a number of props and options on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TransitionLink\"), \" component, like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"length\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"delay\"), \", and more. For more options and details, see \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://transitionlink.tylerbarnes.ca/docs/transitionlink/\"\n  }), \"the documentation of TransitionLink\"), \". For further examples of usage, visit the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/TylerBarnes/gatsby-plugin-transition-link\"\n  }), \"plugin\\u2019s GitHub repository.\")), mdx(\"h4\", {\n    \"id\": \"using-the-trigger-function\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#using-the-trigger-function\",\n    \"aria-label\": \"using the trigger function permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Using the trigger function\"), mdx(\"p\", null, \"You can specify a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"trigger\"), \" function that will handle the animation. This is useful for \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"imperative\"), \" animation libraries like \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://animejs.com/\"\n  }), \"animejs\"), \" or \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://greensock.com/gsap\"\n  }), \"GSAP\"), \" that specify animations with function calls.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"<TransitionLink\\n  exit={{\\n    length: length,\\n    // highlight-next-line\\n    trigger: ({ exit, node }) =>\\n      this.someCustomDefinedAnimation({ exit, node, direction: \\\"out\\\" }),\\n  }}\\n  entry={{\\n    length: 0,\\n    // highlight-next-line\\n    trigger: ({ exit, node }) =>\\n      this.someCustomDefinedAnimation({ exit, node, direction: \\\"in\\\" }),\\n  }}\\n  {...props}\\n>\\n  {props.children}\\n</TransitionLink>\\n\")), mdx(\"h4\", {\n    \"id\": \"using-passed-props\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#using-passed-props\",\n    \"aria-label\": \"using passed props permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Using passed props\"), mdx(\"p\", null, \"The exiting and entering pages/templates involved in the transition will receive props indicating the current transition status, as well as the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"exit\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"enter\"), \" props defined on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TransitionLink\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"const PageOrTemplate = ({ children, transitionStatus, entry, exit }) => {\\n  console.log(transitionStatus, entry, exit)\\n  return <div className={transitionStatus}>{children}</div>\\n}\\n\")), mdx(\"p\", null, \"You can combine these props with a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"declarative\"), \" state-based animation libraries like \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://popmotion.io/pose/\"\n  }), \"react-pose\"), \" or \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://react-spring.surge.sh/\"\n  }), \"react-spring\"), \" to specify transitions for exiting and entering a page.\"), mdx(\"p\", null, \"If you want to access these props in one of your components instead of a page/template, you should wrap your component in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TransitionState\"), \" component. This component takes a function that will have access to the same props as above, which you can then use in your component.\"), mdx(\"p\", null, \"Here\\u2019s an example using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TransitionState\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"react-pose\"), \" to trigger enter/exit transitions for a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Box\"), \" component.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"import { TransitionState } from \\\"gatsby-plugin-transition-link\\\"\\n\\nconst Box = posed.div({\\n  hidden: { opacity: 0 },\\n  visible: { opacity: 1 },\\n})\\n\\n<TransitionState>\\n      {({ transitionStatus, exit, enter }) => {\\n        console.log('exit object is', exit)\\n        console.log('enter object is', enter)\\n\\n        return (\\n            <Box\\n              className=\\\"box\\\"\\n              pose={\\n                ['entering', 'entered'].includes(transitionStatus)\\n                  ? 'visible'\\n                  : 'hidden'\\n              }\\n            />\\n        )\\n      }}\\n</TransitionState>\\n\")), mdx(\"p\", null, \"Now, the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Box\"), \" component will be aware of the transition status of the page it\\u2019s a child of, and it will fade in/out accordingly.\"), mdx(\"h2\", {\n    \"id\": \"excluding-elements-from-page-transitions\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#excluding-elements-from-page-transitions\",\n    \"aria-label\": \"excluding elements from page transitions permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Excluding elements from page transitions\"), mdx(\"p\", null, \"You may want to have elements on a page that persist throughout the page transition (\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"ex. a site-wide header\"), \"). This can be accomplished by wrapping elements in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TransitionPortal\"), \" component.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"import { TransitionPortal } from \\\"gatsby-plugin-transition-link\\\"\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"<TransitionPortal>\\n  <SomeComponent>\\n    This component will sit on top of both pages, and persist through page\\n    transitions.\\n  </SomeComponent>\\n</TransitionPortal>\\n\")), mdx(\"p\", null, \"As always, check out \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://transitionlink.tylerbarnes.ca/docs/transitionportal/\"\n  }), \"the \", mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"TransitionPortal\"), \" docs\"), \" for more information about \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TransitionPortal\"), \".\"), mdx(\"h2\", {\n    \"id\": \"further-reading\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#further-reading\",\n    \"aria-label\": \"further reading permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Further reading\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://transitionlink.tylerbarnes.ca/docs/\"\n  }), \"Official documentation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/TylerBarnes/gatsby-plugin-transition-link\"\n  }), \"Source code for plugin\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://gatsby-plugin-transition-link.netlify.com/\"\n  }), \"Demo site\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/blog/2018-12-04-per-link-gatsby-page-transitions-with-transitionlink/\"\n  }), \"Blog post: \\u2018Per-Link Gatsby page transitions with TransitionLink\\u2019\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/TylerBarnes/gatsby-plugin-transition-link/issues/34\"\n  }), \"Using transition-link with react-spring\"))));\n}\n;\nMDXContent.isMDXComponent = true;",
        "excerpt": "This guide will cover how to use  gatsby-plugin-transition-link  to animate transitions between pages on your Gatsby site. Overview The…",
        "timeToRead": 2,
        "tableOfContents": {
          "items": [
            {
              "url": "#overview",
              "title": "Overview"
            },
            {
              "url": "#getting-started",
              "title": "Getting started"
            },
            {
              "url": "#predefined-transitions",
              "title": "Predefined transitions"
            },
            {
              "url": "#custom-transitions",
              "title": "Custom transitions",
              "items": [
                {
                  "items": [
                    {
                      "url": "#using-the-trigger-function",
                      "title": "Using the trigger function"
                    },
                    {
                      "url": "#using-passed-props",
                      "title": "Using passed props"
                    }
                  ]
                }
              ]
            },
            {
              "url": "#excluding-elements-from-page-transitions",
              "title": "Excluding elements from page transitions"
            },
            {
              "url": "#further-reading",
              "title": "Further reading"
            }
          ]
        },
        "fields": {
          "slug": "/docs/adding-page-transitions-with-plugin-transition-link/",
          "anchor": "adding-page-transitions-with-plugin-transition-link"
        },
        "frontmatter": {
          "title": "Adding Page Transitions with gatsby-plugin-transition-link",
          "overview": null,
          "issue": null,
          "disableTableOfContents": null,
          "tableOfContentsDepth": null
        },
        "parent": {
          "__typename": "File",
          "relativePath": "docs/adding-page-transitions-with-plugin-transition-link.md"
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/docs/adding-page-transitions-with-plugin-transition-link/",
      "prev": {
        "title": "Adding Page Transitions",
        "link": "/docs/adding-page-transitions/",
        "breadcrumbTitle": "Page Transitions"
      },
      "next": {
        "title": "Adding Page Transitions with gatsby-plugin-page-transitions*",
        "link": "/docs/adding-page-transitions-with-plugin-page-transitions/",
        "breadcrumbTitle": "gatsby-plugin-page-transitions"
      }
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsMarkdownJs2546709735(\n  $path: String!\n) {\n  mdx(fields: {slug: {eq: $path}}) {\n    body\n    excerpt\n    timeToRead\n    tableOfContents\n    fields {\n      slug\n      anchor\n    }\n    frontmatter {\n      title\n      overview\n      issue\n      disableTableOfContents\n      tableOfContentsDepth\n    }\n    ...MarkdownPageFooterMdx\n  }\n}\n\nfragment MarkdownPageFooterMdx on Mdx {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}