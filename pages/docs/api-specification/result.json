{
  "path": "/docs/api-specification/",
  "result": {
    "data": {
      "mdx": {
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"API Specification\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Gatsby\\u2019s APIs are tailored conceptually to some extent after React.js to improve\\nthe coherence between the two systems.\"), mdx(\"p\", null, \"The two top priorities of the API are a) enable a broad and robust plugin\\necosystem and b) on top of that a broad and robust theme ecosystem (themes are\\non the back burner btw until after v1 comes out).\"), mdx(\"h2\", {\n    \"id\": \"prerequisites\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#prerequisites\",\n    \"aria-label\": \"prerequisites permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Prerequisites\"), mdx(\"p\", null, \"If you\\u2019re not familiar with Gatsby\\u2019s lifecycle, see the overview \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/gatsby-lifecycle-apis/\"\n  }), \"Gatsby Lifecycle APIs\"), \".\"), mdx(\"h2\", {\n    \"id\": \"plugins\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#plugins\",\n    \"aria-label\": \"plugins permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Plugins\"), mdx(\"p\", null, \"Plugins can extend Gatsby in many ways:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sourcing data (e.g. from the filesystem or an API or a database)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Transforming data from one type to another (e.g. a markdown file to HTML)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Creating pages (e.g. a directory of markdown files all gets turned into pages\\nwith URLs derived from their file names).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Modifying webpack config (e.g. for styling options, adding support for other\\ncompile-to-js languages)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Adding things to the rendered HTML (e.g. meta tags, analytics JS snippets like\\nGoogle Analytics)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Writing out things to build directory based on site data (e.g. service worker,\\nsitemap, RSS feed)\")), mdx(\"p\", null, \"A single plugin can use multiple APIs to accomplish its purpose. E.g. the plugin\\nfor the CSS-in-JS library \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/packages/gatsby-plugin-glamor/\"\n  }), \"Glamor\"), \":\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"modifies the webpack config to add its plugin\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"adds a Babel plugin to replace React\\u2019s default createElement\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"modifies server rendering to extract out the critical CSS for each rendered\\npage and inline the CSS in the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<head>\"), \" of that HTML page.\")), mdx(\"p\", null, \"Plugins can also depend on other plugins. \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/packages/gatsby-plugin-sharp/\"\n  }), \"The Sharp\\nplugin\"), \" exposes a number of high-level APIs for\\ntransforming images that several other Gatsby image plugins depend on.\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/packages/gatsby-transformer-remark/\"\n  }), \"gatsby-transformer-remark\"), \" does basic\\nmarkdown->html transformation but exposes an API to allow other plugins to\\nintervene in the conversion process e.g.\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/packages/gatsby-remark-prismjs/\"\n  }), \"gatsby-remark-prismjs\"), \" which adds\\nhighlighting to code blocks.\"), mdx(\"p\", null, \"Transformer plugins are decoupled from source plugins. Transformer plugins look\\nat the media type of new nodes created by source plugins to decide if they can\\ntransform it or not. Which means that a markdown transformer plugin can\\ntransform markdown from any source without any other configuration e.g. from a\\nfile, a code comment, or external service like Trello which supports markdown\\nin some of its data fields.\"), mdx(\"p\", null, \"See\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/plugins/\"\n  }), \"the full list of (official only for now \\u2014 adding support for community plugins later) plugins\"), \".\"), mdx(\"h1\", {\n    \"id\": \"api\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h1\"\n  }, {\n    \"href\": \"#api\",\n    \"aria-label\": \"api permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"API\"), mdx(\"h2\", {\n    \"id\": \"concepts\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#concepts\",\n    \"aria-label\": \"concepts permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Concepts\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Page\"), \" \\u2014 a site page with a pathname, a template component, and optional\\nGraphQL query.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Page Component\"), \" \\u2014 React.js component that renders a page and can optionally\\nspecify a GraphQL query\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Component extensions\"), \" \\u2014 extensions that are resolvable as components. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".js\"), \"\\nand \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".jsx\"), \" are supported by core. But plugins can add support for other\\ncompile-to-js languages.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Dependency\"), \" \\u2014 Gatsby automatically tracks dependencies between different\\nobjects e.g. a page can depend on certain nodes. This allows for hot\\nreloading, caching, incremental rebuilds, etc.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Node\"), \" \\u2014 a data object\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Node Field\"), \" \\u2014 a field added by a plugin to a node that it doesn\\u2019t control\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Node Link\"), \" \\u2014 a connection between nodes that gets converted to GraphQL\\nrelationships. Can be created in a variety of ways as well as automatically\\ninferred. Parent/child links from nodes and their transformed derivative nodes\\nare first class links.\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"More definitions and terms are defined in the \", mdx(\"a\", _extends({\n    parentName: \"em\"\n  }, {\n    \"href\": \"/docs/glossary/\"\n  }), \"Glossary\"))), mdx(\"h2\", {\n    \"id\": \"operators\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#operators\",\n    \"aria-label\": \"operators permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Operators\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Create\"), \" \\u2014 make a new thing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Get\"), \" \\u2014 get an existing thing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Delete\"), \" \\u2014 remove an existing thing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Replace\"), \" \\u2014 replace an existing thing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Set\"), \" \\u2014 merge into an existing thing\")), mdx(\"h2\", {\n    \"id\": \"extension-apis\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#extension-apis\",\n    \"aria-label\": \"extension apis permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Extension APIs\"), mdx(\"p\", null, \"Gatsby has multiple processes. The most prominent is the \\u201Cbootstrap\\u201D process. It\\nhas several subprocesses. One tricky part to their design is that they run both\\nonce during the initial bootstrap but also stay alive during development to\\ncontinue to respond to changes. This is what drives hot reloading that all\\nGatsby data is \\u201Calive\\u201D and reacts to changes in the environment.\"), mdx(\"p\", null, \"The bootstrap process is as follows:\"), mdx(\"p\", null, \"load site config -> load plugins -> source nodes -> transform nodes -> create\\ngraphql schema -> create pages -> compile component queries -> run queries ->\\nfin\"), mdx(\"p\", null, \"Once the initial bootstrap is finished, we start \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"webpack-dev-server\"), \" and an express server for serving files for the development server, and for a production build, we start building the CSS then JavaScript then HTML with webpack.\"), mdx(\"p\", null, \"During these processes there are various extension points where plugins can\\nintervene. All major processes have an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onPre\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onPost\"), \" e.g. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onPreBootstrap\"), \"\\nand \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onPostBootstrap\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onPreBuild\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onPostBuild\"), \". During bootstrap,\\nplugins can respond at various stages to APIs like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onCreatePages\"), \",\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onCreateBabelConfig\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onSourceNodes\"), \".\"), mdx(\"p\", null, \"At each extension point, Gatsby identifies the plugins which implement the API\\nand calls them in serial following their order in the site\\u2019s \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config.js\"), \".\"), mdx(\"p\", null, \"In addition to extension APIs in a node, plugins can also implement extension APIs\\nin the server rendering process and the browser e.g. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onClientEntry\"), \" or\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onRouteUpdate\")), mdx(\"p\", null, \"The three main inspirations for this API and spec are React.js\\u2019 API specifically\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://gist.github.com/vjeux/f2b015d230cc1ab18ed1df30550495ed\"\n  }), \"@leebyron\\u2019s email on the React API\"), \",\\nthis talk\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.youtube.com/watch?v=heh4OeB9A-c&app=desktop\"\n  }), \"\\u201CHow to Design a Good API and Why it Matters\\u201D by Joshua Bloch\"), \"\\nwho designed many parts of Java, and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://hapijs.com/api\"\n  }), \"Hapi.js\"), \"\\u2019 plugin\\ndesign.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "excerpt": "Gatsby's APIs are tailored conceptually to some extent after React.js to improve\nthe coherence between the two systems. The two top…",
        "timeToRead": 3,
        "tableOfContents": {
          "items": [
            {
              "items": [
                {
                  "url": "#prerequisites",
                  "title": "Prerequisites"
                },
                {
                  "url": "#plugins",
                  "title": "Plugins"
                }
              ]
            },
            {
              "url": "#api",
              "title": "API",
              "items": [
                {
                  "url": "#concepts",
                  "title": "Concepts"
                },
                {
                  "url": "#operators",
                  "title": "Operators"
                },
                {
                  "url": "#extension-apis",
                  "title": "Extension APIs"
                }
              ]
            }
          ]
        },
        "fields": {
          "slug": "/docs/api-specification/",
          "anchor": "api-specification"
        },
        "frontmatter": {
          "title": "API Specification",
          "overview": null,
          "issue": null,
          "disableTableOfContents": null,
          "tableOfContentsDepth": null
        },
        "parent": {
          "__typename": "File",
          "relativePath": "docs/api-specification.md"
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/docs/api-specification/",
      "prev": {
        "title": "Customizing the GraphQL Schema",
        "link": "/docs/schema-customization/"
      },
      "next": {
        "title": "Releases & Migration",
        "link": "/docs/releases-and-migration/"
      }
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsMarkdownJs2546709735(\n  $path: String!\n) {\n  mdx(fields: {slug: {eq: $path}}) {\n    body\n    excerpt\n    timeToRead\n    tableOfContents\n    fields {\n      slug\n      anchor\n    }\n    frontmatter {\n      title\n      overview\n      issue\n      disableTableOfContents\n      tableOfContentsDepth\n    }\n    ...MarkdownPageFooterMdx\n  }\n}\n\nfragment MarkdownPageFooterMdx on Mdx {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}