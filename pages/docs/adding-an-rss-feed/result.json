{
  "path": "/docs/adding-an-rss-feed/",
  "result": {
    "data": {
      "mdx": {
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Adding an RSS Feed\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"what-is-an-rss-feed\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#what-is-an-rss-feed\",\n    \"aria-label\": \"what is an rss feed permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"What is an RSS feed?\"), mdx(\"p\", null, \"An \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/RSS\"\n  }), \"RSS Feed\"), \" is a standard XML file listing a website\\u2019s content in a subscribable format, allowing readers to consume your content in news aggregators, also called feed reader apps.\"), mdx(\"p\", null, \"Think of it as a syndicated distribution channel for your site\\u2019s content.\"), mdx(\"h2\", {\n    \"id\": \"install\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#install\",\n    \"aria-label\": \"install permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Install\"), mdx(\"p\", null, \"To generate an RSS feed, you can use the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/packages/gatsby-plugin-feed/\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"gatsby-plugin-feed\")), \" package. To install this package, run the following command:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"npm install --save gatsby-plugin-feed\\n\")), mdx(\"h2\", {\n    \"id\": \"how-to-use-gatsby-plugin-feed\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#how-to-use-gatsby-plugin-feed\",\n    \"aria-label\": \"how to use gatsby plugin feed permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"How to use \", mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"/packages/gatsby-plugin-feed/\"\n  }), \"gatsby-plugin-feed\")), mdx(\"p\", null, \"Once installation is complete, you can now add this plugin to your site\\u2019s config file, like so:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js:title=gatsby-config.js\"\n  }), \"module.exports = {\\n  siteMetadata: {\\n    siteUrl: `https://www.example.com`,\\n  },\\n  plugins: [`gatsby-plugin-feed`],\\n}\\n\")), mdx(\"p\", null, \"Here\\u2019s an example of how you could implement this plugin with Markdown, but for other sources, you will need a way to uniquely identify content\\u2014typically a URL or slug.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js:title=gatsby-node.js\"\n  }), \"const { createFilePath } = require(`gatsby-source-filesystem`)\\n\\nexports.onCreateNode = ({ node, actions, getNode }) => {\\n  const { createNodeField } = actions\\n  // highlight-next-line\\n  if (node.internal.type === `MarkdownRemark`) {\\n    const value = createFilePath({ node, getNode })\\n    createNodeField({\\n      name: `slug`,\\n      node,\\n      value,\\n    })\\n  }\\n}\\n\")), mdx(\"p\", null, \"Next run a build (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm run build\"), \") since the RSS feed generation will only happen for production builds. By default, the generated RSS feed path is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/rss.xml\"), \", but the plugin exposes options to configure this default functionality.\"), mdx(\"p\", null, \"For basic setups with Markdown content like the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby-starter-blog\"\n  }), \"gatsby-starter-blog\"), \", that\\u2019s all you need! However, you can craft a custom RSS feed schema using custom code in your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-node.js\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config.js\"), \" files.\"), mdx(\"h2\", {\n    \"id\": \"customizing-the-rss-feed-plugin\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#customizing-the-rss-feed-plugin\",\n    \"aria-label\": \"customizing the rss feed plugin permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Customizing the RSS feed plugin\"), mdx(\"p\", null, \"Your content might not fit neatly into the blog-starter scenario, for various reasons like:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Your content isn\\u2019t in Markdown so the plugin doesn\\u2019t know about it\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Your Markdown files have dates in the filenames, for which the slug URLs cause 404s\")), mdx(\"p\", null, \"The good news is you can accommodate these scenarios and more in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config.js\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-node.js\"), \".\"), mdx(\"p\", null, \"To customize the default feed schema (a.k.a. structure) output by the plugin to work with your website\\u2019s content, you can start with the following code:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js:title=gatsby-config.js\"\n  }), \"module.exports = {\\n  plugins: [\\n    {\\n      resolve: `gatsby-plugin-feed`,\\n      options: {\\n        query: `\\n          {\\n            site {\\n              siteMetadata {\\n                title\\n                description\\n                siteUrl\\n                site_url: siteUrl\\n              }\\n            }\\n          }\\n        `,\\n        feeds: [\\n          {\\n            /* highlight-start */\\n            serialize: ({ query: { site, allMarkdownRemark } }) => {\\n              return allMarkdownRemark.edges.map(edge => {\\n                /* highlight-end */\\n                return Object.assign({}, edge.node.frontmatter, {\\n                  description: edge.node.excerpt,\\n                  date: edge.node.frontmatter.date,\\n                  url: site.siteMetadata.siteUrl + edge.node.fields.slug,\\n                  guid: site.siteMetadata.siteUrl + edge.node.fields.slug,\\n                  custom_elements: [{ \\\"content:encoded\\\": edge.node.html }],\\n                })\\n              })\\n            },\\n            query: `\\n              {\\n                // highlight-next-line\\n                allMarkdownRemark(\\n                  sort: { order: DESC, fields: [frontmatter___date] },\\n                ) {\\n                  edges {\\n                    node {\\n                      excerpt\\n                      html\\n                      fields { slug }\\n                      frontmatter {\\n                        title\\n                        date\\n                      }\\n                    }\\n                  }\\n                }\\n              }\\n            `,\\n            output: \\\"/rss.xml\\\",\\n            title: \\\"Your Site's RSS Feed\\\",\\n          },\\n        ],\\n      },\\n    },\\n  ],\\n}\\n\")), mdx(\"p\", null, \"This snippet contains a custom \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-plugin-feed\"), \" setup in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config.js\"), \" to query metadata for your site, like its \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"title\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"siteUrl\"), \". It also includes a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"feeds\"), \" array with at least one object containing a GraphQL query and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"serialize\"), \" method, which allows you to output a custom RSS feed structure. In this example, the RSS content comes from Markdown files sourced from your site, and queried with the key \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"allMarkdownRemark\"), \" and its associated filters and fields.\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"output\"), \" field in your feed object allows you to customize the filename for your RSS feed, and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"title\"), \" for the name of your site\\u2019s RSS feed.\"), mdx(\"p\", null, \"By default, feed is referenced in every page. You can customize this behavior by providing an extra field \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"match\"), \" of type \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"string\"), \". This string will be used to build a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RegExp\"), \", and this regular expression will be used to test the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pathname\"), \" of current page. Only pages that satisfied the regular expression will have feed reference included.\"), mdx(\"p\", null, \"To see your feed in action, run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby build && gatsby serve\"), \" and you can then inspect the content and URLs in your RSS file at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://localhost:9000/rss.xml\"), \".\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"NOTE: if your blog has custom permalinks, such as links with or without dates in them, you may need to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby-starter-blog/blob/master/gatsby-node.js#L57\"\n  }), \"customize \", mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"gatsby-node.js\")), \" to output the correct URLs in your RSS feed. \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/contributing/how-to-contribute/\"\n  }), \"Get in touch with us\"), \" if you need any help!\")), mdx(\"h2\", {\n    \"id\": \"syntax-for-itunes-rss-blocks\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#syntax-for-itunes-rss-blocks\",\n    \"aria-label\": \"syntax for itunes rss blocks permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Syntax for iTunes RSS blocks\"), mdx(\"p\", null, \"If creating a RSS feed for a podcast you probably will want to include iTunes RSS blocks. They take the format of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"itunes:author\"), \" which GraphQL does not read. Here\\u2019s an example of how to implement iTunes RSS blocks using this plugin:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js:title=gatsby-config.js\"\n  }), \"module.exports = {\\n  plugins: [\\n    {\\n      resolve: `gatsby-plugin-feed`,\\n      options: {\\n        query: `\\n          {\\n            site {\\n              siteMetadata {\\n                title\\n                description\\n                siteUrl\\n                site_url: siteUrl\\n              }\\n            }\\n          }\\n        `,\\n        /* highlight-start */\\n        setup: () => ({\\n          custom_namespaces: {\\n            itunes: 'http://www.itunes.com/dtds/podcast-1.0.dtd',\\n          },\\n          custom_elements: [\\n            { 'itunes:author': 'Michael Scott' },\\n            { 'itunes:explicit': 'clean' },\\n          ],\\n        }),\\n        /* highlight-end */\\n        feeds: [\\n          {\\n            ...\\n          },\\n        ],\\n      },\\n    },\\n  ],\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"happy-blogging\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#happy-blogging\",\n    \"aria-label\": \"happy blogging permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Happy blogging!\"), mdx(\"p\", null, \"With the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/packages/gatsby-plugin-feed/\"\n  }), \"Gatsby feed plugin\"), \", you can share your writing easily with people subscribed through RSS readers like Feedly or RSS Feed Reader. Now that your feed is set up, you won\\u2019t really have to think about it; publish a new post, and your RSS feed will automatically update with your Gatsby build. Voil\\xE0!\"), mdx(\"h2\", {\n    \"id\": \"more-resources\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#more-resources\",\n    \"aria-label\": \"more resources permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"More resources\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.youtube.com/watch?v=0hGlvyuQiKQ\"\n  }), \"Jason Lengstorf and Amberley Romo livestream building an RSS feed powered podcast site\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "excerpt": "What is an RSS feed? An  RSS Feed  is a standard XML file listing a website’s content in a subscribable format, allowing readers to consume…",
        "timeToRead": 2,
        "tableOfContents": {
          "items": [
            {
              "url": "#what-is-an-rss-feed",
              "title": "What is an RSS feed?"
            },
            {
              "url": "#install",
              "title": "Install"
            },
            {
              "url": "#how-to-use-gatsby-plugin-feed",
              "title": "How to use gatsby-plugin-feed"
            },
            {
              "url": "#customizing-the-rss-feed-plugin",
              "title": "Customizing the RSS feed plugin"
            },
            {
              "url": "#syntax-for-itunes-rss-blocks",
              "title": "Syntax for iTunes RSS blocks"
            },
            {
              "url": "#happy-blogging",
              "title": "Happy blogging!"
            },
            {
              "url": "#more-resources",
              "title": "More resources"
            }
          ]
        },
        "fields": {
          "slug": "/docs/adding-an-rss-feed/",
          "anchor": "adding-an-rss-feed"
        },
        "frontmatter": {
          "title": "Adding an RSS Feed",
          "overview": null,
          "issue": null,
          "disableTableOfContents": null,
          "tableOfContentsDepth": null
        },
        "parent": {
          "__typename": "File",
          "relativePath": "docs/adding-an-rss-feed.md"
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/docs/adding-an-rss-feed/",
      "prev": {
        "title": "Creating a Sitemap",
        "link": "/docs/creating-a-sitemap/"
      },
      "next": {
        "title": "Adding Page Transitions",
        "link": "/docs/adding-page-transitions/",
        "breadcrumbTitle": "Page Transitions"
      }
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsMarkdownJs2546709735(\n  $path: String!\n) {\n  mdx(fields: {slug: {eq: $path}}) {\n    body\n    excerpt\n    timeToRead\n    tableOfContents\n    fields {\n      slug\n      anchor\n    }\n    frontmatter {\n      title\n      overview\n      issue\n      disableTableOfContents\n      tableOfContentsDepth\n    }\n    ...MarkdownPageFooterMdx\n  }\n}\n\nfragment MarkdownPageFooterMdx on Mdx {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}