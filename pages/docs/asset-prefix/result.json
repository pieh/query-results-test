{
  "path": "/docs/asset-prefix/",
  "result": {
    "data": {
      "mdx": {
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Adding an Asset Prefix\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Gatsby produces static content that can be hosted \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"anywhere\"), \" at scale in a cost-effective manner. This static content is comprised of HTML files, JavaScript, CSS, images, and more that power your great Gatsby application.\"), mdx(\"p\", null, \"In some circumstances you may want to deploy \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"assets\"), \" (non-HTML resources such as JavaScript, CSS, etc.) to a separate domain. Typically this is when you\\u2019re required to use a dedicated CDN for assets or need to follow company-specific hosting policies.\"), mdx(\"p\", null, \"This \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"assetPrefix\"), \" functionality is available starting in gatsby@2.4.0, so that you can seamlessly use Gatsby with assets hosted from a separate domain. To use this functionality, ensure that your version of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby\"), \" specified in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"package.json\"), \" is at least \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"2.4.0\"), \".\"), mdx(\"h2\", {\n    \"id\": \"usage\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#usage\",\n    \"aria-label\": \"usage permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Usage\"), mdx(\"h3\", {\n    \"id\": \"adding-to-gatsby-configjs\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#adding-to-gatsby-configjs\",\n    \"aria-label\": \"adding to gatsby configjs permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Adding to \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"gatsby-config.js\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js:title=gatsby-config.js\"\n  }), \"module.exports = {\\n  assetPrefix: `https://cdn.example.com`,\\n}\\n\")), mdx(\"p\", null, \"One more step - when we build out this application, we need to add a flag so that Gatsby picks up this option.\"), mdx(\"h3\", {\n    \"id\": \"the---prefix-paths-flag\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#the---prefix-paths-flag\",\n    \"aria-label\": \"the   prefix paths flag permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"The \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"--prefix-paths\"), \" flag\"), mdx(\"p\", null, \"When building with an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"assetPrefix\"), \", we require a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--prefix-paths\"), \" flag. If this flag is not specified, the build will ignore this option, and build out content as if it was hosted on the same domain. To ensure we build out successfully, use the following command:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"gatsby build --prefix-paths\\n\")), mdx(\"p\", null, \"That\\u2019s it! We now have an application that is ready to have its assets deployed from a CDN and its core files (e.g. HTML files) can be hosted on a separate domain.\"), mdx(\"h2\", {\n    \"id\": \"building--deploying\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#building--deploying\",\n    \"aria-label\": \"building  deploying permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Building / Deploying\"), mdx(\"p\", null, \"Once your application is built out, all assets will be automatically prefixed by this asset prefix. For example, if we have a JavaScript file \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"app-common-1234.js\"), \", the script tag will look something like:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\"\n  }), \"<script src=\\\"https://cdn.example.com/app-common-1234.js\\\"></script>\\n\")), mdx(\"p\", null, \"However - if we were to deploy our application as-is, those assets would not be available! We can do this in a few ways, but the general approach will be to deploy the contents of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"public\"), \" folder to \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"both\"), \" your core domain, and the CDN/asset prefix location.\"), mdx(\"h3\", {\n    \"id\": \"using-onpostbuild\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#using-onpostbuild\",\n    \"aria-label\": \"using onpostbuild permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Using \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"onPostBuild\")), mdx(\"p\", null, \"We expose an \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/node-apis/#onPostBuild\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"onPostBuild\")), \" API hook. This can be used to deploy your content to the CDN, like so:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js:title=gatsby-node.js\"\n  }), \"const assetsDirectory = `public`\\n\\nexports.onPostBuild = async function onPostBuild() {\\n  // do something with public\\n  // e.g. upload to S3\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"using-packagejson-scripts\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#using-packagejson-scripts\",\n    \"aria-label\": \"using packagejson scripts permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Using \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"package.json\"), \" scripts\"), mdx(\"p\", null, \"Additionally, we can use an npm script, which will let us use some command line interfaces/executables to perform some action, in this case, deploying our assets directory!\"), mdx(\"p\", null, \"In this example, I\\u2019ll use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"aws-cli\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"s3\"), \" to sync the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"public\"), \" folder (containing all our assets) to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"s3\"), \" bucket.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json:title=package.json\"\n  }), \"{\\n  \\\"scripts\\\": {\\n    \\\"build\\\": \\\"gatsby build --prefix-paths\\\",\\n    \\\"postbuild\\\": \\\"aws s3 sync public s3://mybucket\\\"\\n  }\\n}\\n\")), mdx(\"p\", null, \"Now whenever the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"build\"), \" script is invoked, e.g. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm run build\"), \", the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"postbuild\"), \" script will be invoked \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"after\"), \" the build completes, therefore making our assets available on a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"separate\"), \" domain after we have finished building out our application with prefixed assets.\"), mdx(\"h2\", {\n    \"id\": \"additional-considerations\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#additional-considerations\",\n    \"aria-label\": \"additional considerations permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Additional Considerations\"), mdx(\"h3\", {\n    \"id\": \"usage-with-pathprefix\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#usage-with-pathprefix\",\n    \"aria-label\": \"usage with pathprefix permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Usage with \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"pathPrefix\")), mdx(\"p\", null, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/path-prefix/\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"pathPrefix\")), \" feature can be thought of as semi-related to this feature. That feature allows \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"all\"), \" your website content to be prefixed with some constant prefix, for example you may want your blog to be hosted from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/blog\"), \" rather than the project root.\"), mdx(\"p\", null, \"This feature works seamlessly with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pathPrefix\"), \". Build out your application with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--prefix-paths\"), \" flag and you\\u2019ll be well on your way to hosting an application with its assets hosted on a CDN, and its core functionality available behind a path prefix.\"), mdx(\"h3\", {\n    \"id\": \"usage-with-gatsby-plugin-offline\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#usage-with-gatsby-plugin-offline\",\n    \"aria-label\": \"usage with gatsby plugin offline permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Usage with \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"gatsby-plugin-offline\")), mdx(\"p\", null, \"When using a custom asset prefix with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-plugin-offline\"), \", your assets can still be cached offline. However, to ensure the plugin works correctly, there are a few things you need to do.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Your asset server needs to have the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Access-Control-Allow-Origin\"), \" header set either to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"*\"), \" or your site\\u2019s origin.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Certain essential resources need to be available on your content server (i.e. the one used to serve pages). This includes \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sw.js\"), \", as well as resources to precache: the Webpack bundle, the app bundle, the manifest (and any icons referenced), and the resources for the offline plugin app shell.\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"You can find most of these by looking for the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"self.__precacheManifest\"), \" variable in your generated \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sw.js\"), \". Remember to also include \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sw.js\"), \" itself, and any icons referenced in your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"manifest.webmanifest\"), \" if you have one. To check your service worker is functioning as expected, look in Application \\u2192 Service Workers in your browser dev tools, and check for any failed resources in the Console/Network tabs.\"))));\n}\n;\nMDXContent.isMDXComponent = true;",
        "excerpt": "Gatsby produces static content that can be hosted  anywhere  at scale in a cost-effective manner. This static content is comprised of HTML…",
        "timeToRead": 2,
        "tableOfContents": {
          "items": [
            {
              "url": "#usage",
              "title": "Usage",
              "items": [
                {
                  "url": "#adding-to-gatsby-configjs",
                  "title": "Adding to gatsby-config.js"
                },
                {
                  "url": "#the---prefix-paths-flag",
                  "title": "The --prefix-paths flag"
                }
              ]
            },
            {
              "url": "#building--deploying",
              "title": "Building / Deploying",
              "items": [
                {
                  "url": "#using-onpostbuild",
                  "title": "Using onPostBuild"
                },
                {
                  "url": "#using-packagejson-scripts",
                  "title": "Using package.json scripts"
                }
              ]
            },
            {
              "url": "#additional-considerations",
              "title": "Additional Considerations",
              "items": [
                {
                  "url": "#usage-with-pathprefix",
                  "title": "Usage with pathPrefix"
                },
                {
                  "url": "#usage-with-gatsby-plugin-offline",
                  "title": "Usage with gatsby-plugin-offline"
                }
              ]
            }
          ]
        },
        "fields": {
          "slug": "/docs/asset-prefix/",
          "anchor": "asset-prefix"
        },
        "frontmatter": {
          "title": "Adding an Asset Prefix",
          "overview": null,
          "issue": null,
          "disableTableOfContents": null,
          "tableOfContentsDepth": null
        },
        "parent": {
          "__typename": "File",
          "relativePath": "docs/asset-prefix.md"
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/docs/asset-prefix/",
      "prev": {
        "title": "Multi-Core Builds",
        "link": "/docs/multi-core-builds/"
      },
      "next": {
        "title": "Custom Configuration",
        "link": "/docs/customization/"
      }
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsMarkdownJs2546709735(\n  $path: String!\n) {\n  mdx(fields: {slug: {eq: $path}}) {\n    body\n    excerpt\n    timeToRead\n    tableOfContents\n    fields {\n      slug\n      anchor\n    }\n    frontmatter {\n      title\n      overview\n      issue\n      disableTableOfContents\n      tableOfContentsDepth\n    }\n    ...MarkdownPageFooterMdx\n  }\n}\n\nfragment MarkdownPageFooterMdx on Mdx {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}