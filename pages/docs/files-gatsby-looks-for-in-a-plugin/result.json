{
  "path": "/docs/files-gatsby-looks-for-in-a-plugin/",
  "result": {
    "data": {
      "mdx": {
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Files Gatsby Looks for in a Plugin\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"what-files-does-gatsby-look-for-in-a-plugin\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#what-files-does-gatsby-look-for-in-a-plugin\",\n    \"aria-label\": \"what files does gatsby look for in a plugin permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"What files does Gatsby look for in a plugin?\"), mdx(\"p\", null, \"All files are optional unless specifically marked as required.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"package.json\"), \" \\u2014 \", \"[required]\", \" this can be an empty object (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"{}\"), \") for local plugins.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"name\"), \" is used to identify the plugin when it mutates Gatsby\\u2019s GraphQL data structure\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"if \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"name\"), \" isn\\u2019t set, the folder name for the plugin is used\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"main\"), \" is the \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://docs.npmjs.com/creating-node-js-modules#create-the-file-that-will-be-loaded-when-your-module-is-required-by-another-application\"\n  }), \"name of the file that will be loaded when your module is required by another application\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"if \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"main\"), \" isn\\u2019t set, a default name of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"index.js\"), \" will be used\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"if \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"main\"), \" isn\\u2019t set, it is recommended to create an empty index.js file with the contents \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"//no-op\"), \" (short for no-operation), as seen in this \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/tree/817a6c14543c73ea8f56c9f93d401b03adb44e9d/packages/gatsby-source-wikipedia\"\n  }), \"example plugin\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"version\"), \" is used to manage the cache \\u2014 if it changes, the cache is cleared\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"if \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"version\"), \" isn\\u2019t set, an MD5 hash of the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gatsby-*\"), \" file contents is used to invalidate the cache\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"omitting the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"version\"), \" field is recommended for local plugins\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"keywords\"), \" is used to make your plugin discoverable\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"plugins published on the npm registry should have \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gatsby\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gatsby-plugin\"), \" in the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"keywords\"), \" field to be added to the \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/packages/\"\n  }), \"Plugin Library\")))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gatsby-browser.js\"), \" \\u2014 usage details are in the \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/docs/browser-apis/\"\n  }), \"browser API reference\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gatsby-node.js\"), \" \\u2014 usage details are in the \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/docs/node-apis/\"\n  }), \"Node API reference\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gatsby-ssr.js\"), \" \\u2014 usage details are in the \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/docs/ssr-apis/\"\n  }), \"SSR API reference\"))));\n}\n;\nMDXContent.isMDXComponent = true;",
        "excerpt": "What files does Gatsby look for in a plugin? All files are optional unless specifically marked as required. package.json  —  required  this…",
        "timeToRead": 1,
        "tableOfContents": {
          "items": [
            {
              "url": "#what-files-does-gatsby-look-for-in-a-plugin",
              "title": "What files does Gatsby look for in a plugin?"
            }
          ]
        },
        "fields": {
          "slug": "/docs/files-gatsby-looks-for-in-a-plugin/",
          "anchor": "files-gatsby-looks-for-in-a-plugin"
        },
        "frontmatter": {
          "title": "Files Gatsby Looks for in a Plugin",
          "overview": null,
          "issue": null,
          "disableTableOfContents": null,
          "tableOfContentsDepth": null
        },
        "parent": {
          "__typename": "File",
          "relativePath": "docs/files-gatsby-looks-for-in-a-plugin.md"
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/docs/files-gatsby-looks-for-in-a-plugin/",
      "prev": {
        "title": "Naming a Plugin",
        "link": "/docs/naming-a-plugin/"
      },
      "next": {
        "title": "Creating a Local Plugin",
        "link": "/docs/creating-a-local-plugin/"
      }
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsMarkdownJs2546709735(\n  $path: String!\n) {\n  mdx(fields: {slug: {eq: $path}}) {\n    body\n    excerpt\n    timeToRead\n    tableOfContents\n    fields {\n      slug\n      anchor\n    }\n    frontmatter {\n      title\n      overview\n      issue\n      disableTableOfContents\n      tableOfContentsDepth\n    }\n    ...MarkdownPageFooterMdx\n  }\n}\n\nfragment MarkdownPageFooterMdx on Mdx {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}