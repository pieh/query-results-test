{
  "path": "/docs/creating-a-transformer-plugin/",
  "result": {
    "data": {
      "mdx": {
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Creating a Transformer Plugin\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"There are two types of plugins that work within Gatsby\\u2019s data system, \\u201Csource\\u201D\\nand \\u201Ctransformer\\u201D plugins.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Source\"), \" plugins \\u201Csource\\u201D data from remote or local locations into what\\nGatsby calls \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/docs/node-interface/\"\n  }), \"nodes\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Transformer\"), \" plugins \\u201Ctransform\\u201D data provided by source plugins into new\\nnodes and/or node fields.\")), mdx(\"p\", null, \"The purpose of this doc is to:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Define what a Gatsby transformer plugin is, and\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Walk through a simplified reimplementation of an existing plugin, to demonstrate how to create a transformer plugin.\")), mdx(\"h2\", {\n    \"id\": \"what-do-transformer-plugins-do\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#what-do-transformer-plugins-do\",\n    \"aria-label\": \"what do transformer plugins do permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"What do transformer plugins do?\"), mdx(\"p\", null, \"Transformer plugins \\u201Ctransform\\u201D data of one type into another type. You\\u2019ll often use both source plugins and transformer plugins in your Gatsby sites.\"), mdx(\"p\", null, \"This loose coupling between the data source and transformer plugins allow Gatsby developers to quickly assemble complex data transformation pipelines with little work.\"), mdx(\"h2\", {\n    \"id\": \"how-do-you-create-a-transformer-plugin\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#how-do-you-create-a-transformer-plugin\",\n    \"aria-label\": \"how do you create a transformer plugin permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"How do you create a transformer plugin?\"), mdx(\"p\", null, \"Just like a source plugin, a transformer plugin is a normal NPM package. It has a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"package.json\"), \" file with optional dependencies as well as a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-node.js\"), \" file where you implement Gatsby\\u2019s Node.js APIs.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-transformer-yaml\"), \" is transformer plugin that looks for new nodes with a media type of text/yaml (e.g. a .yaml file) and creates new YAML child node(s) by parsing the YAML source into JavaScript objects.\"), mdx(\"p\", null, \"As an example, let\\u2019s partially rebuild a simplified \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-transformer-yaml\"), \" directly in an example site. Let\\u2019s say we have a default gatsby starter site which includes a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/data/example.yml\"), \" file:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml:title=src/data/example.yml\"\n  }), \"- name: Jane Doe\\n  bio: Developer based in Somewhere, USA\\n- name: John Smith\\n  bio: Developer based in Maintown, USA\\n\")), mdx(\"h3\", {\n    \"id\": \"make-sure-the-data-is-sourced\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#make-sure-the-data-is-sourced\",\n    \"aria-label\": \"make sure the data is sourced permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Make sure the data is sourced\"), mdx(\"p\", null, \"First, in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config.js\"), \", use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-source-filesystem\"), \" plugin to create File nodes.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript:title=gatsby-config.js\"\n  }), \"module.exports = {\\n  plugins: [\\n    {\\n      resolve: `gatsby-source-filesystem`,\\n      options: {\\n        path: `./src/data/`,\\n      },\\n    },\\n  ],\\n}\\n\")), mdx(\"p\", null, \"These are exposed in your graphql schema which you can query:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"query {\\n  allFile {\\n    edges {\\n      node {\\n        internal {\\n          type\\n          mediaType\\n          description\\n          owner\\n        }\\n      }\\n    }\\n  }\\n}\\n\")), mdx(\"p\", null, \"Now you have a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"File\"), \" node to work with:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n  \\\"data\\\": {\\n    \\\"allFile\\\": {\\n      \\\"edges\\\": [\\n        {\\n          \\\"node\\\": {\\n            \\\"internal\\\": {\\n              \\\"contentDigest\\\": \\\"c1644b03f380bc5508456ce91faf0c08\\\",\\n              \\\"type\\\": \\\"File\\\",\\n              \\\"mediaType\\\": \\\"text/yaml\\\",\\n              \\\"description\\\": \\\"File \\\\\\\"src/data/example.yml\\\\\\\"\\\",\\n              \\\"owner\\\": \\\"gatsby-source-filesystem\\\"\\n            }\\n          }\\n        }\\n      ]\\n    }\\n  }\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"transform-nodes-of-type-textyaml\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#transform-nodes-of-type-textyaml\",\n    \"aria-label\": \"transform nodes of type textyaml permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Transform nodes of type \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"text/yaml\")), mdx(\"p\", null, \"Now, transform the newly created \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"File\"), \" nodes by hooking into the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onCreateNode\"), \" API in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-node.js\"), \".\"), mdx(\"p\", null, \"If you\\u2019re following along in an example project, install the following packages:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"npm install --save js-yaml lodash\\n\")), mdx(\"p\", null, \"Now, in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-node.js\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript:title=gatsby-node.js\"\n  }), \"const jsYaml = require(`js-yaml`)\\n\\nasync function onCreateNode({ node, loadNodeContent }) {\\n  // only log for nodes of mediaType `text/yaml`\\n  if (node.internal.mediaType !== `text/yaml`) {\\n    return\\n  }\\n\\n  const content = await loadNodeContent(node)\\n  const parsedContent = jsYaml.load(content)\\n}\\n\\nexports.onCreateNode = onCreateNode\\n\")), mdx(\"p\", null, \"File content:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"- id: Jane Doe\\n  bio: Developer based in Somewhere, USA\\n- id: John Smith\\n  bio: Developer based in Maintown, USA\\n\")), mdx(\"p\", null, \"Parsed YAML content:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \";[\\n  {\\n    id: \\\"Jane Doe\\\",\\n    bio: \\\"Developer based in Somewhere, USA\\\",\\n  },\\n  {\\n    id: \\\"John Smith\\\",\\n    bio: \\\"Developer based in Maintown, USA\\\",\\n  },\\n]\\n\")), mdx(\"p\", null, \"Now we\\u2019ll write a helper function to transform the parsed YAML content into new Gatsby nodes:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"function transformObject(obj, id, type) {\\n  const yamlNode = {\\n    ...obj,\\n    id,\\n    children: [],\\n    parent: node.id,\\n    internal: {\\n      contentDigest: createContentDigest(obj),\\n      type,\\n    },\\n  }\\n  createNode(yamlNode)\\n  createParentChildLink({ parent: node, child: yamlNode })\\n}\\n\")), mdx(\"p\", null, \"Above, we create a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yamlNode\"), \" object with the shape expected by the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/actions/#createNode\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"createNode\"), \" action\"), \".\"), mdx(\"p\", null, \"We then create a link between the parent node (file) and the child node (yaml content).\"), mdx(\"p\", null, \"In our updated \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-node.js\"), \", we\\u2019ll then iterate through the parsed YAML content, using the helper function to transform each into a new node:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript:title=gatsby-node.js\"\n  }), \"const jsYaml = require(`js-yaml`)\\nconst _ = require(`lodash`)\\n\\nasync function onCreateNode({\\n  node,\\n  actions, // highlight-line\\n  loadNodeContent,\\n  createNodeId, // highlight-line\\n  createContentDigest, // highlight-line\\n}) {\\n  // highlight-start\\n  function transformObject(obj, id, type) {\\n    const yamlNode = {\\n      ...obj,\\n      id,\\n      children: [],\\n      parent: node.id,\\n      internal: {\\n        contentDigest: createContentDigest(obj),\\n        type,\\n      },\\n    }\\n\\n    createNode(yamlNode)\\n    createParentChildLink({ parent: node, child: yamlNode })\\n  }\\n  // highlight-end\\n\\n  const { createNode, createParentChildLink } = actions\\n\\n  if (node.internal.mediaType !== `text/yaml`) {\\n    return\\n  }\\n\\n  const content = await loadNodeContent(node)\\n  const parsedContent = jsYaml.load(content)\\n\\n  // highlight-start\\n  parsedContent.forEach((obj, i) => {\\n    transformObject(\\n      obj,\\n      obj.id ? obj.id : createNodeId(`${node.id} [${i}] >>> YAML`),\\n      _.upperFirst(_.camelCase(`${node.name} Yaml`))\\n    )\\n  })\\n  // highlight-end\\n}\\n\\nexports.onCreateNode = onCreateNode\\n\")), mdx(\"p\", null, \"Now we can query for our new nodes containing our transformed YAML data:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"query {\\n  allExampleYaml {\\n    edges {\\n      node {\\n        id\\n        name\\n        bio\\n      }\\n    }\\n  }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n  \\\"data\\\": {\\n    \\\"allExampleYaml\\\": {\\n      \\\"edges\\\": [\\n        {\\n          \\\"node\\\": {\\n            \\\"id\\\": \\\"3baa5e64-ac2a-5234-ba35-7af86746713f\\\",\\n            \\\"name\\\": \\\"Jane Doe\\\",\\n            \\\"bio\\\": \\\"Developer based in Somewhere, USA\\\"\\n          }\\n        },\\n        {\\n          \\\"node\\\": {\\n            \\\"id\\\": \\\"2c733815-c342-5d85-aa3f-6795d0f25909\\\",\\n            \\\"name\\\": \\\"John Smith\\\",\\n            \\\"bio\\\": \\\"Developer based in Maintown, USA\\\"\\n          }\\n        }\\n      ]\\n    }\\n  }\\n}\\n\")), mdx(\"p\", null, \"Check out the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-transformer-yaml/src/gatsby-node.js\"\n  }), \"full source code\"), \" of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-transformer-yaml\"), \".\"), mdx(\"h2\", {\n    \"id\": \"using-the-cache\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#using-the-cache\",\n    \"aria-label\": \"using the cache permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Using the cache\"), mdx(\"p\", null, \"Sometimes transforming properties costs time and resources. In order to avoid recreating these properties at each run, you can profit from the global cache mechanism Gatsby provides.\"), mdx(\"p\", null, \"Cache keys should at least contain the contentDigest of the concerned node. For example, the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-transformer-remark\"), \" uses the following cache key for the html node:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript:title=extend-node-type.js\"\n  }), \"const htmlCacheKey = node =>\\n  `transformer-remark-markdown-html-${node.internal.contentDigest}-${pluginsCacheStr}-${pathPrefixCacheStr}`\\n\")), mdx(\"p\", null, \"Accessing and setting content in the cache is as simple as:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript:title=extend-node-type.js\"\n  }), \"const cachedHTML = await cache.get(htmlCacheKey(markdownNode))\\n\\ncache.set(htmlCacheKey(markdownNode), html)\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "excerpt": "There are two types of plugins that work within Gatsby's data system, \"source\"\nand \"transformer\" plugins. Source  plugins \"source\" data from…",
        "timeToRead": 2,
        "tableOfContents": {
          "items": [
            {
              "url": "#what-do-transformer-plugins-do",
              "title": "What do transformer plugins do?"
            },
            {
              "url": "#how-do-you-create-a-transformer-plugin",
              "title": "How do you create a transformer plugin?",
              "items": [
                {
                  "url": "#make-sure-the-data-is-sourced",
                  "title": "Make sure the data is sourced"
                },
                {
                  "url": "#transform-nodes-of-type-textyaml",
                  "title": "Transform nodes of type text/yaml"
                }
              ]
            },
            {
              "url": "#using-the-cache",
              "title": "Using the cache"
            }
          ]
        },
        "fields": {
          "slug": "/docs/creating-a-transformer-plugin/",
          "anchor": "creating-a-transformer-plugin"
        },
        "frontmatter": {
          "title": "Creating a Transformer Plugin",
          "overview": null,
          "issue": null,
          "disableTableOfContents": null,
          "tableOfContentsDepth": null
        },
        "parent": {
          "__typename": "File",
          "relativePath": "docs/creating-a-transformer-plugin.md"
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/docs/creating-a-transformer-plugin/",
      "prev": {
        "title": "Creating a Source Plugin",
        "link": "/docs/creating-a-source-plugin/"
      },
      "next": {
        "title": "Submit to Plugin Library",
        "link": "/contributing/submit-to-plugin-library/"
      }
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsMarkdownJs2546709735(\n  $path: String!\n) {\n  mdx(fields: {slug: {eq: $path}}) {\n    body\n    excerpt\n    timeToRead\n    tableOfContents\n    fields {\n      slug\n      anchor\n    }\n    frontmatter {\n      title\n      overview\n      issue\n      disableTableOfContents\n      tableOfContentsDepth\n    }\n    ...MarkdownPageFooterMdx\n  }\n}\n\nfragment MarkdownPageFooterMdx on Mdx {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}