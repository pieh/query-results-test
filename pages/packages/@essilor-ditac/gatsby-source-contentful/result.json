{
  "path": "/packages/@essilor-ditac/gatsby-source-contentful/",
  "result": {
    "data": {
      "markdownRemark": null,
      "npmPackage": {
        "name": "@essilor-ditac/gatsby-source-contentful",
        "description": "Gatsby source plugin for building websites using the Contentful CMS as a data source",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "gatsby-source-plugin"
        ],
        "lastPublisher": {
          "name": "tylerschopler",
          "avatar": "https://gravatar.com/avatar/656881f367f788e34ed1b5cc4b114c86"
        },
        "repository": {
          "url": "https://github.com/essilor-ditac/gatsby/tree/master/packages/gatsby-source-contentful"
        },
        "readme": {
          "childMarkdownRemark": {
            "html": "<h1 id=\"gatsby-source-contentful\"><a href=\"#gatsby-source-contentful\" aria-label=\"gatsby source contentful permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>gatsby-source-contentful</h1>\n<h2 id=\"important-notice\"><a href=\"#important-notice\" aria-label=\"important notice permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IMPORTANT NOTICE</h2>\n<p>This is a fork of the <a href=\"https://github.com/gatsbyjs/gatsby\">original repository</a></p>\n<p><code class=\"language-text\">npm install --save gatsby-source-contentful</code></p>\n<h2 id=\"how-to-use\"><a href=\"#how-to-use\" aria-label=\"how to use permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to use</h2>\n<p>First, you need a way to pass environment variables to the build process, so secrets and other secured data aren’t committed to source control. We recommend using <a href=\"https://github.com/motdotla/dotenv\"><code class=\"language-text\">dotenv</code></a> which will then expose environment variables. <a href=\"https://gatsby.dev/env-vars\">Read more about dotenv and using environment variables here</a>. Then we can <em>use</em> these environment variables and configure our plugin.</p>\n<h3 id=\"using-delivery-api\"><a href=\"#using-delivery-api\" aria-label=\"using delivery api permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using Delivery API</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// In your gatsby-config.js</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">gatsby-source-contentful</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        spaceId<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">your_space_id</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// Learn about environment variables: https://gatsby.dev/env-vars</span>\n        accessToken<span class=\"token punctuation\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">CONTENTFUL_ACCESS_TOKEN</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"using-preview-api\"><a href=\"#using-preview-api\" aria-label=\"using preview api permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using Preview API</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// In your gatsby-config.js</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">gatsby-source-contentful</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        spaceId<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">your_space_id</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// Learn about environment variables: https://gatsby.dev/env-vars</span>\n        accessToken<span class=\"token punctuation\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">CONTENTFUL_ACCESS_TOKEN</span><span class=\"token punctuation\">,</span>\n        host<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">preview.contentful.com</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"download-assets-for-static-distribution\"><a href=\"#download-assets-for-static-distribution\" aria-label=\"download assets for static distribution permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Download assets for static distribution</h3>\n<p>Downloads and caches Contentful Assets to the local filesystem. Useful for reduced data usage in development or projects where you want the assets copied locally with builds for deploying without links to Contentful’s CDN.</p>\n<p>Enable this feature with the <code class=\"language-text\">downloadLocal: true</code> option.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// In your gatsby-config.js</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">gatsby-source-contentful</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        spaceId<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">your_space_id</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// Learn about environment variables: https://gatsby.app/env-vars</span>\n        accessToken<span class=\"token punctuation\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">CONTENTFUL_ACCESS_TOKEN</span><span class=\"token punctuation\">,</span>\n        downloadLocal<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Query a <code class=\"language-text\">ContentfulAsset</code>’s <code class=\"language-text\">localFile</code> field in GraphQL to gain access to the common fields of the <code class=\"language-text\">gatsby-source-filesystem</code> <code class=\"language-text\">File</code> node. This is not a Contentful node, so usage for <code class=\"language-text\">gatsby-image</code> is different:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\">graphql`\n  <span class=\"token keyword\">query</span> MyQuery <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\"># Example is for a `ContentType` with a `ContentfulAsset` field</span>\n    <span class=\"token comment\"># You could also query an asset directly via</span>\n    <span class=\"token comment\"># `allContentfulAsset { edges{ node { } } }`</span>\n    <span class=\"token comment\"># or `contentfulAsset(contentful_id: { eq: \"contentful_id here\" } ) { }`</span>\n    contentfulMyContentType <span class=\"token punctuation\">{</span>\n      myContentfulAssetField <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\"># Direct URL to Contentful CDN for this asset</span>\n        file <span class=\"token punctuation\">{</span> url <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\"># Query for a fluid image resource on this `ContentfulAsset` node</span>\n        fluid<span class=\"token punctuation\">(</span><span class=\"token attr-name\">maxWidth</span><span class=\"token punctuation\">:</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n          <span class=\"token operator\">...</span><span class=\"token fragment function\">GatsbyContentfulFluid_withWebp</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\"># Query for locally stored file(eg An image) - `File` node</span>\n        localFile <span class=\"token punctuation\">{</span>\n          <span class=\"token comment\"># Where the asset is downloaded into cache, don't use this</span>\n          absolutePath\n          <span class=\"token comment\"># Where the asset is copied to for distribution, equivalent to using ContentfulAsset `file {url}`</span>\n          publicURL\n          <span class=\"token comment\"># Use `gatsby-image` to create fluid image resource</span>\n          childImageSharp <span class=\"token punctuation\">{</span>\n            fluid<span class=\"token punctuation\">(</span><span class=\"token attr-name\">maxWidth</span><span class=\"token punctuation\">:</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token operator\">...</span><span class=\"token fragment function\">GatsbyImageSharpFluid</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n`</code></pre></div>\n<p>Note: This feature downloads any file from a <code class=\"language-text\">ContentfulAsset</code> node that <code class=\"language-text\">gatsby-source-contentful</code> provides. They are all copied over from <code class=\"language-text\">./cache/gatsby-source-filesystem/</code> to the sites build location <code class=\"language-text\">./public/static/</code>.</p>\n<p>For any troubleshooting related to this feature, first try clearing your <code class=\"language-text\">./cache/</code> directory. <code class=\"language-text\">gatsby-source-contentful</code> will acquire fresh data, and all <code class=\"language-text\">ContentfulAsset</code>s will be downloaded and cached again.</p>\n<h3 id=\"offline\"><a href=\"#offline\" aria-label=\"offline permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Offline</h3>\n<p>If you don’t have internet connection you can add <code class=\"language-text\">export GATSBY_CONTENTFUL_OFFLINE=true</code> to tell the plugin to fallback to the cached data, if there is any.</p>\n<h3 id=\"configuration-options\"><a href=\"#configuration-options\" aria-label=\"configuration options permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuration options</h3>\n<p><strong><code class=\"language-text\">spaceId</code></strong> [string][required]</p>\n<p>Contentful spaceId</p>\n<p><strong><code class=\"language-text\">accessToken</code></strong> [string][required]</p>\n<p>Contentful delivery api key, when using the Preview API use your Preview API key</p>\n<p><strong><code class=\"language-text\">host</code></strong> [string][optional] [default: <code class=\"language-text\">&#39;cdn.contentful.com&#39;</code>]</p>\n<p>The base host for all the API requests, by default it’s ‘cdn.contentful.com’, if you want to use the Preview API set it to <code class=\"language-text\">&#39;preview.contentful.com&#39;</code>. You can use your own host for debugging/testing purposes as long as you respect the same Contentful JSON structure.</p>\n<p><strong><code class=\"language-text\">environment</code></strong> [string][optional] [default: ‘master’]</p>\n<p>The environment to pull the content from, for more info on environments check out this <a href=\"https://www.contentful.com/developers/docs/concepts/multiple-environments/\">Guide</a>.</p>\n<p><strong><code class=\"language-text\">downloadLocal</code></strong> [boolean][optional] [default: <code class=\"language-text\">false</code>]</p>\n<p>Downloads and caches <code class=\"language-text\">ContentfulAsset</code>’s to the local filesystem. Allows you to query a <code class=\"language-text\">ContentfulAsset</code>’s <code class=\"language-text\">localFile</code> field, which is not linked to Contentful’s CDN. Useful for reducing data usage.</p>\n<p>You can pass in any other options available in the <a href=\"https://github.com/contentful/contentful.js#configuration\">contentful.js SDK</a>.</p>\n<p><strong><code class=\"language-text\">localeFilter</code></strong> [function][optional] [default: <code class=\"language-text\">() =&gt; true</code>]</p>\n<p>Possibility to limit how many locales/nodes are created in graphQL. This can limit the memory usage by reducing the amout of nodes created. Useful if you have a large space in contentful and only want to get the data from one selected locale.</p>\n<p>For example, to filter locales on only germany <code class=\"language-text\">localeFilter: locale =&gt; locale.code === &#39;de-DE&#39;</code></p>\n<p>List of locales and their codes can be found in Contentful app -> Settings -> Locales</p>\n<p><strong><code class=\"language-text\">forceFullSync</code></strong> [boolean][optional] [default: <code class=\"language-text\">false</code>]</p>\n<p>Prevents the use of sync tokens when accessing the Contentful API.</p>\n<h2 id=\"notes-on-contentful-content-models\"><a href=\"#notes-on-contentful-content-models\" aria-label=\"notes on contentful content models permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Notes on Contentful Content Models</h2>\n<p>There are currently some things to keep in mind when building your content models at Contentful.</p>\n<ol>\n<li>At the moment, fields that do not have at least one populated instance will not be created in the GraphQL schema.</li>\n<li>When using reference fields, be aware that this source plugin will automatically create the reverse reference. You do not need to create references on both content types. For simplicity, it is easier to put the reference field on the child in child/parent relationships.</li>\n</ol>\n<h2 id=\"how-to-query-for-nodes\"><a href=\"#how-to-query-for-nodes\" aria-label=\"how to query for nodes permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to query for nodes</h2>\n<p>Two standard node types are available from Contentful: <code class=\"language-text\">Asset</code> and <code class=\"language-text\">ContentType</code>.</p>\n<p><code class=\"language-text\">Asset</code> nodes will be created in your site’s GraphQL schema under <code class=\"language-text\">contentfulAsset</code> and <code class=\"language-text\">allContentfulAsset</code>.</p>\n<p><code class=\"language-text\">ContentType</code> nodes are a little different - their exact name depends on what you called them in your Contentful data models. The nodes will be created in your site’s GraphQL schema under <code class=\"language-text\">contentful${entryTypeName}</code> and <code class=\"language-text\">allContentful${entryTypeName}</code>.</p>\n<p>In all cases querying for nodes like <code class=\"language-text\">contentfulX</code> will return a single node, and nodes like <code class=\"language-text\">allContentfulX</code> will return all nodes of that type.</p>\n<h3 id=\"query-for-all-nodes\"><a href=\"#query-for-all-nodes\" aria-label=\"query for all nodes permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Query for all nodes</h3>\n<p>You might query for <strong>all</strong> of a type of node:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token punctuation\">{</span>\n  allContentfulAsset <span class=\"token punctuation\">{</span>\n    edges <span class=\"token punctuation\">{</span>\n      node <span class=\"token punctuation\">{</span>\n        id\n        file <span class=\"token punctuation\">{</span>\n          url\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>You might do this in your <code class=\"language-text\">gatsby-node.js</code> using Gatsby’s <a href=\"https://next.gatsbyjs.org/docs/node-apis/#createPages\"><code class=\"language-text\">createPages</code></a> Node API.</p>\n<h3 id=\"query-for-a-single-node\"><a href=\"#query-for-a-single-node\" aria-label=\"query for a single node permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Query for a single node</h3>\n<p>To query for a single <code class=\"language-text\">image</code> asset with the title ‘foo’ and a width of 1600px:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">export const assetQuery = graphql`\n  {\n    contentfulAsset(filter: { title: { eq: &#39;foo&#39; } }) {\n      image {\n        resolutions(width: 1600) {\n          width\n          height\n          src\n          srcSet\n        }\n      }\n    }\n  }\n`</code></pre></div>\n<p>To query for a single <code class=\"language-text\">CaseStudy</code> node with the short text properties <code class=\"language-text\">title</code> and <code class=\"language-text\">subtitle</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\">  <span class=\"token punctuation\">{</span>\n    contentfulCaseStudy<span class=\"token punctuation\">(</span><span class=\"token attr-name\">filter</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">title</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">eq</span><span class=\"token punctuation\">:</span> 'bar' <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">{</span>\n      title\n      subtitle\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>Note the use of <a href=\"https://graphql.org/learn/queries/#arguments\">GraphQL arguments</a> on the <code class=\"language-text\">contentfulAsset</code> and <code class=\"language-text\">resolutions</code> fields. See <a href=\"https://www.gatsbyjs.org/docs/graphql-reference/\">Gatsby’s GraphQL reference docs for more info</a>.</p>\n</blockquote>\n<p>You might query for a <strong>single</strong> node inside a component in your <code class=\"language-text\">src/components</code> folder, using <a href=\"https://www.gatsbyjs.org/docs/static-query/\">Gatsby’s <code class=\"language-text\">StaticQuery</code> component</a>.</p>\n<h4 id=\"a-note-about-longtext-fields\"><a href=\"#a-note-about-longtext-fields\" aria-label=\"a note about longtext fields permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>A note about LongText fields</h4>\n<p>If you include fields with a <code class=\"language-text\">LongText</code> type in your Contentful <code class=\"language-text\">ContentType</code>, their returned value will be <strong>an object not a string</strong>. This is because Contentful LongText fields are Markdown by default. In order to handle the Markdown content properly, this field type is created as a child node so Gatsby can transform it to HTML.</p>\n<p><code class=\"language-text\">ShortText</code> type fields will be returned as strings.</p>\n<p>Querying a <strong>single</strong> <code class=\"language-text\">CaseStudy</code> node with the ShortText properties <code class=\"language-text\">title</code> and <code class=\"language-text\">subtitle</code> and LongText property <code class=\"language-text\">body</code> requires formatting the LongText fields as an object with the <em>child node containing the exact same field name as the parent</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token punctuation\">{</span>\n  contentfulCaseStudy <span class=\"token punctuation\">{</span>\n    title\n    subtitle\n    body <span class=\"token punctuation\">{</span>\n      body\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"duplicated-entries\"><a href=\"#duplicated-entries\" aria-label=\"duplicated entries permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Duplicated entries</h4>\n<p>When Contentful pulls the data, all localizations will be pulled. Therefore, if you have a localization active, it will duplicate the entries. Narrow the search by filtering the query with <code class=\"language-text\">node_locale</code> filter:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token punctuation\">{</span>\n  allContentfulCaseStudy<span class=\"token punctuation\">(</span><span class=\"token attr-name\">filter</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">node_locale</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">eq</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"en-US\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    edges <span class=\"token punctuation\">{</span>\n      node <span class=\"token punctuation\">{</span>\n        id\n        slug\n        title\n        subtitle\n        body <span class=\"token punctuation\">{</span>\n          body\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"query-for-assets-in-contenttype-nodes\"><a href=\"#query-for-assets-in-contenttype-nodes\" aria-label=\"query for assets in contenttype nodes permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Query for Assets in ContentType nodes</h3>\n<p>More typically your <code class=\"language-text\">Asset</code> nodes will be mixed inside of your <code class=\"language-text\">ContentType</code> nodes, so you’ll query them together. All the same formatting rules for <code class=\"language-text\">Asset</code> and <code class=\"language-text\">ContentType</code> nodes apply.</p>\n<p>To get <strong>all</strong> the <code class=\"language-text\">CaseStudy</code> nodes with ShortText fields <code class=\"language-text\">id</code>, <code class=\"language-text\">slug</code>, <code class=\"language-text\">title</code>, <code class=\"language-text\">subtitle</code>, LongText field <code class=\"language-text\">body</code> and heroImage <code class=\"language-text\">Asset</code> field, we use <code class=\"language-text\">allContentful${entryTypeName}</code> to return all instances of that <code class=\"language-text\">ContentType</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token punctuation\">{</span>\n  allContentfulCaseStudy <span class=\"token punctuation\">{</span>\n    edges <span class=\"token punctuation\">{</span>\n      node <span class=\"token punctuation\">{</span>\n        id\n        slug\n        title\n        subtitle\n        body <span class=\"token punctuation\">{</span>\n          body\n        <span class=\"token punctuation\">}</span>\n        heroImage <span class=\"token punctuation\">{</span>\n          fixed<span class=\"token punctuation\">(</span><span class=\"token attr-name\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1600</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            width\n            height\n            src\n            srcSet\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>When querying images you can use the <code class=\"language-text\">fixed</code>, <code class=\"language-text\">fluid</code> or <code class=\"language-text\">resize</code> nodes to get different sizes for the image (for example for using <a href=\"https://www.gatsbyjs.org/packages/gatsby-image/\">gatsby-image</a>). Their usage is documented at the <a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-sharp/\">gatsby-plugin-sharp</a> package. The only difference is that gatsby-source-contentful also allows setting only the <code class=\"language-text\">width</code> parameter for these node types, the height will then automatically be calculated according to the aspect ratio.</p>\n<h2 id=\"more-on-queries-with-contentful-and-gatsby\"><a href=\"#more-on-queries-with-contentful-and-gatsby\" aria-label=\"more on queries with contentful and gatsby permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>More on Queries with Contentful and Gatsby</h2>\n<p>It is strongly recommended that you take a look at how data flows in a real Contentful and Gatsby application to fully understand how the queries, Node.js functions and React components all come together. Check out the example site at\n<a href=\"https://using-contentful.gatsbyjs.org/\">using-contentful.gatsbyjs.org</a>.</p>\n<h2 id=\"contentful-rich-text\"><a href=\"#contentful-rich-text\" aria-label=\"contentful rich text permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://www.contentful.com/developers/docs/concepts/rich-text/\">Contentful Rich Text</a></h2>\n<p>Rich Text feature is supported in this source plugin, you can use the following query to get the json output:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token punctuation\">{</span>\n  allContentfulBlogPost <span class=\"token punctuation\">{</span>\n    edges <span class=\"token punctuation\">{</span>\n      node <span class=\"token punctuation\">{</span>\n        bodyRichText <span class=\"token punctuation\">{</span>\n          json\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>To define a way Rich Text document is rendered, you can use <code class=\"language-text\">@contentful/rich-text-react-renderer</code> package:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">BLOCKS</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">MARKS</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@contentful/rich-text-types\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> documentToReactComponents <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@contentful/rich-text-react-renderer\"</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Bold</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> children <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>bold<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Text</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> children <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>align-center<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token keyword\">const</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  renderMark<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token constant\">MARKS</span><span class=\"token punctuation\">.</span><span class=\"token constant\">BOLD</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token parameter\">text</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Bold</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>text<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Bold</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  renderNode<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token constant\">BLOCKS</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PARAGRAPH</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">node<span class=\"token punctuation\">,</span> children</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Text</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Text</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">documentToReactComponents</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>bodyRichText<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Check out the examples at <a href=\"https://github.com/contentful/rich-text/tree/master/packages/rich-text-react-renderer\">@contentful/rich-text-react-renderer</a>.</p>",
            "timeToRead": 9
          }
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/packages/@essilor-ditac/gatsby-source-contentful/",
      "id": "a309bceb-f986-5183-9b19-260744652d54",
      "layout": "plugins"
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsRemotePackagesJs803499274(\n  $slug: String!\n) {\n  markdownRemark(fields: {slug: {eq: $slug}}) {\n    ...MarkdownPageFooter\n  }\n  npmPackage(slug: {eq: $slug}) {\n    name\n    description\n    keywords\n    lastPublisher {\n      name\n      avatar\n    }\n    repository {\n      url\n    }\n    readme {\n      childMarkdownRemark {\n        html\n        timeToRead\n      }\n    }\n  }\n}\n\nfragment MarkdownPageFooter on MarkdownRemark {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}