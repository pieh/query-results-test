{
  "path": "/packages/gatsby-source-s3-image/",
  "result": {
    "data": {
      "markdownRemark": null,
      "npmPackage": {
        "name": "gatsby-source-s3-image",
        "description": "GatsbyJS plugin to source images from S3-compliant APIs, with EXIF-extracting superpowers.",
        "keywords": [
          "exif",
          "gatsby",
          "gatsby-plugin",
          "gatsbyjs",
          "photography",
          "s3"
        ],
        "lastPublisher": {
          "name": "jesses",
          "avatar": "https://gravatar.com/avatar/be22eff98f017d4cac53d3a55e4207f8"
        },
        "repository": {
          "url": "https://github.com/jessestuart/gatsby-source-s3-image"
        },
        "readme": {
          "childMarkdownRemark": {
            "html": "<p align=\"center\">\n  <a href=\"https://gatsbyjs.org\">\n    <img src=\"./assets/logo.svg\" width=\"100\">\n  </a>\n</p>\n<h1 align=\"center\">\n  gatsby-source-s3-image\n</h1>\n<p><a href=\"https://circleci.com/gh/jessestuart/gatsby-source-s3-image\"><img src=\"https://circleci.com/gh/jessestuart/gatsby-source-s3-image.svg?style=shield\" alt=\"CircleCI\"></a> <a href=\"https://www.npmjs.com/package/gatsby-source-s3-image\"><img src=\"https://img.shields.io/npm/v/gatsby-source-s3-image.svg\" alt=\"npm\"></a>\n<a href=\"https://codeclimate.com/github/jessestuart/gatsby-source-s3-image/maintainability\"><img src=\"https://api.codeclimate.com/v1/badges/4488634e45e84d3cbdbe/maintainability\" alt=\"Maintainability\"></a>\n<a href=\"https://codecov.io/gh/jessestuart/gatsby-source-s3-image\"><img src=\"https://codecov.io/gh/jessestuart/gatsby-source-s3-image/branch/master/graph/badge.svg\" alt=\"codecov\"></a></p>\n<h2 id=\"what-is-this\"><a href=\"#what-is-this\" aria-label=\"what is this permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What is this?</h2>\n<p><code class=\"language-text\">gatsby-source-s3-image</code> is a <a href=\"https://github.com/gatsbyjs/gatsby\">GatsbyJS</a> <em>Source</em> plugin for\n<strong>converting images from any S3-compliant API[1] into GatsbyJS nodes</strong>.</p>\n<p>[1] This includes AWS S3, of course, as well as third-party solutions like\nDigital Ocean Spaces, or open source / self-hosted products like <a href=\"https://min.io\">MinIO</a>.</p>\n<h3 id=\"but-i-can-just-query-s3-manually-client-side\"><a href=\"#but-i-can-just-query-s3-manually-client-side\" aria-label=\"but i can just query s3 manually client side permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>But I can just query S3 manually client-side…</h3>\n<p>Sure, knock yourself out. But there are a few benefits you get out-of-the-box\nwith this package:</p>\n<ul>\n<li>Native integration with Gatsby’s GraphQL data ontology, of course. You just\nprovide the bucket details (and IAM credentials, if not public, which is\nrecommended).</li>\n<li>Several other benefits come with this tight integration with Gatsby API’s,\nsuch as intelligent caching (nobody wants to wind up with an unexpected S3\nbill as your CI server happily churns out builds, amiright?); automatic image\nasset optimization thanks to <code class=\"language-text\">gatsby-image</code>, etc.</li>\n<li>And to top things off — <code class=\"language-text\">gatsby-source-s3-image</code> will <strong>automatically detect\nand extract image EXIF metadata from your photos</strong>, and expose this data at\nthe GraphQL layer as node fields.</li>\n</ul>\n<h3 id=\"tell-me-more-about-this-exif-stuff\"><a href=\"#tell-me-more-about-this-exif-stuff\" aria-label=\"tell me more about this exif stuff permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tell me more about this EXIF stuff.</h3>\n<p>Currently supported EXIF fields that are automatically extracted when available\ninclude:</p>\n<ul>\n<li><code class=\"language-text\">DateCreatedISO</code> (<code class=\"language-text\">string</code>)</li>\n<li><code class=\"language-text\">DateTimeOriginal</code> (<code class=\"language-text\">number</code>)</li>\n<li><code class=\"language-text\">ExposureTime</code> (<code class=\"language-text\">number</code>)</li>\n<li><code class=\"language-text\">FNumber</code> (<code class=\"language-text\">number</code>)</li>\n<li><code class=\"language-text\">FocalLength</code> (<code class=\"language-text\">number</code>)</li>\n<li><code class=\"language-text\">ISO</code> (<code class=\"language-text\">number</code>)</li>\n<li><code class=\"language-text\">LensModel</code> (<code class=\"language-text\">string</code>)</li>\n<li><code class=\"language-text\">Model</code> (<code class=\"language-text\">string</code>)</li>\n<li><code class=\"language-text\">ShutterSpeedValue</code> (<code class=\"language-text\">number</code>)</li>\n</ul>\n<p>These fields are properties of the “wrapper” node, <code class=\"language-text\">S3ImageAsset</code>. This type\ncomposes the <code class=\"language-text\">ImageSharp</code> node, the <code class=\"language-text\">File</code> node representing the cached image on\ndisk (fetched via the <code class=\"language-text\">RemoteFileNode</code> API), and lastly the extracted EXIF data.\nAs a result, you can easily retrieve both a set of images as well as any subset\nof their associated metadata in a single request — or just the metadata by\nitself, if that’s all you need. For example:</p>\n<div class=\"gatsby-highlight\" data-language=\"es6\"><pre class=\"language-es6\"><code class=\"language-es6\">export const pageQuery = graphql`\n  query PhotographyPostsQuery {\n    allS3ImageAsset {\n      edges {\n        node {\n          id\n          EXIF {\n            DateCreatedISO\n            ExposureTime\n            FNumber\n            ShutterSpeedValue\n          }\n          childrenFile {\n            childImageSharp {\n              original {\n                height\n                width\n              }\n              thumbnailSizes: fluid(maxWidth: 256) {\n                aspectRatio\n                src\n                srcSet\n                sizes\n              }\n              largeSizes: fluid(maxWidth: 1024) {\n                aspectRatio\n                src\n                srcSet\n                sizes\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`</code></pre></div>\n<h2 id=\"usage\"><a href=\"#usage\" aria-label=\"usage permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Usage</h2>\n<h3 id=\"setup\"><a href=\"#setup\" aria-label=\"setup permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Setup</h3>\n<p>Add the dependency to your <code class=\"language-text\">package.json</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ yarn add gatsby-source-s3-image\n$ # Or:\n$ npm install --save gatsby-source-s3-image</code></pre></div>\n<p>Next, register the plugin with the GatsbyJS runtime in the <code class=\"language-text\">plugins</code> field\nexported from your <code class=\"language-text\">gatsby-config.js</code> file, filling in the values to point to\nwherever your bucket is hosted:</p>\n<div class=\"gatsby-highlight\" data-language=\"es6\"><pre class=\"language-es6\"><code class=\"language-es6\">const sourceS3 = {\n  resolve: &#39;gatsby-source-s3-image&#39;,\n  options: {\n    bucketName: &#39;jesse.pics&#39;,\n    domain: null, // [optional] Not necessary to define for AWS S3; defaults to `s3.amazonaws.com`\n    protocol: &#39;https&#39;, // [optional] Default to `https`.\n  },\n}\n\nconst plugins = [\n  sourceS3,\n  // ...\n]\n\nmodule.exports = { plugins }</code></pre></div>\n<h2 id=\"querying\"><a href=\"#querying\" aria-label=\"querying permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Querying</h2>\n<p>As mentioned above, <code class=\"language-text\">gatsby-source-s3-image</code> exposes nodes of type\n<code class=\"language-text\">S3ImageAsset</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">S3ImageAssetNode</span> <span class=\"token punctuation\">{</span>\n  id<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span>\n  absolutePath<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span>\n  ETag<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span>\n  Key<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span>\n  <span class=\"token constant\">EXIF</span><span class=\"token punctuation\">:</span> ExifData <span class=\"token operator\">|</span> undefined <span class=\"token comment\">// ExifData is defined below --></span>\n  internal<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    content<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span>\n    contentDigest<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span>\n    mediaType<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span>\n    <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ExifData</span> <span class=\"token punctuation\">{</span>\n  DateCreatedISO<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span>\n  DateTimeOriginal<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span>\n  ExposureTime<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span>\n  FNumber<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span>\n  FocalLength<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span>\n  <span class=\"token constant\">ISO</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span>\n  LensModel<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span>\n  Model<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span>\n  ShutterSpeedValue<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Not only can this be used to populate page data, I’ve found it useful in\nbootstrapping the pages themselves, e.g., to programmatically create dynamic\nPhoto Gallery pages at build time depending on the contents of a bucket. For\nexample:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// In `gatsby-node.js` -- using a query like this:</span>\n<span class=\"token keyword\">const</span> photographyQuery <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  {\n    allS3ImageAsset {\n      edges {\n        node {\n          ETag\n          EXIF {\n            DateCreatedISO\n          }\n        }\n      }\n    }\n  }\n</span><span class=\"token template-punctuation string\">`</span></span>\n\n<span class=\"token comment\">// We can then dynamically generate pages based on EXIF data, like this:</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">createPages</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> actions <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createPage <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> actions\n  <span class=\"token keyword\">const</span> photographyTemplate <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">'./src/templates/photography-post.js'</span>\n  <span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">createPhotographyPosts</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">edges</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Create the photography \"album\" pages -- these are a collection of photos</span>\n    <span class=\"token comment\">// grouped by ISO date.</span>\n    <span class=\"token keyword\">const</span> imagesGroupedByDate <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">groupBy</span><span class=\"token punctuation\">(</span>edges<span class=\"token punctuation\">,</span> <span class=\"token string\">'node.EXIF.DateCreatedISO'</span><span class=\"token punctuation\">)</span>\n    _<span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span>imagesGroupedByDate<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">images<span class=\"token punctuation\">,</span> date</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">createPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        path<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/photography/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>date<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n        component<span class=\"token punctuation\">:</span> photographyTemplate<span class=\"token punctuation\">,</span>\n        context<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          name<span class=\"token punctuation\">:</span> date<span class=\"token punctuation\">,</span>\n          datetime<span class=\"token punctuation\">:</span> DateTime<span class=\"token punctuation\">.</span><span class=\"token function\">fromISO</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> PageType<span class=\"token punctuation\">.</span>Photography<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"nota-bene-gatsby-version-compatibility\"><a href=\"#nota-bene-gatsby-version-compatibility\" aria-label=\"nota bene gatsby version compatibility permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>Nota Bene:</em> Gatsby Version Compatibility</h2>\n<p><code class=\"language-text\">gatsby-source-s3-image</code> was recently <a href=\"https://github.com/jessestuart/gatsby-source-s3-image/pull/238\">updated</a> to support Gatsby V2,\nwhich required some breaking changes. The Gatsby V1-compatible version of the\nplugin is still fully functional, and will continue to receive maintenance\nupdates as necessary. The last release compatible with Gatsby V1 can be found\n<a href=\"https://github.com/jessestuart/gatsby-source-s3-image/releases/tag/v0.2.133\">here</a>.</p>",
            "timeToRead": 4
          }
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/packages/gatsby-source-s3-image/",
      "id": "52de6eed-afae-59dd-a558-34eafd63686b",
      "layout": "plugins"
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsRemotePackagesJs803499274(\n  $slug: String!\n) {\n  markdownRemark(fields: {slug: {eq: $slug}}) {\n    ...MarkdownPageFooter\n  }\n  npmPackage(slug: {eq: $slug}) {\n    name\n    description\n    keywords\n    lastPublisher {\n      name\n      avatar\n    }\n    repository {\n      url\n    }\n    readme {\n      childMarkdownRemark {\n        html\n        timeToRead\n      }\n    }\n  }\n}\n\nfragment MarkdownPageFooter on MarkdownRemark {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}