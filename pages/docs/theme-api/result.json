{
  "path": "/docs/theme-api/",
  "result": {
    "data": {
      "mdx": {
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Themes API Reference\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"core-gatsby-apis\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#core-gatsby-apis\",\n    \"aria-label\": \"core gatsby apis permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Core Gatsby APIs\"), mdx(\"p\", null, \"Themes are packaged Gatsby sites shipped as plugins, so you have access to all of Gatsby\\u2019s APIs for modifying default configuration settings and functionality.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.gatsbyjs.org/docs/gatsby-config/\"\n  }), \"Gatsby Config\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.gatsbyjs.org/docs/actions/\"\n  }), \"Actions\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.gatsbyjs.org/docs/node-interface/\"\n  }), \"Node Interface\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2026 \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.gatsbyjs.org/docs/api-specification/\"\n  }), \"and more\"))), mdx(\"p\", null, \"If you\\u2019re new to Gatsby you can get started by following along with the guides for building out a site. Converting it to a theme will be straightforward later on since themes are prepackaged Gatsby sites.\"), mdx(\"h2\", {\n    \"id\": \"configuration\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#configuration\",\n    \"aria-label\": \"configuration permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Configuration\"), mdx(\"p\", null, \"Plugins can now include a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config\"), \" in addition to the other \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-*\"), \" files. We typically refer to plugins that include a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config.js\"), \" as a theme (more on that in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#theme-composition\"\n  }), \"theme composition\"), \"). A typical \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config.js\"), \" in a user\\u2019s site that uses your theme could look like this. In this example we pass in two options to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-theme-name\"), \": \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"postsPath\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"colors\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js:title=gatsby-config.js\"\n  }), \"module.exports = {\\n  plugins: [\\n    {\\n      resolve: \\\"gatsby-theme-name\\\",\\n      options: {\\n        postsPath: \\\"/blog\\\",\\n        colors: {\\n          primary: \\\"tomato\\\",\\n        },\\n      },\\n    },\\n  ],\\n}\\n\")), mdx(\"p\", null, \"You can access options that are passed to your theme in your theme\\u2019s \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config\"), \". You can use options to make filesystem sourcing configurable, accept different nav menu items, change branding colors from the default, and anything else you want to make configurable.\"), mdx(\"p\", null, \"To take advantage of the options that are passed in when configuring your theme in a user\\u2019s site, return a function in your theme\\u2019s \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config.js\"), \". The argument the function receives is the options the user passed in.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js:title=gatsby-config.js\"\n  }), \"module.exports = themeOptions => {\\n  console.log(themeOptions)\\n  // logs `postsPath` and `colors`\\n\\n  return {\\n    plugins: [\\n      // ...\\n    ],\\n  }\\n}\\n\")), mdx(\"p\", null, \"While using the usual object export (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"module.exports = {}\"), \") in your theme means that you can run the theme standalone as its own site, when using a function in your theme to accept options you will need to run the theme as part of an example site. See how the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/tree/master/themes/gatsby-starter-theme-workspace\"\n  }), \"theme authoring starter\"), \" handles this using Yarn Workspaces.\"), mdx(\"h3\", {\n    \"id\": \"accessing-options-elsewhere\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#accessing-options-elsewhere\",\n    \"aria-label\": \"accessing options elsewhere permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Accessing Options elsewhere\"), mdx(\"p\", null, \"Note that because themes are plugins you can also access the options in any of the lifecycle methods that you\\u2019re used to. For example, in your theme\\u2019s \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-node.js\"), \" you can access the options as the second argument to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"createPages\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js:title=gatsby-node.js\"\n  }), \"exports.createPages = async ({ graphql, actions }, themeOptions) => {\\n  console.log(themeOptions)\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"shadowing\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#shadowing\",\n    \"aria-label\": \"shadowing permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Shadowing\"), mdx(\"p\", null, \"Since themes are usually deployed as npm packages that other people use in their sites, we need a way to modify certain files, such as React components, without making changes to the source code of the theme. This is called \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Shadowing\"), \".\"), mdx(\"p\", null, \"Shadowing is a filesystem-based API that allows us to replace one file with another at build time. For example, if we had a theme with a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Header\"), \" component we could replace that \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Header\"), \" with our own by creating a new file in our site and placing it in the correct location for Shadowing to find it.\"), mdx(\"h3\", {\n    \"id\": \"overriding\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#overriding\",\n    \"aria-label\": \"overriding permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Overriding\"), mdx(\"p\", null, \"Taking a closer look at our \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Header\"), \" example, let\\u2019s say we have a theme called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-theme-amazing\"), \". That theme uses a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Header\"), \" component to render navigation and other miscellaneous items. The path to the component from the root of the npm package is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-theme-amazing/src/components/header.js\"), \".\"), mdx(\"p\", null, \"We\\u2019d like the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Header\"), \" component to do something different (maybe change colors, maybe add additional navigation items, really anything you can think of). To do that, we create a file in our site at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/gatsby-theme-amazing/components/header.js\"), \". We can now export any React component we want from this file and Gatsby will use it instead of the theme\\u2019s component.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\uD83D\\uDCA1 Note: you can shadow components from other themes using the same method. Read more about advanced applications in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://johno.com/latent-component-shadowing\"\n  }), \"latent shadowing\"), \".\")), mdx(\"h3\", {\n    \"id\": \"extending\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#extending\",\n    \"aria-label\": \"extending permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Extending\"), mdx(\"p\", null, \"In the last section we talked about completely replacing one component with another. What if we want to make a smaller change that doesn\\u2019t require copy/pasting the entire theme component into our own? We can take advantage of the ability to extend components.\"), mdx(\"p\", null, \"Taking the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Header\"), \" example from before, when we write our shadowing file at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/gatsby-theme-amazing/components/header.js\"), \", we can import the original component and re-export it as such, adding our own overridden prop to the component.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import Header from \\\"gatsby-theme-amazing/src/components/header\\\"\\n\\n// these props are the same as the original component would get\\nexport default props => <Header {...props} myProp=\\\"true\\\" />\\n\")), mdx(\"p\", null, \"Taking this approach means that when we upgrade our theme later we can also take advantage of all the updates to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Header\"), \" component because we haven\\u2019t fully replaced it, just modified it.\"), mdx(\"h3\", {\n    \"id\": \"what-path-should-be-used-to-shadow-a-file\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#what-path-should-be-used-to-shadow-a-file\",\n    \"aria-label\": \"what path should be used to shadow a file permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"What path should be used to shadow a file?\"), mdx(\"p\", null, \"Until we build tooling to support automatically handling shadowing, you will have to manually locate paths in a theme and create the correct shadowing paths in your site.\"), mdx(\"p\", null, \"Luckily, the way to do that is only a few steps. Take the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src\"), \" directory from the theme, and move it to the front of the path, then write a file at that location in your site. Looking back on our \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Header\"), \" example, this is the path to the component in our theme:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"gatsby-theme-amazing/src/components/header.js\\n\")), mdx(\"p\", null, \"and here is the path where we would shadow it in our site:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"<our-site>/src/gatsby-theme-amazing/components/header.js\\n\")), mdx(\"p\", null, \"Shadowing only works on imported files in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src\"), \" directory. This is because shadowing is built on top of Webpack, so the module graph needs to include the shadowable file.\"), mdx(\"p\", null, \"Since we can use multiple themes in a given site, there are many potential places to shadow a given file (one for each theme and one for the user\\u2019s site). In the event that multiple themes are attempting to shadow \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-theme-amazing/src/components/header.js\"), \", the last theme included in the plugins array will win. The site itself takes the highest priority in shadowing.\"), mdx(\"h2\", {\n    \"id\": \"theme-composition\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#theme-composition\",\n    \"aria-label\": \"theme composition permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Theme composition\"), mdx(\"p\", null, \"Gatsby themes can compose horizontally and vertically. Vertical composition refers to the classic \\u201Cparent/child\\u201D relationship. A child theme declares a parent theme in the child theme\\u2019s plugins array.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js:title=gatsby-theme-child/gatsby-config.js\"\n  }), \"module.exports = {\\n  plugins: [`gatsby-theme-parent`],\\n}\\n\")), mdx(\"p\", null, \"Horizontal composition is when two different themes are used together, such as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-theme-blog\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-theme-notes\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js:title=my-site/gatsby-config.js\"\n  }), \"module.exports = {\\n  plugins: [`gatsby-theme-blog`, `gatsby-theme-notes`],\\n}\\n\")), mdx(\"p\", null, \"Themes at their core are an algorithm that merges multiple \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config.js\"), \" files together into a single config your site can use to build with. To do that we need to define how to combine two \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config.js\"), \"s together. Before we can do that, we need to flatten the parent/child relationships into a single array. This results in the final ordering when considering which shadowing file to use if multiple are available.\"), mdx(\"p\", null, \"Our first example results in a final ordering of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"['gatsby-theme-parent', 'gatsby-theme-child']\"), \" (parents always come before their children so that children can override functionality), while our second example results in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"['gatsby-theme-blog', 'gatsby-theme-notes']\"), \".\"), mdx(\"p\", null, \"Once we have the final ordering of themes we merge them together using a reduce function. \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/utils/merge-gatsby-config.js\"\n  }), \"This reduce function\"), \" specifies the way each key in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config.js\"), \" will merge together. Unless otherwise specified below, the last value wins.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"siteMetadata\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"mapping\"), \" both merge deeply using lodash\\u2019s \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"merge\"), \" function. This means a theme can set default values in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"siteMetadata\"), \" and the site can override them using the standard \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"siteMetadata\"), \" object in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gatsby-config.js\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"plugins\"), \" are normalized to remove duplicates, then concatenated together.\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "excerpt": "Core Gatsby APIs Themes are packaged Gatsby sites shipped as plugins, so you have access to all of Gatsby's APIs for modifying default…",
        "timeToRead": 4,
        "tableOfContents": {
          "items": [
            {
              "url": "#core-gatsby-apis",
              "title": "Core Gatsby APIs"
            },
            {
              "url": "#configuration",
              "title": "Configuration",
              "items": [
                {
                  "url": "#accessing-options-elsewhere",
                  "title": "Accessing Options elsewhere"
                }
              ]
            },
            {
              "url": "#shadowing",
              "title": "Shadowing",
              "items": [
                {
                  "url": "#overriding",
                  "title": "Overriding"
                },
                {
                  "url": "#extending",
                  "title": "Extending"
                },
                {
                  "url": "#what-path-should-be-used-to-shadow-a-file",
                  "title": "What path should be used to shadow a file?"
                }
              ]
            },
            {
              "url": "#theme-composition",
              "title": "Theme composition"
            }
          ]
        },
        "fields": {
          "slug": "/docs/theme-api/",
          "anchor": "theme-api"
        },
        "frontmatter": {
          "title": "Themes API Reference",
          "overview": null,
          "issue": null,
          "disableTableOfContents": null,
          "tableOfContentsDepth": null
        },
        "parent": {
          "__typename": "File",
          "relativePath": "docs/theme-api.md"
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/docs/theme-api/",
      "prev": {
        "title": "Gatsby API",
        "link": "/docs/api-reference/"
      },
      "next": {
        "title": "Gatsby Link",
        "link": "/docs/gatsby-link/"
      }
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsMarkdownJs2546709735(\n  $path: String!\n) {\n  mdx(fields: {slug: {eq: $path}}) {\n    body\n    excerpt\n    timeToRead\n    tableOfContents\n    fields {\n      slug\n      anchor\n    }\n    frontmatter {\n      title\n      overview\n      issue\n      disableTableOfContents\n      tableOfContentsDepth\n    }\n    ...MarkdownPageFooterMdx\n  }\n}\n\nfragment MarkdownPageFooterMdx on Mdx {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}