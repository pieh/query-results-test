{
  "path": "/docs/use-static-query/",
  "result": {
    "data": {
      "mdx": {
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Querying data in components with the useStaticQuery hook\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Gatsby v2.1.0 introduces \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useStaticQuery\"), \", a new Gatsby feature that provides the ability to use a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reactjs.org/docs/hooks-intro.html\"\n  }), \"React Hook\"), \" to query with GraphQL at \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"build time\"), \".\"), mdx(\"p\", null, \"Just like the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/static-query/\"\n  }), \"StaticQuery\"), \" component, it allows your React components to retrieve data via a GraphQL query that will be parsed, evaluated, and injected into the component. However, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useStaticQuery\"), \" is a hook rather than a component that takes a render prop!\"), mdx(\"p\", null, \"In this guide, we\\u2019ll walk through an example using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useStaticQuery\"), \". If you\\u2019re not familiar with static queries in Gatsby, you might want to check out \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/static-query/#how-staticquery-differs-from-page-query\"\n  }), \"the difference between a static query and a page query\"), \".\"), mdx(\"h2\", {\n    \"id\": \"how-to-use-usestaticquery-in-components\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#how-to-use-usestaticquery-in-components\",\n    \"aria-label\": \"how to use usestaticquery in components permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"How to use useStaticQuery in components\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\uD83D\\uDCA1 You\\u2019ll need React and ReactDOM 16.8.0 or later to use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useStaticQuery\"), \".\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\uD83D\\uDCE6 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm install react@^16.8.0 react-dom@^16.8.0\"))), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useStaticQuery\"), \" is a React Hook. All the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reactjs.org/docs/hooks-rules.html\"\n  }), \"Rules of Hooks\"), \" apply.\"), mdx(\"p\", null, \"It takes your GraphQL query and returns the requested data. That\\u2019s it!\"), mdx(\"h3\", {\n    \"id\": \"basic-example\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#basic-example\",\n    \"aria-label\": \"basic example permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Basic example\"), mdx(\"p\", null, \"Let\\u2019s create a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Header\"), \" component that queries for the site title from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config.js\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx:title=src/components/header.js\"\n  }), \"import React from \\\"react\\\"\\nimport { useStaticQuery, graphql } from \\\"gatsby\\\"\\n\\nexport default () => {\\n  const data = useStaticQuery(graphql`\\n    query HeaderQuery {\\n      site {\\n        siteMetadata {\\n          title\\n        }\\n      }\\n    }\\n  `)\\n\\n  return (\\n    <header>\\n      <h1>{data.site.siteMetadata.title}</h1>\\n    </header>\\n  )\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"composing-custom-usestaticquery-hooks\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#composing-custom-usestaticquery-hooks\",\n    \"aria-label\": \"composing custom usestaticquery hooks permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Composing custom \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"useStaticQuery\"), \" hooks\"), mdx(\"p\", null, \"One of the most compelling features of hooks is the ability to compose and re-use these blocks of functionality. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useStaticQuery\"), \" is a hook. Therefore, using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useStaticQuery\"), \" allows us to compose and re-use blocks of reusable functionality. Perfect!\"), mdx(\"p\", null, \"A classic example is to create a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useSiteMetadata\"), \" hook which will provide the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"siteMetadata\"), \" to be re-used in any component. It looks something like:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx:title=src/hooks/use-site-metadata.js\"\n  }), \"import { useStaticQuery, graphql } from \\\"gatsby\\\"\\n\\nexport const useSiteMetadata = () => {\\n  const { site } = useStaticQuery(\\n    graphql`\\n      query SiteMetaData {\\n        site {\\n          siteMetadata {\\n            siteUrl\\n            headline\\n            description\\n            image\\n            video\\n            twitter\\n            name\\n            logo\\n          }\\n        }\\n      }\\n    `\\n  )\\n  return site.siteMetadata\\n}\\n\")), mdx(\"p\", null, \"Then just import our newly created hook, like so:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx:jsx:title=src/pages/index.js\"\n  }), \"import React from \\\"react\\\"\\nimport { useSiteMetadata } from \\\"../hooks/use-site-metadata\\\"\\n\\nexport default () => {\\n  const { title, siteUrl } = useSiteMetadata()\\n  return <h1>welcome to {title}</h1>\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"known-limitations\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#known-limitations\",\n    \"aria-label\": \"known limitations permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Known Limitations\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"useStaticQuery\"), \" does not accept variables (hence the name \\u201Cstatic\\u201D), but can be used in \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"any\"), \" component, including pages\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Because of how queries currently work in Gatsby, we support only a single instance of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"useStaticQuery\"), \" in a file\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "excerpt": "Gatsby v2.1.0 introduces  useStaticQuery , a new Gatsby feature that provides the ability to use a  React Hook  to query with GraphQL at…",
        "timeToRead": 1,
        "tableOfContents": {
          "items": [
            {
              "url": "#how-to-use-usestaticquery-in-components",
              "title": "How to use useStaticQuery in components",
              "items": [
                {
                  "url": "#basic-example",
                  "title": "Basic example"
                },
                {
                  "url": "#composing-custom-usestaticquery-hooks",
                  "title": "Composing custom useStaticQuery hooks"
                }
              ]
            },
            {
              "url": "#known-limitations",
              "title": "Known Limitations"
            }
          ]
        },
        "fields": {
          "slug": "/docs/use-static-query/",
          "anchor": "use-static-query"
        },
        "frontmatter": {
          "title": "Querying data in components with the useStaticQuery hook",
          "overview": null,
          "issue": null,
          "disableTableOfContents": null,
          "tableOfContentsDepth": null
        },
        "parent": {
          "__typename": "File",
          "relativePath": "docs/use-static-query.md"
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/docs/use-static-query/",
      "prev": {
        "title": "Querying Data in Components with StaticQuery",
        "link": "/docs/static-query/",
        "breadcrumbTitle": "The StaticQuery Component"
      },
      "next": {
        "title": "Using GraphQL Fragments",
        "link": "/docs/using-fragments/"
      }
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsMarkdownJs2546709735(\n  $path: String!\n) {\n  mdx(fields: {slug: {eq: $path}}) {\n    body\n    excerpt\n    timeToRead\n    tableOfContents\n    fields {\n      slug\n      anchor\n    }\n    frontmatter {\n      title\n      overview\n      issue\n      disableTableOfContents\n      tableOfContentsDepth\n    }\n    ...MarkdownPageFooterMdx\n  }\n}\n\nfragment MarkdownPageFooterMdx on Mdx {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}