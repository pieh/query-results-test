{
  "path": "/packages/@doingitright/gatsby-source-prismic-graphql/",
  "result": {
    "data": {
      "markdownRemark": null,
      "npmPackage": {
        "name": "@doingitright/gatsby-source-prismic-graphql",
        "description": "Source data from Prismic with GraphQL",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "graphql",
          "preview",
          "prismic"
        ],
        "lastPublisher": {
          "name": "brandonfancher",
          "avatar": "https://gravatar.com/avatar/0ae7fb5d1d4963ccedae0ae496090ebc"
        },
        "repository": {
          "url": "https://github.com/birkir/gatsby-source-prismic-graphql"
        },
        "readme": {
          "childMarkdownRemark": {
            "html": "<h1 id=\"gatsby-source-prismic-graphql\"><a href=\"#gatsby-source-prismic-graphql\" aria-label=\"gatsby source prismic graphql permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>gatsby-source-prismic-graphql</h1>\n<p>A Gatsby plugin for fetching source data from the <a href=\"https://prismic.io\">Prismic headless CMS</a> using Prismic’s beta <a href=\"https://prismic.io/docs/graphql/getting-started/integrate-with-existing-js-project\">GraphQL API</a>. This plugin provides full support for Prismic’s preview feature out of the box.</p>\n<p>For more context, be sure to checkout Prismic’s getting started guide: <a href=\"https://prismic.io/docs/reactjs/getting-started/prismic-gatsby\">Using Prismic With Gatsby</a>. This README, however, serves as the most-up-to-date source of information on <code class=\"language-text\">gatsby-source-prismic-graphql</code>’s latest developments and breaking changes.</p>\n<p>Please <strong>be sure your Prismic repository has the GraphQL API enabled</strong>. It is enabled by default on all new Prismic repositories. If you have an older repository or are unable to access <code class=\"language-text\">https://[your_repo].prismic.io/graphql</code>, please reach out to Prismic support to request the GraphQL API.</p>\n<h2 id=\"contents\"><a href=\"#contents\" aria-label=\"contents permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contents</h2>\n<ul>\n<li><a href=\"#differences-from-gatsby-source-prismic\">Differences From gatsby-source-prismic</a></li>\n<li><a href=\"#getting-started\">Getting Started</a></li>\n<li>\n<p><a href=\"#usage\">Usage</a></p>\n<ul>\n<li><a href=\"#automatic-page-generation\">Automatic Page Generation</a></li>\n<li><a href=\"#support-for-multiple-languages\">Support for Multiple Languages/Locales</a></li>\n<li><a href=\"#page-queries-fetch-data-from-prismic\">Page Queries: Fetch Data From Prismic</a></li>\n<li><a href=\"#prismic-previews\">Prismic Previews</a></li>\n<li><a href=\"#staticquery-and-usestaticquery\">StaticQuery &#x26; useStaticQuery</a></li>\n<li><a href=\"#fragments\">Fragments</a></li>\n<li><a href=\"#dynamic-queries-and-fetching\">Dynamic Queries &#x26; Fetching</a></li>\n<li><a href=\"#pagination\">Pagination</a></li>\n<li><a href=\"#working-with-gatsby-image\">Working with gatsby-image</a></li>\n<li><a href=\"#prismicio-content-ab-experiments-integration\">Prismic.io A/B Experiments Integration</a></li>\n</ul>\n</li>\n<li><a href=\"#how-this-plugin-works\">How This Plugin Works</a></li>\n<li><a href=\"#development\">Development</a></li>\n<li><a href=\"#issues-and-troubleshooting\">Issues &#x26; Troubleshooting</a></li>\n</ul>\n<h2 id=\"differences-from-gatsby-source-prismic\"><a href=\"#differences-from-gatsby-source-prismic\" aria-label=\"differences from gatsby source prismic permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Differences From <code class=\"language-text\">gatsby-source-prismic</code></h2>\n<p><code class=\"language-text\">gatsby-source-prismic-graphql</code> (this plugin) fetches data using Prismic’s beta <a href=\"https://prismic.io/docs/graphql/getting-started/integrate-with-existing-js-project\">GraphQL API</a> and provides full support for Prismic’s Preview feature out of the box. It also provides an easy-to-configure interface for page generation.</p>\n<p><a href=\"https://github.com/angeloashmore/gatsby-source-prismic\"><code class=\"language-text\">gatsby-source-prismic</code></a> is a different plugin that fetches data using Prismic’s REST and Javascript APIs. Previews must be coded up separately.</p>\n<h2 id=\"getting-started\"><a href=\"#getting-started\" aria-label=\"getting started permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Getting Started</h2>\n<p><strong>Install the plugin</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save gatsby-source-prismic-graphql</code></pre></div>\n<p>or</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> gatsby-source-prismic-graphql</code></pre></div>\n<p><strong>Add plugin to <code class=\"language-text\">gatsby-config.js</code> and configure</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  resolve<span class=\"token punctuation\">:</span> <span class=\"token string\">'gatsby-source-prismic-graphql'</span><span class=\"token punctuation\">,</span>\n  options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    repositoryName<span class=\"token punctuation\">:</span> <span class=\"token string\">'gatsby-source-prismic-test-site'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// required</span>\n    defaultLang<span class=\"token punctuation\">:</span> <span class=\"token string\">'en-us'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// optional, but recommended</span>\n    accessToken<span class=\"token punctuation\">:</span> <span class=\"token string\">'...'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// optional</span>\n    prismicRef<span class=\"token punctuation\">:</span> <span class=\"token string\">'...'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// optional, default: master; useful for A/B experiments</span>\n    path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/preview'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// optional, default: /preview</span>\n    previews<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// optional, default: false</span>\n    pages<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">// optional</span>\n      type<span class=\"token punctuation\">:</span> <span class=\"token string\">'Article'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// TypeName from prismic</span>\n      match<span class=\"token punctuation\">:</span> <span class=\"token string\">'/article/:uid'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// pages will be generated under this pattern (optional)</span>\n      path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/article'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// placeholder page for unpublished documents</span>\n      component<span class=\"token punctuation\">:</span> require<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./src/templates/article.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      sortBy<span class=\"token punctuation\">:</span> <span class=\"token string\">'date_ASC'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// optional, default: meta_lastPublicationDate_ASC; useful for pagination</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    sharpKeys<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token regex\">/image|photo|picture/</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// (default)</span>\n      <span class=\"token string\">'profilepic'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Edit your <code class=\"language-text\">gatsby-browser.js</code></strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> registerLinkResolver <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gatsby-source-prismic-graphql'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> linkResolver <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./src/utils/linkResolver'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">registerLinkResolver</span><span class=\"token punctuation\">(</span>linkResolver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"usage\"><a href=\"#usage\" aria-label=\"usage permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Usage</h2>\n<h3 id=\"automatic-page-generation\"><a href=\"#automatic-page-generation\" aria-label=\"automatic page generation permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Automatic Page Generation</h3>\n<p>You can generate pages automatically by providing a mapping configuration under the <code class=\"language-text\">pages</code> option in <code class=\"language-text\">gatsby-config.js</code>.</p>\n<p>Let’s assume we have the following page configuration set:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  pages<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n    type<span class=\"token punctuation\">:</span> <span class=\"token string\">'Article'</span><span class=\"token punctuation\">,</span>\n    match<span class=\"token punctuation\">:</span> <span class=\"token string\">'/blogpost/:uid'</span><span class=\"token punctuation\">,</span>\n    path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/blogpost'</span><span class=\"token punctuation\">,</span>\n    component<span class=\"token punctuation\">:</span> require<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./src/templates/article.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>If you have two blog posts with UIDs of <code class=\"language-text\">foo</code> and <code class=\"language-text\">bar</code>, the following URL slugs will be generated:</p>\n<ul>\n<li><code class=\"language-text\">/blogpost/foo</code></li>\n<li><code class=\"language-text\">/blogpost/bar</code></li>\n</ul>\n<p>If you create a new unpublished blogpost, <code class=\"language-text\">baz</code> it will be accessible for preview under, assuming you’ve established a preview session with Prismic:</p>\n<ul>\n<li><code class=\"language-text\">/blogpost?uid=baz</code></li>\n</ul>\n<p>More on <a href=\"#prismic-previews\">Prismic Previews</a> below.</p>\n<h3 id=\"support-for-multiple-languages\"><a href=\"#support-for-multiple-languages\" aria-label=\"support for multiple languages permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Support for Multiple Languages</h3>\n<p>Prismic allows you to create your content in multiple languages. This library supports that too. When setting up your configuration options in <code class=\"language-text\">gatsby-config.js</code>, there are three <em>optional</em> properties you should be aware of: <code class=\"language-text\">options.defaultLang</code>, <code class=\"language-text\">options.langs</code>, and <code class=\"language-text\">options.pages[i].langs</code>. In the following example, all are in use:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  resolve<span class=\"token punctuation\">:</span> <span class=\"token string\">'gatsby-source-prismic-graphql'</span><span class=\"token punctuation\">,</span>\n  options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    repositoryName<span class=\"token punctuation\">:</span> <span class=\"token string\">'gatsby-source-prismic-test-site'</span><span class=\"token punctuation\">,</span>\n    defaultLang<span class=\"token punctuation\">:</span> <span class=\"token string\">'en-us'</span><span class=\"token punctuation\">,</span>\n    langs<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'en-us'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'es-es'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'is'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/preview'</span><span class=\"token punctuation\">,</span>\n    previews<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    pages<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n      type<span class=\"token punctuation\">:</span> <span class=\"token string\">'Article'</span><span class=\"token punctuation\">,</span>\n      match<span class=\"token punctuation\">:</span> <span class=\"token string\">'/:lang?/:uid'</span><span class=\"token punctuation\">,</span>\n      path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/article'</span><span class=\"token punctuation\">,</span>\n      component<span class=\"token punctuation\">:</span> require<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./src/templates/article.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      sortBy<span class=\"token punctuation\">:</span> <span class=\"token string\">'date_ASC'</span><span class=\"token punctuation\">,</span>\n      langs<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'en-us'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'es-es'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'is'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      type<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Noticias\"</span><span class=\"token punctuation\">,</span>\n      match<span class=\"token punctuation\">:</span> <span class=\"token string\">'/noticias/:uid'</span><span class=\"token punctuation\">,</span>\n      path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/noticias'</span><span class=\"token punctuation\">,</span>\n      component<span class=\"token punctuation\">:</span> require<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./src/templates/noticias.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      sortBy<span class=\"token punctuation\">:</span> <span class=\"token string\">'date_ASC'</span><span class=\"token punctuation\">,</span>\n      langs<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'es-es'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In the example above, pages are generated for two document types from Prismic—Articles and Noticias. The latter consists of news stories in Spanish. There are three languages total in use in this blog: US English, Traditional Spanish and Icelandic.</p>\n<p>For Articles, we are instructing the plugin to generate pages for articles of all three languages. But, because there is a question mark (<code class=\"language-text\">?</code>) after the <code class=\"language-text\">:lang</code> portion of the <code class=\"language-text\">match</code> property (<code class=\"language-text\">/:lang?/:uid</code>), we only include the locale tag in the URL slug for languages that are not the <code class=\"language-text\">defaultLang</code> specified above (<em>i.e.</em>, ‘en-us’). So for the following languages, these are the slugs generated:</p>\n<ul>\n<li>US English: <code class=\"language-text\">/epic-destinations</code></li>\n<li>Spanish: <code class=\"language-text\">/es-es/destinos-increibles</code></li>\n<li>Icelandic: <code class=\"language-text\">/is/reykjadalur</code></li>\n</ul>\n<p>If we had not specified a <code class=\"language-text\">defaultLang</code>, the slug for US English would have been <code class=\"language-text\">/en-us/epic-destinations</code>. And, in fact, including the <code class=\"language-text\">langs: [&#39;en-us&#39;, &#39;es-es&#39;, &#39;is&#39;]</code> declaration for this particular document type (<code class=\"language-text\">Articles</code>) is unnecessary because we already specified that as the default language set right after <code class=\"language-text\">defaultLang</code> in the plugin options.</p>\n<p>For Noticias, however, we only want to generate pages for Spanish documents of that type (<code class=\"language-text\">langs</code> is <code class=\"language-text\">[es-es]</code>). We decide that in this context, no locale tag is needed in the URL slug; “noticias” is already enough indication that the contents are in Spanish. So we omit the <code class=\"language-text\">:lang</code> match entirely and specify only <code class=\"language-text\">match: &#39;/noticias/:uid&#39;</code>.</p>\n<p>This is an example of how these three properties can be used together to offer maximum flexibility. To see this in action, check out the <a href=\"https://github.com/birkir/gatsby-source-prismic-graphql/tree/master/examples/languages\">languages example app</a>.</p>\n<h3 id=\"page-queries-fetch-data-from-prismic\"><a href=\"#page-queries-fetch-data-from-prismic\" aria-label=\"page queries fetch data from prismic permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Page Queries: Fetch Data From Prismic</h3>\n<p>It is very easy to fetch data from Prismic in your pages:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> RichText <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'prismic-reactjs'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  {\n    prismic {\n      page(uid:\"homepage\", lang:\"en-us\") {\n        title\n        description\n      }\n    }\n  }\n</span><span class=\"token template-punctuation string\">`</span></span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>RichText<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>prismic<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>RichText<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>prismic<span class=\"token punctuation\">.</span>description<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h3 id=\"prismic-previews\"><a href=\"#prismic-previews\" aria-label=\"prismic previews permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prismic Previews</h3>\n<p>Previews are enabled by default, however they must be configured in your prismic instance/repository. For instructions on configuring previews in Prismic, refer to Prismic’s guide: <a href=\"https://user-guides.prismic.io/preview/how-to-set-up-a-preview/how-to-set-up-a-preview\">How to set up a preview</a>.</p>\n<p>When testing previews, be sure you are starting from a valid Prismic preview URL/path. The most reliable way to test previews is by using the preview button from your draft in Prismic. If you wish to test the Preview locally, catch the URL that opens immediately after clicking the preview link:</p>\n<p><code class=\"language-text\">https://[your-domain.tld]/preview?token=https%3A%2F%[your-prismic-repo].prismic.io%2Fpreviews%2FXRag6xAAACA...ABwjduaa%3FwebsitePreviewId%3DXRA...djaa&amp;documentId=XRBH...jduAa</code></p>\n<p>Then replace the protocol and domain at the beginning of the URL with your <code class=\"language-text\">localhost:PORT</code> instance, or wherever you’re wanting to preview from.</p>\n<p>This URL will be parsed and replaced by the web app and browser with the proper URL as specified in your page configuration.</p>\n<h3 id=\"staticquery-and-usestaticquery\"><a href=\"#staticquery-and-usestaticquery\" aria-label=\"staticquery and usestaticquery permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>StaticQuery and useStaticQuery</h3>\n<p>You can use <code class=\"language-text\">StaticQuery</code> as usual, but if you would like to preview them, you must use the <code class=\"language-text\">withPreview</code> function.</p>\n<p><a href=\"https://github.com/birkir/gatsby-source-prismic-graphql/tree/master/examples/static-query\">See the example</a></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> StaticQuery<span class=\"token punctuation\">,</span> graphql <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> withPreview <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby-source-prismic-graphql'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> articlesQuery <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  query {\n    prismic {\n      ...\n    }\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Articles</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>StaticQuery\n    query<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>articlesQuery<span class=\"token punctuation\">}</span>\n    render<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">withPreview</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> articlesQuery<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">useStaticQuery</code> is not yet supported.</p>\n<h3 id=\"fragments\"><a href=\"#fragments\" aria-label=\"fragments permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Fragments</h3>\n<p>Fragments are supported for both page queries and static queries.</p>\n<p><a href=\"https://github.com/birkir/gatsby-source-prismic-graphql/tree/master/examples/fragments\">See the example</a></p>\n<p><strong>Within page components</strong>:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> graphql <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> fragmentX <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> fragment X on Y { ... } </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  query {\n    ...X\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">MyPage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nMyPage<span class=\"token punctuation\">.</span>fragments <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>fragmentX<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> MyPage<span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>With StaticQuery</strong>:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> StaticQuery<span class=\"token punctuation\">,</span> graphql <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> withPreview <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby-source-prismic-graphql'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> fragmentX <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> fragment X on Y { ... } </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  query {\n    ...X\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">StaticQuery</span></span>\n    <span class=\"token attr-name\">query</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>query<span class=\"token punctuation\">}</span></span>\n    <span class=\"token attr-name\">render</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">withPreview</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> query<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>fragmentX<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token punctuation\">/></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"dynamic-queries-and-fetching\"><a href=\"#dynamic-queries-and-fetching\" aria-label=\"dynamic queries and fetching permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dynamic Queries and Fetching</h3>\n<p>You can use this plugin to dynamically fetch data for your component using <code class=\"language-text\">prismic.load</code>. Refer to the <a href=\"https://github.com/birkir/gatsby-source-prismic-graphql/tree/master/examples/pagination\">pagination example</a> to see it in action.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> graphql <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  query Example($limit: Int) {\n    prismic {\n      allArticles(first: $limit) {\n        edges {\n          node {\n            title\n          }\n        }\n      }\n    }\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">,</span> prismic <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n    prismic<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      variables<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> limit<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      query<span class=\"token punctuation\">,</span> <span class=\"token comment\">// (optional)</span>\n      fragments<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// (optional)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token comment\">// ... data</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">load more</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"pagination\"><a href=\"#pagination\" aria-label=\"pagination permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pagination</h3>\n<p>Pagination can be accomplished statically (<em>i.e.</em>, during initialy page generation) or dynamically (<em>i.e.</em>, with JS in the browser). Examples of both can be found in the <a href=\"https://github.com/birkir/gatsby-source-prismic-graphql/tree/master/examples/pagination\">pagination example</a>.</p>\n<p>Prismic pagination is cursor-based. See Prismic’s <a href=\"https://prismic.io/docs/graphql/query-the-api/paginate-your-results\">Paginate your results</a> article to learn about cursor-based pagination.</p>\n<p>By default, pagination will be sorted by last publication date. If you would like to change that, specify a <code class=\"language-text\">sortBy</code> value in your page configuration in <code class=\"language-text\">gatsby-config.js</code>.</p>\n<h4 id=\"dynamically-generated-pagination\"><a href=\"#dynamically-generated-pagination\" aria-label=\"dynamically generated pagination permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dynamically-Generated Pagination</h4>\n<p>When coupled with <code class=\"language-text\">prismic.load</code>, as demonstrated in the <a href=\"https://github.com/birkir/gatsby-source-prismic-graphql/tree/master/examples/pagination\">index page of the pagination example</a>, other pages can be fetched dynamically using page and cursor calculations.</p>\n<p>GraphQL documents from Prismic have a cursor—a base64-encoded string that represents their order, or page number, in the set of all documents queried. We provide two helpers for converting between cursor strings and page numbers:</p>\n<ul>\n<li><code class=\"language-text\">getCursorFromDocumentIndex(index: number)</code></li>\n<li><code class=\"language-text\">getDocumentIndexFromCursor(cursor: string)</code></li>\n</ul>\n<h4 id=\"statically-generated-pagination\"><a href=\"#statically-generated-pagination\" aria-label=\"statically generated pagination permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Statically-Generated Pagination</h4>\n<h5 id=\"basic-pagination\"><a href=\"#basic-pagination\" aria-label=\"basic pagination permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Basic Pagination</h5>\n<p>For basic linking between the pages, metadata for the previous and next pages are provided to you automatically via <code class=\"language-text\">pageContext</code> in the <code class=\"language-text\">paginationPreviousMeta</code> and <code class=\"language-text\">paginationNextMeta</code> properties. These can be used in conjunction with your <code class=\"language-text\">linkResolver</code> to generate links between pages without any additional GraphQL query. For an example of this, take a look at the <code class=\"language-text\">&lt;Pagination /&gt;</code> component in the pagination example’s <a href=\"https://github.com/birkir/gatsby-source-prismic-graphql/tree/master/examples/pagination/src/templates/article.js\"><code class=\"language-text\">article.js</code></a>.</p>\n<h5 id=\"enhanced-pagination\"><a href=\"#enhanced-pagination\" aria-label=\"enhanced pagination permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Enhanced Pagination</h5>\n<p>If you would like to gather other information about previous and next pages (say a title or image), simply modify your page query to retrieve those documents. This also is demonstrated in the same <a href=\"https://github.com/birkir/gatsby-source-prismic-graphql/tree/master/examples/pagination/src/templates/article.js\">pagination example</a> with the <code class=\"language-text\">&lt;EnhancedPagination /&gt;</code> component and the page’s GraphQL query.</p>\n<h3 id=\"working-with-gatsby-image\"><a href=\"#working-with-gatsby-image\" aria-label=\"working with gatsby image permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Working with gatsby-image</h3>\n<p>The latest versions of this plugin support gatsby-image by adding a new property to GraphQL types that contains fields that match the <code class=\"language-text\">sharpKeys</code> array (this defaults to <code class=\"language-text\">/image|photo|picture/</code>) to the <code class=\"language-text\">Sharp</code> suffix.</p>\n<p><strong>Note:</strong> When querying, make sure to also query the source field. For example:</p>\n<div class=\"gatsby-highlight\" data-language=\"gql\"><pre class=\"language-gql\"><code class=\"language-gql\">query {\n  prismic {\n    Article(id: &quot;123&quot;) {\n      title\n      articlePhoto\n      articlePhotoSharp {\n        childImageSharp {\n          fluid(maxWidth: 400, maxHeight: 250) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  }\n}</code></pre></div>\n<p>You can also get access to specific crop sizes from Prismic by passing the <code class=\"language-text\">crop</code> argument:</p>\n<div class=\"gatsby-highlight\" data-language=\"gql\"><pre class=\"language-gql\"><code class=\"language-gql\">query {\n  prismic {\n    Author(id: &quot;123&quot;) {\n      name\n      profile_picture\n      profile_pictureSharp(crop: &quot;face&quot;) {\n        childImageSharp {\n          fluid(maxWidth: 500, maxHeight: 500) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  }\n}</code></pre></div>\n<p><strong>NOTE</strong> Images are not transformed in preview mode, so be sure to fall back to the default image when the sharp image is <code class=\"language-text\">null</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> Img <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby-image'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">get</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash/get'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ...</span>\n\n<span class=\"token keyword\">const</span> sharpImage <span class=\"token operator\">=</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token string\">'prismic.Author.profile_pictureSharp.childImageSharp.fluid'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">return</span> sharpImage <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Img</span></span> <span class=\"token attr-name\">fluid</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>sharpImage<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token string\">'prismic.Author.profile_picture.url'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Later, we may add an <code class=\"language-text\">Image</code> component that does this for you and leverages the new Prismic Image API as a fallback for preview modes.</p>\n<h3 id=\"prismicio-content-ab-experiments-integration\"><a href=\"#prismicio-content-ab-experiments-integration\" aria-label=\"prismicio content ab experiments integration permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prismic.io Content A/B Experiments Integration</h3>\n<p>You can use this plugin in combination with Prismic’s built-in experiments functionality, and a hosting service like Netlify, to run content A/B tests.</p>\n<p>Experiments in Prismic are basically branches of the core content, split into ‘refs’ similar to git branches. So if you want to get content from a certain experiment variation, you can pass the corresponding ref through to Prismic in your request, and it will return content based on that ref’s variation.</p>\n<p>A/B experiments are tricky to implement in a static website though; A/B testing needs a way to dynamically serve up the different variations to different website visitors. This is at odds with the idea of a static, non-dynamic website.</p>\n<p>Fortunately, static hosting providers like Netlify allow you to run A/B tests at a routing level. This makes it possible for us to build multiple versions of our project using different source data, and then within Netlify\nsplit traffic to our different static variations.</p>\n<p>Therefore, we can use A/B experiments from Prismic in the following way:</p>\n<ol>\n<li>Setup an experiment in Prismic.</li>\n<li>Create a new git branch of your project which will be used to get content. You will need to create a separate git branch for each variation.</li>\n<li>In that git branch, edit/add the optional ‘prismicRef’ parameter (documented above). The value of this should be the ref of the variation this git branch is for.</li>\n<li>Push the newly created branch to your git repo.</li>\n<li>Now go to your static hosting provider (we’ll use Netlify in this example), and setup split testing based on your git branches/Prismic variations.</li>\n<li>Now your static website will show different experimental variations of the content to different users! At this point the process is manual and non-ideal, but hopefully we’ll be able to automate it more in the future.</li>\n</ol>\n<h2 id=\"how-this-plugin-works\"><a href=\"#how-this-plugin-works\" aria-label=\"how this plugin works permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How This Plugin Works</h2>\n<ol>\n<li>\n<p>The plugin creates a new page at <code class=\"language-text\">/preview</code> (by default, you can change this), that will be your preview URL you setup in the Prismic admin interface.</p>\n<p>It will automatically set cookies based on the query parameters and attempt to find the correct page to redirect to with your linkResolver.</p>\n</li>\n<li>\n<p>It uses a different <code class=\"language-text\">babel-plugin-remove-graphql-queries</code> on the client.</p>\n<p>The modified plugin emits your GraphQL queries as a string so they can be read and re-used on the client side by the plugin.</p>\n</li>\n<li>\n<p>Once redirected to a page with the content, everything will load normally.</p>\n<p>In the background, the plugin takes your original Gatsby GraphQL query, extracts the Prismic subquery and uses it to make a GraphQL request to Prismic with a preview reference.</p>\n<p>Once data is received, it will update the <code class=\"language-text\">data</code> prop with merged data from Prismic preview and re-render the component.</p>\n</li>\n</ol>\n<h2 id=\"development\"><a href=\"#development\" aria-label=\"development permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Development</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone git@github.com:birkir/gatsby-source-prismic-graphql.git\n<span class=\"token builtin class-name\">cd</span> gatsby-source-prismic-graphql\n<span class=\"token function\">yarn</span> <span class=\"token function\">install</span>\n<span class=\"token function\">yarn</span> setup\n<span class=\"token function\">yarn</span> start\n\n<span class=\"token comment\"># select example to work with</span>\n<span class=\"token builtin class-name\">cd</span> examples/default\n<span class=\"token function\">yarn</span> start</code></pre></div>\n<h2 id=\"issues-and-troubleshooting\"><a href=\"#issues-and-troubleshooting\" aria-label=\"issues and troubleshooting permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Issues and Troubleshooting</h2>\n<p>Please raise an issue on GitHub if you have any problems.</p>\n<h3 id=\"my-page-graphql-query-does-not-hot-reload-for-previews\"><a href=\"#my-page-graphql-query-does-not-hot-reload-for-previews\" aria-label=\"my page graphql query does not hot reload for previews permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>My page GraphQL query does not hot-reload for previews</h3>\n<p>This is a Gatsby limitation. You can bypass this limitation by adding the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> ... </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">MyPage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nMyPage<span class=\"token punctuation\">.</span>query <span class=\"token operator\">=</span> query<span class=\"token punctuation\">;</span> <span class=\"token comment\">// &lt;-- set the query manually to allow hot-reload.</span></code></pre></div>",
            "timeToRead": 13
          }
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/packages/@doingitright/gatsby-source-prismic-graphql/",
      "id": "45ee0018-0c86-5284-b958-aecb592acaf7",
      "layout": "plugins"
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsRemotePackagesJs803499274(\n  $slug: String!\n) {\n  markdownRemark(fields: {slug: {eq: $slug}}) {\n    ...MarkdownPageFooter\n  }\n  npmPackage(slug: {eq: $slug}) {\n    name\n    description\n    keywords\n    lastPublisher {\n      name\n      avatar\n    }\n    repository {\n      url\n    }\n    readme {\n      childMarkdownRemark {\n        html\n        timeToRead\n      }\n    }\n  }\n}\n\nfragment MarkdownPageFooter on MarkdownRemark {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}