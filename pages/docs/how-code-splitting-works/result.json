{
  "path": "/docs/how-code-splitting-works/",
  "result": {
    "data": {
      "mdx": {
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Code Splitting and Prefetching\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Code splitting in Gatsby occurs during webpack compilation via \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://webpack.js.org/guides/code-splitting/#dynamic-imports\"\n  }), \"Dynamic Splitting\"), \". During compilation, if webpack finds an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"import\"), \" function invocation, it will split the imported file into a separate bundle. If modules are instead loaded with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"require\"), \", they are not code split and are instead included in the original bundle.\"), mdx(\"p\", null, \"But how do we figure out what modules/files to split? Thankfully, there is a natural answer. Pages! When you load a page, there\\u2019s no reason we need to also load the JavaScript/CSS for all the other pages on the site (except to prefetch them which we\\u2019ll get to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/how-code-splitting-works/#prefetching-chunks\"\n  }), \"later\"), \"). Gatsby\\u2019s job is to do the heavy lifting of generating the right JavaScript in the form that webpack expects to perform this code splitting.\"), mdx(\"h2\", {\n    \"id\": \"cacheasync-requiresjs\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#cacheasync-requiresjs\",\n    \"aria-label\": \"cacheasync requiresjs permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \".cache/async-requires.js\"), mdx(\"p\", null, \"During the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/write-pages/#async-requiresjs\"\n  }), \"Write Out Pages\"), \" bootstrap phase, we output \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".cache/async-requires.js\"), \". This file is key to code splitting. It exports a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"components\"), \" object that maps \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/behind-the-scenes-terminology/#componentchunkname\"\n  }), \"ComponentChunkNames\"), \" to functions that import the component\\u2019s file on disk. E.g\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"exports.components = {\\n  \\\"component--src-blog-js\\\": () =>\\n    import(\\n      \\\"/home/site/src/blog.js\\\" /* webpackChunkName: \\\"component---src-blog-js\\\" */\\n    ),\\n  // more components\\n}\\n\")), mdx(\"p\", null, \"The entry point to webpack (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"production-app.js\"), \") \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/production-app.js#L15\"\n  }), \"references ./async-requires.js\"), \". And therefore webpack will analyze it and find the object mapping components to functions that dynamically import page component files. According to dynamic splitting, webpack will then create separate chunks for each of those imported files.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"async-requires\"), \" also exports a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"data\"), \" function that dynamically imports the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/write-pages/#datajson\"\n  }), \"data.json\"), \" file so that it too is code split.\"), mdx(\"h2\", {\n    \"id\": \"chunk-bundle-naming\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#chunk-bundle-naming\",\n    \"aria-label\": \"chunk bundle naming permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Chunk bundle naming\"), mdx(\"p\", null, \"Great! We\\u2019ve told webpack where we want to code split. But how will these be named on disk? Webpack gives you the ability to customize this via the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://webpack.js.org/configuration/output/#output-chunkfilename\"\n  }), \"chunkFilename\"), \" configuration in the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://webpack.js.org/configuration/output/\"\n  }), \"output\"), \" section, which is set by Gatsby in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/utils/webpack.config.js#L135\"\n  }), \"webpack.config.js\"), \" as:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"[name]-[contenthash].js\\n\")), mdx(\"p\", null, \"Content hash is simply a hash of the contents of the chunk that was code split. But what about \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"name\"), \"? We haven\\u2019t told webpack the \\u201Cname\\u201D of the chunk, other than the filename, which can\\u2019t be a name since it has slashes in it. Normally, Webpack would replace \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[name]\"), \" with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[id]\"), \" (see \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://webpack.js.org/configuration/output/#output-chunkfilename\"\n  }), \"webpack docs\"), \"). But, it gives us the opportunity to specify the name instead as a comment in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"import block\"), \". In the example above, that\\u2019s what the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/* webpackChunkName: \\\"component---src-blog-js\\\" */\"), \" is doing.\"), mdx(\"h2\", {\n    \"id\": \"primer-on-chunkgroups-and-chunks\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#primer-on-chunkgroups-and-chunks\",\n    \"aria-label\": \"primer on chunkgroups and chunks permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Primer on chunkGroups and chunks\"), mdx(\"p\", null, \"Before we go on to show how Gatsby maps components to the generated bundle names, we should understand how webpack chunks work. A chunk group represents a logical code split, e.g. a Gatsby page, or the Gatsby core app. The chunk groups might share a bunch of code or libraries. Webpack detects these and creates shared pieces of code. These are chunks, e.g. there might be a chunk for React and other libraries. Then there would be the leftover chunks of core Gatsby JS code for the particular chunk group. This is most easily explained by the below graph.\"), mdx(\"svg\", {\n    \"width\": \"591pt\",\n    \"height\": \"606pt\",\n    \"viewBox\": \"0.00 0.00 590.82 606.00\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\",\n    \"xlink\": \"http://www.w3.org/1999/xlink\",\n    \"style\": {\n      \"maxWidth\": \"100%\",\n      \"height\": \"auto\"\n    }\n  }, mdx(\"g\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"id\": \"graph0\",\n    \"className\": \"graph\",\n    \"transform\": \"scale(1 1) rotate(0) translate(4 602)\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"%0\"), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"#ffffff\",\n    \"stroke\": \"transparent\",\n    \"points\": \"-4,4 -4,-602 586.8222,-602 586.8222,4 -4,4\"\n  })), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"clust1\",\n    \"className\": \"cluster\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"cluster_chunks\"), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"points\": \"207.7196,-8 207.7196,-590 574.8222,-590 574.8222,-8 207.7196,-8\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"middle\",\n    \"x\": \"391.2709\",\n    \"y\": \"-573.4\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"chunks\")), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"clust2\",\n    \"className\": \"cluster\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"cluster_chunkGroups\"), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"points\": \"8,-226 8,-411 187.7196,-411 187.7196,-226 8,-226\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"middle\",\n    \"x\": \"97.8598\",\n    \"y\": \"-394.4\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"chunkGroups\")), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"node1\",\n    \"className\": \"node\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"id0\"), mdx(\"path\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"#d3d3d3\",\n    \"stroke\": \"#000000\",\n    \"d\": \"M296.5086,-295.8C296.5086,-295.8 486.0332,-295.8 486.0332,-295.8 492.0332,-295.8 498.0332,-301.8 498.0332,-307.8 498.0332,-307.8 498.0332,-358.2 498.0332,-358.2 498.0332,-364.2 492.0332,-370.2 486.0332,-370.2 486.0332,-370.2 296.5086,-370.2 296.5086,-370.2 290.5086,-370.2 284.5086,-364.2 284.5086,-358.2 284.5086,-358.2 284.5086,-307.8 284.5086,-307.8 284.5086,-301.8 290.5086,-295.8 296.5086,-295.8\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"middle\",\n    \"x\": \"391.2709\",\n    \"y\": \"-353.6\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"id: 0\"), mdx(\"polyline\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"points\": \"284.5086,-345.4 498.0332,-345.4 \"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"middle\",\n    \"x\": \"391.2709\",\n    \"y\": \"-328.8\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"asset: 0-d55d2d6645e11739b63c.js\"), mdx(\"polyline\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"points\": \"284.5086,-320.6 498.0332,-320.6 \"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"middle\",\n    \"x\": \"391.2709\",\n    \"y\": \"-304\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"common libs (e.g react)\")), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"node2\",\n    \"className\": \"node\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"id1\"), mdx(\"path\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"#d3d3d3\",\n    \"stroke\": \"#000000\",\n    \"d\": \"M297.6867,-388.8C297.6867,-388.8 484.8551,-388.8 484.8551,-388.8 490.8551,-388.8 496.8551,-394.8 496.8551,-400.8 496.8551,-400.8 496.8551,-451.2 496.8551,-451.2 496.8551,-457.2 490.8551,-463.2 484.8551,-463.2 484.8551,-463.2 297.6867,-463.2 297.6867,-463.2 291.6867,-463.2 285.6867,-457.2 285.6867,-451.2 285.6867,-451.2 285.6867,-400.8 285.6867,-400.8 285.6867,-394.8 291.6867,-388.8 297.6867,-388.8\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"middle\",\n    \"x\": \"391.2709\",\n    \"y\": \"-446.6\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"id: 1\"), mdx(\"polyline\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"points\": \"285.6867,-438.4 496.8551,-438.4 \"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"middle\",\n    \"x\": \"391.2709\",\n    \"y\": \"-421.8\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"asset: 1-4c94a37dc2061cb7beb9.js\"), mdx(\"polyline\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"points\": \"285.6867,-413.6 496.8551,-413.6 \"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"middle\",\n    \"x\": \"391.2709\",\n    \"y\": \"-397\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"more common libs\")), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"node3\",\n    \"className\": \"node\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"id5\"), mdx(\"path\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"#d3d3d3\",\n    \"stroke\": \"#000000\",\n    \"d\": \"M291.4637,-109.8C291.4637,-109.8 491.0781,-109.8 491.0781,-109.8 497.0781,-109.8 503.0781,-115.8 503.0781,-121.8 503.0781,-121.8 503.0781,-172.2 503.0781,-172.2 503.0781,-178.2 497.0781,-184.2 491.0781,-184.2 491.0781,-184.2 291.4637,-184.2 291.4637,-184.2 285.4637,-184.2 279.4637,-178.2 279.4637,-172.2 279.4637,-172.2 279.4637,-121.8 279.4637,-121.8 279.4637,-115.8 285.4637,-109.8 291.4637,-109.8\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"middle\",\n    \"x\": \"391.2709\",\n    \"y\": \"-167.6\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"id: 5\"), mdx(\"polyline\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"points\": \"279.4637,-159.4 503.0781,-159.4 \"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"middle\",\n    \"x\": \"391.2709\",\n    \"y\": \"-142.8\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"asset: app-2e49587d85e03a033f58.js\"), mdx(\"polyline\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"points\": \"279.4637,-134.6 503.0781,-134.6 \"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"middle\",\n    \"x\": \"391.2709\",\n    \"y\": \"-118\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"Gatsby core app\")), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"node4\",\n    \"className\": \"node\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"id42\"), mdx(\"path\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"#d3d3d3\",\n    \"stroke\": \"#000000\",\n    \"d\": \"M255.3409,-16.8C255.3409,-16.8 527.2009,-16.8 527.2009,-16.8 533.2009,-16.8 539.2009,-22.8 539.2009,-28.8 539.2009,-28.8 539.2009,-79.2 539.2009,-79.2 539.2009,-85.2 533.2009,-91.2 527.2009,-91.2 527.2009,-91.2 255.3409,-91.2 255.3409,-91.2 249.3409,-91.2 243.3409,-85.2 243.3409,-79.2 243.3409,-79.2 243.3409,-28.8 243.3409,-28.8 243.3409,-22.8 249.3409,-16.8 255.3409,-16.8\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"middle\",\n    \"x\": \"391.2709\",\n    \"y\": \"-74.6\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"id: 42\"), mdx(\"polyline\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"points\": \"243.3409,-66.4 539.2009,-66.4 \"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"middle\",\n    \"x\": \"391.2709\",\n    \"y\": \"-49.8\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"asset: webpack-runtime-e402cdceeae5fad2aa61.js\"), mdx(\"polyline\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"points\": \"243.3409,-41.6 539.2009,-41.6 \"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"middle\",\n    \"x\": \"391.2709\",\n    \"y\": \"-25\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"webpack runtime\")), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"node5\",\n    \"className\": \"node\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"id7\"), mdx(\"path\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"#d3d3d3\",\n    \"stroke\": \"#000000\",\n    \"d\": \"M227.7196,-481.8C227.7196,-481.8 554.8222,-481.8 554.8222,-481.8 560.8222,-481.8 566.8222,-487.8 566.8222,-493.8 566.8222,-493.8 566.8222,-544.2 566.8222,-544.2 566.8222,-550.2 560.8222,-556.2 554.8222,-556.2 554.8222,-556.2 227.7196,-556.2 227.7196,-556.2 221.7196,-556.2 215.7196,-550.2 215.7196,-544.2 215.7196,-544.2 215.7196,-493.8 215.7196,-493.8 215.7196,-487.8 221.7196,-481.8 227.7196,-481.8\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"middle\",\n    \"x\": \"391.2709\",\n    \"y\": \"-539.6\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"id: 7\"), mdx(\"polyline\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"points\": \"215.7196,-531.4 566.8222,-531.4 \"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"middle\",\n    \"x\": \"391.2709\",\n    \"y\": \"-514.8\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"asset: component---src-blog-1-js-cebc3ae7596cbb5b0951.js\"), mdx(\"polyline\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"points\": \"215.7196,-506.6 566.8222,-506.6 \"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"middle\",\n    \"x\": \"391.2709\",\n    \"y\": \"-490\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"js for src/blog/1.js\")), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"node6\",\n    \"className\": \"node\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"id8\"), mdx(\"path\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"#d3d3d3\",\n    \"stroke\": \"#000000\",\n    \"d\": \"M227.7196,-202.8C227.7196,-202.8 554.8222,-202.8 554.8222,-202.8 560.8222,-202.8 566.8222,-208.8 566.8222,-214.8 566.8222,-214.8 566.8222,-265.2 566.8222,-265.2 566.8222,-271.2 560.8222,-277.2 554.8222,-277.2 554.8222,-277.2 227.7196,-277.2 227.7196,-277.2 221.7196,-277.2 215.7196,-271.2 215.7196,-265.2 215.7196,-265.2 215.7196,-214.8 215.7196,-214.8 215.7196,-208.8 221.7196,-202.8 227.7196,-202.8\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"middle\",\n    \"x\": \"391.2709\",\n    \"y\": \"-260.6\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"id: 8\"), mdx(\"polyline\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"points\": \"215.7196,-252.4 566.8222,-252.4 \"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"middle\",\n    \"x\": \"391.2709\",\n    \"y\": \"-235.8\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"asset: component---src-blog-2-js-cebc3ae7596cbb5b0951.js\"), mdx(\"polyline\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"points\": \"215.7196,-227.6 566.8222,-227.6 \"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"middle\",\n    \"x\": \"391.2709\",\n    \"y\": \"-211\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"js for src/blog/2.js\")), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"node7\",\n    \"className\": \"node\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"app\"), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"#d3d3d3\",\n    \"stroke\": \"#000000\",\n    \"points\": \"124.8598,-270 70.8598,-270 70.8598,-234 124.8598,-234 124.8598,-270\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"middle\",\n    \"x\": \"97.8598\",\n    \"y\": \"-247.8\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"app\")), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"edge1\",\n    \"className\": \"edge\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"app->id5\"), mdx(\"path\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"d\": \"M124.9515,-234.9996C146.6542,-221.9925 178.2414,-204.4064 207.7196,-193 227.2922,-185.4265 248.5264,-178.7684 269.3742,-173.0403\"\n  })), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"#000000\",\n    \"stroke\": \"#000000\",\n    \"points\": \"270.4928,-176.364 279.242,-170.3889 268.6763,-169.6038 270.4928,-176.364\"\n  }))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"edge2\",\n    \"className\": \"edge\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"app->id42\"), mdx(\"path\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"d\": \"M105.7868,-233.8172C120.792,-201.6142 156.496,-134.6883 207.7196,-100 215.8801,-94.4738 224.6487,-89.611 233.7707,-85.3322\"\n  })), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"#000000\",\n    \"stroke\": \"#000000\",\n    \"points\": \"235.2746,-88.4941 243.0012,-81.245 232.4404,-82.0935 235.2746,-88.4941\"\n  }))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"node8\",\n    \"className\": \"node\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"component1\"), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"#d3d3d3\",\n    \"stroke\": \"#000000\",\n    \"points\": \"179.5796,-378 16.14,-378 16.14,-342 179.5796,-342 179.5796,-378\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"middle\",\n    \"x\": \"97.8598\",\n    \"y\": \"-355.8\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"component---src-blog-1-js\")), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"edge4\",\n    \"className\": \"edge\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"component1->id0\"), mdx(\"path\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"d\": \"M179.5911,-352.479C208.892,-349.7827 242.5262,-346.6876 274.2313,-343.7701\"\n  })), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"#000000\",\n    \"stroke\": \"#000000\",\n    \"points\": \"274.8123,-347.2315 284.4495,-342.8298 274.1708,-340.261 274.8123,-347.2315\"\n  }))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"edge5\",\n    \"className\": \"edge\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"component1->id1\"), mdx(\"path\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"d\": \"M178.0357,-378.0348C208.0973,-384.7969 242.8874,-392.6226 275.5337,-399.966\"\n  })), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"#000000\",\n    \"stroke\": \"#000000\",\n    \"points\": \"275.0646,-403.4479 285.5889,-402.2279 276.6008,-396.6185 275.0646,-403.4479\"\n  }))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"edge3\",\n    \"className\": \"edge\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"component1->id7\"), mdx(\"path\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"d\": \"M110.4872,-378.309C128.8885,-403.5575 165.5152,-448.6939 207.7196,-473 210.2551,-474.4602 212.8363,-475.8745 215.457,-477.2443\"\n  })), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"#000000\",\n    \"stroke\": \"#000000\",\n    \"points\": \"213.9963,-480.4266 224.5104,-481.7322 217.1053,-474.1549 213.9963,-480.4266\"\n  }))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"node9\",\n    \"className\": \"node\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"component2\"), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"#d3d3d3\",\n    \"stroke\": \"#000000\",\n    \"points\": \"179.5796,-324 16.14,-324 16.14,-288 179.5796,-288 179.5796,-324\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"textAnchor\": \"middle\",\n    \"x\": \"97.8598\",\n    \"y\": \"-301.8\",\n    \"fontFamily\": \"Times,serif\",\n    \"fontSize\": \"14.00\",\n    \"fill\": \"#000000\"\n  }), \"component---src-blog-2-js\")), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"edge7\",\n    \"className\": \"edge\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"component2->id0\"), mdx(\"path\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"d\": \"M179.5911,-313.521C208.892,-316.2173 242.5262,-319.3124 274.2313,-322.2299\"\n  })), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"#000000\",\n    \"stroke\": \"#000000\",\n    \"points\": \"274.1708,-325.739 284.4495,-323.1702 274.8123,-318.7685 274.1708,-325.739\"\n  }))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"edge8\",\n    \"className\": \"edge\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"component2->id1\"), mdx(\"path\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"d\": \"M175.3667,-324.1025C179.7884,-326.6834 183.9572,-329.6318 187.7196,-333 204.6334,-348.142 190.4595,-365.2539 207.7196,-380 226.9035,-396.3898 251.098,-407.0856 275.5698,-414.0288\"\n  })), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"#000000\",\n    \"stroke\": \"#000000\",\n    \"points\": \"274.7568,-417.434 285.3188,-416.5999 276.542,-410.6654 274.7568,-417.434\"\n  }))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"edge6\",\n    \"className\": \"edge\"\n  }), mdx(\"title\", {\n    parentName: \"g\"\n  }, \"component2->id8\"), mdx(\"path\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"d\": \"M178.0357,-287.9652C190.0017,-285.2736 202.717,-282.4134 215.748,-279.4822\"\n  })), mdx(\"polygon\", _extends({\n    parentName: \"g\"\n  }, {\n    \"fill\": \"#000000\",\n    \"stroke\": \"#000000\",\n    \"points\": \"216.7792,-282.8378 225.7673,-277.2284 215.243,-276.0084 216.7792,-282.8378\"\n  }))))), mdx(\"p\", null, \"In the above graph, we can see 3 chunk groups: 2 pages and the core Gatsby app. The two pages share a bunch of libraries. Webpack found these common dependencies and created chunks for them. These chunks are id 0 and 1. And you\\u2019ll see that both page \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"chunkGroups\"), \" depend on them. Each page also depends on its own chunk which represents the page\\u2019s core code (from its src code in the Gatsby site). These would be id 7 for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"component---src-blog-1-js\"), \" and 8 for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"component---src-blog-2-js\"), \".\"), mdx(\"p\", null, \"We can also see the chunk group for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"app\"), \". It turns out that this shares no dependencies with the pages. But it does include the webpack runtime whose name is declared in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/utils/webpack.config.js#L390\"\n  }), \"webpack.config.js\"), \".\"), mdx(\"p\", null, \"Remember that the chunk group name was assigned by the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/* webpackChunkName: .../*\"), \" in the previous section.\"), mdx(\"h2\", {\n    \"id\": \"referencing-chunks-in-build-html\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#referencing-chunks-in-build-html\",\n    \"aria-label\": \"referencing chunks in build html permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Referencing chunks in build HTML\"), mdx(\"p\", null, \"Webpack can now split our code into different bundles, and we\\u2019ve named them appropriately. But those bundles will still be named with a content hash. E.g for a component \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"component--src-blog-js\"), \", the output chunk bundle might be named something like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"component--src-blog-js-2e49587d85e03a033f58.js\"), \". Webpack will replace \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"import()\"), \" calls with links to the generated bundle filenames. This works great for our pure JavaScript bundles. But things get complicated when generating our page HTML files.\"), mdx(\"p\", null, \"HTML file generation is covered under the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/html-generation/\"\n  }), \"Page HTML Generation\"), \" docs. In summary, webpack builds \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"static-entry.js\"), \" which produces a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"render-page.js\"), \" bundle. This is a function that accepts a page and renders its HTML. The HTML is enough to drive a site, and enhance SEO, but once the page is loaded, Gatsby also loads the JavaScript bundle so that page rendering occurs clientside from then on. This gives the advantage of fast initial page loads combined with client side rendering for future page clicks.\"), mdx(\"p\", null, \"To do this, we need to be able to create \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<link>\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<script>\"), \" tags in the HTML the Gatsby runtime chunk, and the page chunk (e.g index). But as mentioned above, only webpack knows the name of the generated filename for each chunk. All Gatsby knows is the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"componentChunkName\"), \".\"), mdx(\"h4\", {\n    \"id\": \"webpackstatsjson\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#webpackstatsjson\",\n    \"aria-label\": \"webpackstatsjson permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"webpack.stats.json\"), mdx(\"p\", null, \"It turns out that webpack provides a way to record the mapping. It provides a compilation hook called \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://webpack.js.org/api/compiler-hooks/#done\"\n  }), \"done\"), \" that you can register for. It provides a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://webpack.js.org/api/stats/\"\n  }), \"stats\"), \" data structure that contains all the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"chunkGroups\"), \" (remember that the chunk Group is the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"componentChunkName\"), \"). Each chunk group contains a list of the chunks it depends on. Gatsby provides a custom webpack plugin called \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/utils/gatsby-webpack-stats-extractor.js\"\n  }), \"GatsbyWebpackStatsExtractor\"), \" that implements this hook and writes the chunk information to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/public/webpack.stats.json\"), \" (under the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"assetsByChunkName\"), \" key). E.g\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"{\\n  \\\"assetsByChunkName\\\": {\\n    \\\"app\\\": [\\n      \\\"webpack-runtime-e402cdceeae5fad2aa61.js\\\",\\n      \\\"app-2e49587d85e03a033f58.js\\\"\\n    ],\\n    \\\"component---src-blog-2-js\\\": [\\n      \\\"0.f8e7f9e53550f997bc53.css\\\",\\n      \\\"0-d55d2d6645e11739b63c.js\\\",\\n      \\\"1.93002d5bafe5ca491b1a.css\\\",\\n      \\\"1-4c94a37dc2061cb7beb9.js\\\",\\n      \\\"component---src-blog-2-js-cebc3ae7596cbb5b0951.js\\\"\\n    ]\\n  }\\n}\\n\")), mdx(\"h5\", {\n    \"id\": \"chunk-mapjson\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#chunk-mapjson\",\n    \"aria-label\": \"chunk mapjson permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"chunk-map.json\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"webpack.stats.json\"), \" maps chunk groups (componentChunkNames) to the chunk asset names they depend on. Our \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/utils/webpack.config.js#L234\"\n  }), \"Gatsby webpack compiler hook\"), \" also outputs \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"chunk-map.json\"), \" which is a mapping from chunkGroup to the core chunk for the component, as opposed to the shared chunks (id0 and id1 in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/how-code-splitting-works/#primer-on-chunkgroups-and-chunks\"\n  }), \"primer diagram\"), \"). This will render a single component chunk for JavaScript and CSS within each chunk group. E.g\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"{\\n  \\\"app\\\":[\\\"/app-2e49587d85e03a033f58.js\\\"],\\n  \\\"component---src-blog-2-js\\\": [\\n    \\\"/component---src-blog-2-js-cebc3ae7596cbb5b0951.css\\\",\\n    \\\"/component---src-blog-2-js-860f9fbc5c3881586b5d.js\\\"\\n  ]\\n}\\n\")), mdx(\"h4\", {\n    \"id\": \"referencing-chunks\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#referencing-chunks\",\n    \"aria-label\": \"referencing chunks permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Referencing Chunks\"), mdx(\"p\", null, \"These two files are loaded by \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/static-entry.js#L16\"\n  }), \"static-entry.js\"), \" so that it can lookup chunk assets for componentChunkNames. This occurs in two places.\"), mdx(\"h5\", {\n    \"id\": \"construct-link-and-script-tags-for-current-page\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#construct-link-and-script-tags-for-current-page\",\n    \"aria-label\": \"construct link and script tags for current page permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Construct link and script tags for current page\"), mdx(\"p\", null, \"As mentioned above, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"static-entry.js\"), \" generates HTML, but also loads the Gatsby JavaScript runtime and the JavaScript for the page we\\u2019re generating HTML for. These are added as a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"link\"), \" tags in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<head>\"), \" (see \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Preloading_content\"\n  }), \"link tag preloading\"), \"), and then referenced at the bottom of the body in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"script\"), \" tags.\"), mdx(\"p\", null, \"The Gatsby runtime bundle is called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"app\"), \" (output name from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/utils/webpack.config.js#L169\"\n  }), \"webpack.config.js\"), \"). We \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/static-entry.js#L204\"\n  }), \"lookup assetsByChunkName\"), \" by \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"app\"), \" to get its chunk asset files. Then we do the same for the component by looking up the same collection by \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"componentChunkName\"), \" (e.g. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"component---src-blog-2-js\"), \"). These two chunk asset arrays are merged together. For each chunk in it, we create the following link and add it to the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/static-entry.js#L259\"\n  }), \"headComponents\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\"\n  }), \"<link\\n  as=\\\"script\\\"\\n  rel=\\\"preload\\\"\\n  key=\\\"app-2e49587d85e03a033f58.js\\\"\\n  href=\\\"/app-2e49587d85e03a033f58.js\\\"\\n/>\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"rel=\\\"preload\\\"\"), \" tells the browser to start downloading this resource with a high priority as it will likely be referenced further down in the document. So hopefully by the time we get there, the resource will be returned from the server already.\"), mdx(\"p\", null, \"Then, at the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/static-entry.js#L331\"\n  }), \"end of the body\"), \", we include the actual script tag that references the preloaded asset.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\"\n  }), \"<script\\n  key=\\\"app-2e49587d85e03a033f58.js\\\"\\n  src=\\\"app-2e49587d85e03a033f58.js\\\"\\n  async\\n/>\\n\")), mdx(\"p\", null, \"If the asset is CSS, we \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/static-entry.js#L311\"\n  }), \"inject it inline in the head\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\"\n  }), \"<style\\n  data-href=\\\"/1.93002d5bafe5ca491b1a.css\\\"\\n  dangerouslySetInnerHTML=\\\"...contents of public/1.93002d5bafe5ca491b1a.css\\\"\\n/>\\n\")), mdx(\"h5\", {\n    \"id\": \"prefetching-chunks\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#prefetching-chunks\",\n    \"aria-label\": \"prefetching chunks permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Prefetching chunks\"), mdx(\"p\", null, \"As shown above, Gatsby uses \\u201Cpreload\\u201D to speed up loading of resources required by the page. These are its CSS and its core JavaScript needed to run the page. But if we stopped there, then when a user clicked a link to another page, we would have to wait for that pages resources to download before showing it. To speed this up, once the current page has loaded, Gatsby looks for all links on the page, and for each starts prefetching the page that the link points to.\"), mdx(\"p\", null, \"It does this using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<link rel=\\\"prefetch\\\" href=\\\"...\\\" />\"), \" parameter. When the browser sees this tag, it will start downloading the resource but at an extremely low priority and only when the resources for the current page have finished loading. Check out the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTTP/Link_prefetching_FAQ\"\n  }), \"MDN prefetch docs\"), \" for more.\"), mdx(\"p\", null, \"Here\\u2019s how it works. All links on Gatsby sites use the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-link\"\n  }), \"gatsby-link\"), \" plugin which provides a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GatsbyLink\"), \" component that uses reach router. The \\u201Cto\\u201D attribute is the page the browser will navigate to if clicked. So once the Link \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-link/src/index.js#L61\"\n  }), \"componentDidMount\"), \" callback is invoked, we enqueue the \\u201Cto\\u201D path into the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/loader.js#L223\"\n  }), \"production-app loader\"), \" for prefetching.\"), mdx(\"p\", null, \"At this stage, we know the page that we\\u2019re navigating to, and can retrieve its \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"componentChunkName\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jsonName\"), \", but how do we figure out the generated chunkGroup for the component?\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"static-entry.js\"), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/static-entry.js#L20\"\n  }), \"requires \", mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"chunk-map.json\")), \" and then \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/static-entry.js#L342\"\n  }), \"injects it into the CDATA\"), \" of the html as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"window.___chunkMapping\"), \" so that it is available to all code in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/production-app/\"\n  }), \"production-app.js\"), \". E.g:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\"\n  }), \"/*\\n<![\\n  CDATA[ */\\n    window.___chunkMapping={\\n      \\\"app\\\":[\\n        \\\"/app-2e49587d85e03a033f58.js\\\"\\n      ],\\n      \\\"component---src-blog-2-js\\\": [\\n        \\\"/component---src-blog-2-js-cebc3ae7596cbb5b0951.css\\\",\\n        \\\"/component---src-blog-2-js-860f9fbc5c3881586b5d.js\\\"\\n      ]\\n    }\\n  */ ]\\n]>\\n*/\\n\")), mdx(\"p\", null, \"Now the loader can create the full component asset path using \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/loader.js#L69\"\n  }), \"chunkMapping\"), \". It then dynamically constructs a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<link rel=\\\"prefetch\\\" ... />\"), \" tag and adds it to the DOM (in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/prefetch.js\"\n  }), \"prefetch.js\"), \").\"), mdx(\"p\", null, \"You may notice that prefetching doesn\\u2019t prefetch the shared chunks (e.g \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"id0\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"id1\"), \"). Why? This is a punt. We\\u2019re guessing that shared chunks will have been loaded earlier for other pages. And if not, then the main page loading logic will download it. It just won\\u2019t be prefetched.\"), mdx(\"p\", null, \"One more thing, prefetching can be disabled by implementing the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/browser-apis/#disableCorePrefetching\"\n  }), \"disableCorePrefetching\"), \" browser API and returning true. This value is checked in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/loader.js#L242\"\n  }), \"loader.enqueue\"), \". An example plugin that implements this is \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-plugin-guess-js/src/gatsby-browser.js#L3\"\n  }), \"gatsby-plugin-guess-js\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "excerpt": "Code splitting in Gatsby occurs during webpack compilation via  Dynamic Splitting . During compilation, if webpack finds an  import…",
        "timeToRead": 5,
        "tableOfContents": {
          "items": [
            {
              "url": "#cacheasync-requiresjs",
              "title": ".cache/async-requires.js"
            },
            {
              "url": "#chunk-bundle-naming",
              "title": "Chunk bundle naming"
            },
            {
              "url": "#primer-on-chunkgroups-and-chunks",
              "title": "Primer on chunkGroups and chunks"
            },
            {
              "url": "#referencing-chunks-in-build-html",
              "title": "Referencing chunks in build HTML",
              "items": [
                {
                  "items": [
                    {
                      "url": "#webpackstatsjson",
                      "title": "webpack.stats.json",
                      "items": [
                        {
                          "url": "#chunk-mapjson",
                          "title": "chunk-map.json"
                        }
                      ]
                    },
                    {
                      "url": "#referencing-chunks",
                      "title": "Referencing Chunks",
                      "items": [
                        {
                          "url": "#construct-link-and-script-tags-for-current-page",
                          "title": "Construct link and script tags for current page"
                        },
                        {
                          "url": "#prefetching-chunks",
                          "title": "Prefetching chunks"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        "fields": {
          "slug": "/docs/how-code-splitting-works/",
          "anchor": "how-code-splitting-works"
        },
        "frontmatter": {
          "title": "Code Splitting and Prefetching",
          "overview": null,
          "issue": null,
          "disableTableOfContents": null,
          "tableOfContentsDepth": null
        },
        "parent": {
          "__typename": "File",
          "relativePath": "docs/how-code-splitting-works.md"
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/docs/how-code-splitting-works/",
      "prev": {
        "title": "Page HTML Generation",
        "link": "/docs/html-generation/"
      },
      "next": {
        "title": "Resource Handling & Service Workers",
        "link": "/docs/resource-handling-and-service-workers/"
      }
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsMarkdownJs2546709735(\n  $path: String!\n) {\n  mdx(fields: {slug: {eq: $path}}) {\n    body\n    excerpt\n    timeToRead\n    tableOfContents\n    fields {\n      slug\n      anchor\n    }\n    frontmatter {\n      title\n      overview\n      issue\n      disableTableOfContents\n      tableOfContentsDepth\n    }\n    ...MarkdownPageFooterMdx\n  }\n}\n\nfragment MarkdownPageFooterMdx on Mdx {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}