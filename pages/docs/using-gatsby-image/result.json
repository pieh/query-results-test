{
  "path": "/docs/using-gatsby-image/",
  "result": {
    "data": {
      "mdx": {
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Using Gatsby Image to Prevent Image Bloat\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-image\"), \" is a React component designed to work seamlessly with Gatsby\\u2019s GraphQL queries (\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/packages/gatsby-image/\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"gatsby-image\"), \" plugin README\"), \"). It combines \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://image-processing.gatsbyjs.org/\"\n  }), \"Gatsby\\u2019s native image processing\"), \" capabilities with advanced image loading techniques to easily and completely optimize image loading for your sites. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-image\"), \" uses \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/packages/gatsby-plugin-sharp/\"\n  }), \"gatsby-plugin-sharp\"), \" to power its image transformations.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Warning: gatsby-image is \", mdx(\"strong\", {\n    parentName: \"em\"\n  }, \"not\"), \" a drop-in replacement for \", mdx(\"inlineCode\", {\n    parentName: \"em\"\n  }, \"<img />\"), \". It\\u2019s optimized for fixed width/height images and images that stretch the full-width of a container. Some ways you can use \", mdx(\"inlineCode\", {\n    parentName: \"em\"\n  }, \"<img />\"), \" won\\u2019t work with gatsby-image.\"))), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://using-gatsby-image.gatsbyjs.org/\"\n  }), \"Demo\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-image\"), \" includes the tricks you\\u2019d expect from a modern image component. It:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"uses the new \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\"\n  }), \"IntersectionObserver API\"), \" to cheaply lazy load images\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"holds an image\\u2019s position so your page doesn\\u2019t jump around as images load\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"makes it easy to add a placeholder\\u2014either a gray background or a blurry version of the image.\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"For more complete API information, check out the \", mdx(\"a\", _extends({\n    parentName: \"em\"\n  }, {\n    \"href\": \"/docs/gatsby-image/\"\n  }), \"Gatsby Image API\"), \" docs.\")), mdx(\"h2\", {\n    \"id\": \"problem\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#problem\",\n    \"aria-label\": \"problem permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Problem\"), mdx(\"p\", null, \"Large, unoptimized images dramatically slow down your site.\"), mdx(\"p\", null, \"But creating optimized images for websites has long been a thorny problem. Ideally you would:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Resize large images to the size needed by your design\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Generate multiple smaller images so smartphones and tablets don\\u2019t download desktop-sized images\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Strip all unnecessary metadata and optimize JPEG and PNG compression\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Efficiently lazy load images to speed initial page load and save bandwidth\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use the \\u201Cblur-up\\u201D technique or a \\u201Ctraced placeholder\\u201D SVG to show a preview of the image while it loads\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Hold the image position so your page doesn\\u2019t jump while images load\")), mdx(\"p\", null, \"Doing this consistently across a site feels like sisyphean labor. You manually optimize your images and then\\u2026 several images are swapped in at the last minute or a design-tweak shaves 100px of width off your images.\"), mdx(\"p\", null, \"Most solutions involve a lot of manual labor and bookkeeping to ensure every image is optimized.\"), mdx(\"p\", null, \"This isn\\u2019t ideal. Optimized images should be easy and the default.\"), mdx(\"h2\", {\n    \"id\": \"solution\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#solution\",\n    \"aria-label\": \"solution permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Solution\"), mdx(\"p\", null, \"With Gatsby, we can make the experience of working with images way, way better.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-image\"), \" is designed to work seamlessly with Gatsby\\u2019s native image processing capabilities powered by GraphQL and Sharp. To produce perfect images with minimal effort, you can:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Install \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gatsby-image\"), \" and other, necessary dependencies like \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gatsby-plugin-sharp\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gatsby-transformer-sharp\"))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"  npm install --save gatsby-image gatsby-transformer-sharp gatsby-plugin-sharp\\n\")), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Add the newly installed plugins and transformer plugins to your \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gatsby-config.js\"))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js:title=gatsby-config.js\"\n  }), \"module.exports = {\\n  plugins: [`gatsby-plugin-sharp`, `gatsby-transformer-sharp`],\\n}\\n\")), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Configure \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gatsby-source-filesystem\"), \" to load images from a folder. In order to use GraphQL to query the image files, the files need to be in a location that is known to Gatsby. This requires an update to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gatsby-config.js\"), \" to configure the plugin. Feel free to replace the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"path\"), \" option to reference wherever your images are located in your project.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js:title=gatsby-config.js\"\n  }), \"module.exports = {\\n  plugins: [\\n    `gatsby-transformer-sharp`,\\n    `gatsby-plugin-sharp`,\\n    // highlight-start\\n    {\\n      resolve: `gatsby-source-filesystem`,\\n      options: {\\n        path: `${__dirname}/src/data/`,\\n      },\\n    },\\n    // highlight-end\\n  ],\\n}\\n\")), mdx(\"ol\", {\n    \"start\": 4\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Write a GraphQL query using one of the included \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/packages/gatsby-image/#fragments\"\n  }), \"GraphQL \\u201Cfragments\\u201D\"), \" which specify the fields needed by \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gatsby-image\"), \" to create a responsive, optimized image. This example queries for an image at a path relative to the location specified in the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gatsby-source-filesystem\"), \" options using the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"GatsbyImageSharpFluid\"), \" fragment.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"file(relativePath: { eq: \\\"images/default.jpg\\\" }) {\\n      childImageSharp {\\n        # Specify the image processing specifications right in the query.\\n        fluid {\\n          ...GatsbyImageSharpFluid\\n        }\\n      }\\n}\\n\")), mdx(\"ol\", {\n    \"start\": 5\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Import \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Img\"), \" to display the fragment in JSX. There are additional features available with the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Img\"), \" tag as well, such as the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"alt\"), \" attribute for accessibility.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import Img from \\\"gatsby-image\\\"\\n\\nexport default ({ data }) => (\\n  <div>\\n    <h1>Hello gatsby-image</h1>\\n    <Img\\n      fluid={data.file.childImageSharp.fluid}\\n      alt=\\\"Gatsby Docs are awesome\\\"\\n    />\\n  </div>\\n)\\n\")), mdx(\"p\", null, \"This GraphQL query creates multiple sizes of the image and when the page is rendered the image that is appropriate for the current screen resolution (e.g. desktop, mobile, and everything in between) is used. The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-image\"), \" component automatically enables a blur-up effect as well as lazy loading images that are not currently on screen.\"), mdx(\"p\", null, \"So this is all very nice and it\\u2019s far better to be able to use this from npm vs. implementing it yourself or cobbling together several standalone libraries.\"), mdx(\"h3\", {\n    \"id\": \"additional-resources\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#additional-resources\",\n    \"aria-label\": \"additional resources permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Additional resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/docs/gatsby-image/\"\n  }), \"Gatsby Image API docs\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/packages/gatsby-image/\"\n  }), \"gatsby-image plugin README file\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/tree/master/examples/using-gatsby-image\"\n  }), \"Source code for an example site using gatsby-image\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/blog/tags/gatsby-image/\"\n  }), \"Blog articles about gatsby-image\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/starters/?d=gatsby-image&v=2\"\n  }), \"Starters that use gatsby-image\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/plugins/?=image\"\n  }), \"Other image plugins\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://medium.com/@kyle.robert.gill/ridiculously-easy-image-optimization-with-gatsby-js-59d48e15db6e\"\n  }), \"\\u201CRidiculously easy image optimization with gatsby-image\\u201D by Kyle Gill\"))));\n}\n;\nMDXContent.isMDXComponent = true;",
        "excerpt": "gatsby-image  is a React component designed to work seamlessly with Gatsby’s GraphQL queries ( gatsby-image  plugin README ). It combines…",
        "timeToRead": 2,
        "tableOfContents": {
          "items": [
            {
              "url": "#problem",
              "title": "Problem"
            },
            {
              "url": "#solution",
              "title": "Solution",
              "items": [
                {
                  "url": "#additional-resources",
                  "title": "Additional resources"
                }
              ]
            }
          ]
        },
        "fields": {
          "slug": "/docs/using-gatsby-image/",
          "anchor": "using-gatsby-image"
        },
        "frontmatter": {
          "title": "Using Gatsby Image to Prevent Image Bloat",
          "overview": null,
          "issue": null,
          "disableTableOfContents": null,
          "tableOfContentsDepth": null
        },
        "parent": {
          "__typename": "File",
          "relativePath": "docs/using-gatsby-image.md"
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/docs/using-gatsby-image/",
      "prev": {
        "title": "Using the Static Folder",
        "link": "/docs/static-folder/"
      },
      "next": {
        "title": "Working with Images in Gatsby",
        "link": "/docs/working-with-images/"
      }
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsMarkdownJs2546709735(\n  $path: String!\n) {\n  mdx(fields: {slug: {eq: $path}}) {\n    body\n    excerpt\n    timeToRead\n    tableOfContents\n    fields {\n      slug\n      anchor\n    }\n    frontmatter {\n      title\n      overview\n      issue\n      disableTableOfContents\n      tableOfContentsDepth\n    }\n    ...MarkdownPageFooterMdx\n  }\n}\n\nfragment MarkdownPageFooterMdx on Mdx {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}