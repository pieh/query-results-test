{
  "path": "/packages/gatsby-source-custom-api/",
  "result": {
    "data": {
      "markdownRemark": null,
      "npmPackage": {
        "name": "gatsby-source-custom-api",
        "description": "Source data from any API and transform it into Gatsby-nodes. Download your image files and use them with Gatsby Image.",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "source",
          "api",
          "json",
          "image",
          "cache"
        ],
        "lastPublisher": {
          "name": "andreasfaust",
          "avatar": "https://gravatar.com/avatar/0be71f8aca27795ea650b0eeb5141c69"
        },
        "repository": {
          "url": "https://github.com/AndreasFaust/gatsby-source-custom-api"
        },
        "readme": {
          "childMarkdownRemark": {
            "html": "<p><img src=\"https://github.com/andreasfaust/gatsby-source-custom-api/raw/master/gatsby-source-custom-api-logo.png\" alt=\"Logo of gatsby-source-custom-api\"></p>\n<p><strong>gatsby-source-custom-api</strong> helps you sourcing data from any API and transform it into Gatsby nodes. Define keys you want to be transformed into image-nodes and use them with <strong><a href=\"https://www.gatsbyjs.org/packages/gatsby-image/\">Gatsby Image</a></strong>.</p>\n<h2 id=\"getting-started\"><a href=\"#getting-started\" aria-label=\"getting started permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Getting Started</h2>\n<ol>\n<li>Install the package with <strong>yarn</strong> or <strong>npm</strong></li>\n</ol>\n<p><code class=\"language-text\">yarn add gatsby-source-custom-api</code></p>\n<ol start=\"2\">\n<li>Add to plugins in your gatsby-config.js</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n            resolve<span class=\"token punctuation\">:</span> <span class=\"token string\">\"gatsby-source-custom-api\"</span><span class=\"token punctuation\">,</span>\n            options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                url<span class=\"token punctuation\">:</span> <span class=\"token string\">\"www.my-custom-api.com\"</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"options\"><a href=\"#options\" aria-label=\"options permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Options</h2>\n<table>\n<thead>\n<tr>\n<th align=\"left\"><strong>Name</strong></th>\n<th align=\"left\"><strong>Type</strong></th>\n<th align=\"left\"><strong>Description</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">url</td>\n<td align=\"left\">object or string</td>\n<td align=\"left\"><code class=\"language-text\">Required.</code> Url of your API as a string. If you have two different APIs for development and production, define an object with the keys <code class=\"language-text\">production</code> and <code class=\"language-text\">development</code>.</td>\n</tr>\n<tr>\n<td align=\"left\">rootKey</td>\n<td align=\"left\">string</td>\n<td align=\"left\"><code class=\"language-text\">Optional.</code> Name your API.</td>\n</tr>\n<tr>\n<td align=\"left\">imageKeys</td>\n<td align=\"left\">array</td>\n<td align=\"left\">Define the keys of image objects. These must have a childkey called <code class=\"language-text\">url</code>, which is a string that defines the path to an image file. Gatsby-Images are added as childkey <code class=\"language-text\">local</code>. Default: <code class=\"language-text\">[&#39;image&#39;]</code>.</td>\n</tr>\n<tr>\n<td align=\"left\">schemas</td>\n<td align=\"left\">object</td>\n<td align=\"left\">Define default-schemas for the objects of your API. See “Provide Default Schemas” for more information.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"provide-default-schemas\"><a href=\"#provide-default-schemas\" aria-label=\"provide default schemas permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Provide Default Schemas</h2>\n<p>You need to provide default schemas for the arrays and objects of your API to avoid GraphQl-errors. You can provide default schemas via the prop <code class=\"language-text\">schemas</code>. More information: <a href=\"https://graphql.org/learn/schema/\">https://graphql.org/learn/schema/</a></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Lets assume this is the data from your API:</span>\n<span class=\"token keyword\">const</span> exampleDataFromApi <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n        url<span class=\"token punctuation\">:</span> <span class=\"token string\">\"post-1\"</span><span class=\"token punctuation\">,</span>\n        images<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token punctuation\">{</span>\n                url<span class=\"token punctuation\">:</span> <span class=\"token string\">\"image-1.jpg\"</span><span class=\"token punctuation\">,</span>\n                modified<span class=\"token punctuation\">:</span> <span class=\"token number\">1556752476267</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">{</span>\n                url<span class=\"token punctuation\">:</span> <span class=\"token string\">\"image-2.jpg\"</span><span class=\"token punctuation\">,</span>\n                modified<span class=\"token punctuation\">:</span> <span class=\"token number\">1556752702168</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        author<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            firstname<span class=\"token punctuation\">:</span> <span class=\"token string\">\"John\"</span><span class=\"token punctuation\">,</span>\n            lastname<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Doe\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// This is the content of your gatsby-config.js</span>\n<span class=\"token comment\">// and what you need to provide as schema:</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n            resolve<span class=\"token punctuation\">:</span> <span class=\"token string\">\"gatsby-source-custom-api\"</span><span class=\"token punctuation\">,</span>\n            options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                url<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                    development<span class=\"token punctuation\">:</span> <span class=\"token string\">\"http://my-local-api.dev\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// on \"gatsby develop\"</span>\n                    production<span class=\"token punctuation\">:</span> <span class=\"token string\">\"https://my-remote-api.com\"</span> <span class=\"token comment\">// on \"gatsby build\"</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                imageKeys<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"images\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                rootKey<span class=\"token punctuation\">:</span> <span class=\"token string\">\"posts\"</span><span class=\"token punctuation\">,</span>\n                schemas<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                    posts<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n                        url: String\n                        images: [images]\n                        author: author\n                    </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n                    images<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n                        url: String\n                        modified: Int\n                    </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n                    author<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n                        firstname: String\n                        lastname: String\n                    </span><span class=\"token template-punctuation string\">`</span></span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"images\"><a href=\"#images\" aria-label=\"images permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Images</h2>\n<p><code class=\"language-text\">Gatsby Source Custom API</code> automatically downloads your image-files, so you can use them with <strong><a href=\"https://www.gatsbyjs.org/packages/gatsby-image/\">Gatsby Image</a></strong>.</p>\n<h4 id=\"how-does-it-recognize-images\"><a href=\"#how-does-it-recognize-images\" aria-label=\"how does it recognize images permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How does it recognize images?</h4>\n<p>The default key for images is <code class=\"language-text\">image</code>. You can also define your own image keys with the option <code class=\"language-text\">imageKeys</code>. Images have to be objects containing a childkey called <code class=\"language-text\">url</code>, which is a string that defines the path to an image file. Gatsby-Images are added as childkey <code class=\"language-text\">local</code>.</p>\n<h4 id=\"what-about-caching\"><a href=\"#what-about-caching\" aria-label=\"what about caching permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What about Caching?</h4>\n<p>If your image object provides a key called <code class=\"language-text\">modified</code>, this key gets cached and compared every time you build or develop. If it stays the same, the already downloaded version of the image-file is used.</p>\n<h2 id=\"transform-nodes-to-pages\"><a href=\"#transform-nodes-to-pages\" aria-label=\"transform nodes to pages permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Transform Nodes to Pages</h2>\n<p>This is an example of how you use the required nodes to automatically generate pages: Insert the following code into the file <code class=\"language-text\">gatsby-node.js</code>. The sample key here is an array called <code class=\"language-text\">posts</code>. All array-elements can be required in GraphQl via <code class=\"language-text\">allPosts</code>. In this example the posts have a child-key called “url”, which defines their path and serves as marker to find them in your matching React-component (<code class=\"language-text\">pages/post.js</code>).</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">createPages</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> graphql<span class=\"token punctuation\">,</span> actions <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createPage <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> actions<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">graphql</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n        {\n            allPosts {\n                nodes {\n                    url\n                }\n            }\n        }\n    </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span>\n        result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>allPosts<span class=\"token punctuation\">.</span>nodes<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token parameter\">node</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">await</span> <span class=\"token function\">createPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n                path<span class=\"token punctuation\">:</span> node<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">,</span>\n                component<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./src/pages/post.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                context<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token comment\">// Data passed to context is available</span>\n                    <span class=\"token comment\">// in page queries as GraphQL variables.</span>\n                    url<span class=\"token punctuation\">:</span> node<span class=\"token punctuation\">.</span>url\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>In your <code class=\"language-text\">pages/post.js</code> you can require the data like so:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> graphql <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"gatsby\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Post</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n    query($url: String) {\n        posts(url: { eq: $url }) {\n            url\n            title\n            image {\n                local {\n                    childImageSharp {\n                        fluid(maxWidth: 2000) {\n                            ...GatsbyImageSharpFluid_withWebp\n                        }\n                    }\n                }\n                alttext\n            }\n        }\n    }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Post<span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"replace-conflicting-keys\"><a href=\"#replace-conflicting-keys\" aria-label=\"replace conflicting keys permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Replace conflicting Keys</h2>\n<p>Some of the returned keys may be transformed, if they conflict with restricted keys used for GraphQL such as the following <code class=\"language-text\">[&#39;id&#39;, &#39;children&#39;, &#39;parent&#39;, &#39;fields&#39;, &#39;internal&#39;]</code>. These conflicting keys will now show up as <code class=\"language-text\">[key]_normalized</code>. (Thanks to <a href=\"https://github.com/thinhle-agilityio/gatsby-source-apiserver\">gatsby-source-apiserver</a>)</p>\n<h2 id=\"contributing\"><a href=\"#contributing\" aria-label=\"contributing permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contributing</h2>\n<p>Every contribution is very much appreciated.\nFeel free to file bugs, feature- and pull-requests.</p>\n<p>❤️ If this plugin is helpful for you, star it on <a href=\"https://github.com/AndreasFaust/gatsby-source-custom-api\">GitHub</a>.</p>",
            "timeToRead": 4
          }
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/packages/gatsby-source-custom-api/",
      "id": "1c6d9fb0-c332-5dd7-9be3-8660040175d9",
      "layout": "plugins"
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsRemotePackagesJs803499274(\n  $slug: String!\n) {\n  markdownRemark(fields: {slug: {eq: $slug}}) {\n    ...MarkdownPageFooter\n  }\n  npmPackage(slug: {eq: $slug}) {\n    name\n    description\n    keywords\n    lastPublisher {\n      name\n      avatar\n    }\n    repository {\n      url\n    }\n    readme {\n      childMarkdownRemark {\n        html\n        timeToRead\n      }\n    }\n  }\n}\n\nfragment MarkdownPageFooter on MarkdownRemark {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}