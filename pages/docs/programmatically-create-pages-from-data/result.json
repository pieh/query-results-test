{
  "path": "/docs/programmatically-create-pages-from-data/",
  "result": {
    "data": {
      "mdx": {
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Creating Pages from Data Programatically\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Gatsby and its ecosystem of plugins provide all kinds of data through a\\nGraphQL interface. This guide will show how that data can be used to\\nprogrammatically create pages.\"), mdx(\"h3\", {\n    \"id\": \"prerequisites\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#prerequisites\",\n    \"aria-label\": \"prerequisites permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Prerequisites\"), mdx(\"p\", null, \"Though you can use any data source you\\u2019d like, this guide will show how to\\ncreate pages from markdown files (following after the example introduced in\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/adding-markdown-pages/\"\n  }), \"earlier guides\"), \").\"), mdx(\"h3\", {\n    \"id\": \"creating-pages\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#creating-pages\",\n    \"aria-label\": \"creating pages permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Creating Pages\"), mdx(\"p\", null, \"The Gatsby Node API provides the\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/node-apis/#createPages\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"createPages\")), \"\\nextension point which we\\u2019ll use to add pages. This function will give us\\naccess to the\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/actions/#createPage\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"createPage\")), \" action\\nwhich is at the core of programmatically creating a page.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js:title=gatsby-node.js\"\n  }), \"exports.createPages = async function({ actions, graphql }) {\\n  const { data } = await graphql(`\\n    query {\\n      allMarkdownRemark {\\n        edges {\\n          node {\\n            fields {\\n              slug\\n            }\\n          }\\n        }\\n      }\\n    }\\n  `)\\n  // highlight-start\\n  data.allMarkdownRemark.edges.forEach(edge => {\\n    const slug = edge.node.fields.slug\\n    actions.createPage({\\n      path: slug,\\n      component: require.resolve(`./src/templates/blog-post.js`),\\n      context: { slug: slug },\\n    })\\n  })\\n  // highlight-end\\n}\\n\")), mdx(\"p\", null, \"For each page we want to create we must specify the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"path\"), \" for visiting that\\npage, the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"component\"), \" template used to render that page, and any \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"context\"), \"\\nwe need in the component for rendering.\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"context\"), \" parameter is \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"optional\"), \", though often times it will include a\\nunique identifier that can be used to query for associated data that will be\\nrendered to the page. All \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"context\"), \" values are made available to a template\\u2019s\\nGraphQL queries as arguments prefaced with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$\"), \", so from our example above the\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"slug\"), \" property will become the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$slug\"), \" argument in our page query:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"export const query = graphql`\\n  query($slug: String!) {\\n    ...\\n  }\\n`\\n\")), mdx(\"h3\", {\n    \"id\": \"specifying-a-template\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#specifying-a-template\",\n    \"aria-label\": \"specifying a template permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Specifying A Template\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"createPage\"), \" action required that we specify the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"component\"), \" template\\nthat will be used to render the page. Here is an example of what the\\nreferenced template could look like:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript:title=blog-post.js\"\n  }), \"import React from \\\"react\\\"\\nimport { graphql } from \\\"gatsby\\\"\\nimport Layout from \\\"../components/layout\\\"\\n\\nexport default ({ data }) => {\\n  const post = data.markdownRemark\\n  return (\\n    <Layout>\\n      <div>\\n        <h1>{post.frontmatter.title}</h1>\\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\\n      </div>\\n    </Layout>\\n  )\\n}\\n\\nexport const query = graphql`\\n  query($slug: String!) {\\n    markdownRemark(fields: { slug: { eq: $slug } }) {\\n      html\\n      frontmatter {\\n        title\\n      }\\n    }\\n  }\\n`\\n\")), mdx(\"p\", null, \"Notice that we\\u2019re able to query with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$slug\"), \" value from our \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"context\"), \" as\\nan argument, which ensures that we\\u2019re returning only the data that matches\\nthat specific page. As a result we can provide the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"title\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"html\"), \" from\\nthe matching \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"markdownRemark\"), \" record to our component. The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"context\"), \" values\\nare also available as the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pageContext\"), \" prop in the template component itself.\"), mdx(\"h3\", {\n    \"id\": \"not-just-markdown\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#not-just-markdown\",\n    \"aria-label\": \"not just markdown permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Not Just Markdown\"), mdx(\"p\", null, \"The\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/packages/gatsby-transformer-remark/\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"gatsby-transformer-remark\")), \"\\nplugin is just one of a multitude of Gatsby plugins that can provide data\\nthrough the GraphQL interface. Any of that data can be used to\\nprogrammatically create pages.\"), mdx(\"h3\", {\n    \"id\": \"other-resources\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#other-resources\",\n    \"aria-label\": \"other resources permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Other Resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/jbranchaud/gatsby-programmatic-pages\"\n  }), \"Example Repository\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/docs/using-gatsby-without-graphql/\"\n  }), \"Using Gatsby without GraphQL\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://codesandbox.io/s/b84oz\"\n  }), \"CodeSandbox example creating pages from 3rd party data\"))));\n}\n;\nMDXContent.isMDXComponent = true;",
        "excerpt": "Gatsby and its ecosystem of plugins provide all kinds of data through a\nGraphQL interface. This guide will show how that data can be used to…",
        "timeToRead": 1,
        "tableOfContents": {
          "items": [
            {
              "url": "#prerequisites",
              "title": "Prerequisites"
            },
            {
              "url": "#creating-pages",
              "title": "Creating Pages"
            },
            {
              "url": "#specifying-a-template",
              "title": "Specifying A Template"
            },
            {
              "url": "#not-just-markdown",
              "title": "Not Just Markdown"
            },
            {
              "url": "#other-resources",
              "title": "Other Resources"
            }
          ]
        },
        "fields": {
          "slug": "/docs/programmatically-create-pages-from-data/",
          "anchor": "programmatically-create-pages-from-data"
        },
        "frontmatter": {
          "title": "Creating Pages from Data Programatically",
          "overview": null,
          "issue": null,
          "disableTableOfContents": null,
          "tableOfContentsDepth": null
        },
        "parent": {
          "__typename": "File",
          "relativePath": "docs/programmatically-create-pages-from-data.md"
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/docs/programmatically-create-pages-from-data/",
      "prev": {
        "title": "Creating Slugs for Pages",
        "link": "/docs/creating-slugs-for-pages/"
      },
      "next": {
        "title": "Using Third-Party GraphQL APIs",
        "link": "/docs/third-party-graphql/"
      }
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsMarkdownJs2546709735(\n  $path: String!\n) {\n  mdx(fields: {slug: {eq: $path}}) {\n    body\n    excerpt\n    timeToRead\n    tableOfContents\n    fields {\n      slug\n      anchor\n    }\n    frontmatter {\n      title\n      overview\n      issue\n      disableTableOfContents\n      tableOfContentsDepth\n    }\n    ...MarkdownPageFooterMdx\n  }\n}\n\nfragment MarkdownPageFooterMdx on Mdx {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}