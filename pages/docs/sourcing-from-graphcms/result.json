{
  "path": "/docs/sourcing-from-graphcms/",
  "result": {
    "data": {
      "mdx": {
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Sourcing from GraphCMS\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"headless-the-graphcms-way\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#headless-the-graphcms-way\",\n    \"aria-label\": \"headless the graphcms way permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Headless the GraphCMS way\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://graphcms.com?ref=%22gatsby-headless-docs-top%22\"\n  }), \"GraphCMS\"), \" is a headless CMS that is optimized for working with GraphQL. Content structures like posts, authors, products and more are broken down into content types called \\u201Cmodels.\\u201D These models can then be queried with the familiar GraphQL syntax.\"), mdx(\"p\", null, \"One of the benefits of GraphCMS when working with Gatsby is that we support GraphQL natively which allows you to test your content queries before even starting your Gatsby project.\"), mdx(\"h2\", {\n    \"id\": \"getting-started\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#getting-started\",\n    \"aria-label\": \"getting started permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Getting Started\"), mdx(\"p\", null, \"In this guide we\\u2019ll walk you through creating a complete project capable of querying data from GraphCMS.\"), mdx(\"h3\", {\n    \"id\": \"install-the-boilerplate\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#install-the-boilerplate\",\n    \"aria-label\": \"install the boilerplate permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Install the Boilerplate\"), mdx(\"p\", null, \"To begin, let\\u2019s create a Gatsby starter site.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"gatsby new gatsby-site https://github.com/gatsbyjs/gatsby-starter-default\\n\")), mdx(\"p\", null, \"Navigate inside of the project with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cd gatsby-site\"), \".\"), mdx(\"h3\", {\n    \"id\": \"add-the-source-plugin\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#add-the-source-plugin\",\n    \"aria-label\": \"add the source plugin permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Add the Source Plugin\"), mdx(\"p\", null, \"Additionally, you need the the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-source-graphql\"), \" library. Because GraphCMS uses GraphQL natively, we will take advantage of Gatsby\\u2019s ability to simply stitch two GraphQL APIs together, reducing the time required to transform content. There is no need to use a special gatsby-source-x-cms plugin, the GraphQL source plugin is all you need.\"), mdx(\"p\", null, \"You can install this component with:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"  # Optionally with `npm install`\\n  npm install --save gatsby-source-graphql\\n\")), mdx(\"h3\", {\n    \"id\": \"configure-the-plugin\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#configure-the-plugin\",\n    \"aria-label\": \"configure the plugin permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Configure the Plugin\"), mdx(\"p\", null, \"The last step required before you can query your data is to configure the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-source-graphql\"), \" plugin. Open \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config.js\"), \" and add the following object to the plugins array. This example uses an open API from GraphCMS but you will most likely want to replace this with your own API and provide a fieldName that makes the most sense to your project. \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.graphcms.com/developers/api\"\n  }), \"Here\\u2019s more information on working with GraphCMS APIs.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"{\\n    resolve: \\\"gatsby-source-graphql\\\",\\n        options: {\\n        // The top level query type, can be anything you want!\\n        typeName: \\\"GCMS\\\",\\n        // The field you'll query against, can also be anything you want.\\n        fieldName: \\\"gcms\\\",\\n        // Your API endpoint, available from the dashboard and settings window.\\n        // You can use this endpoint that features US mountains for now.\\n        url: \\\"https://api-euwest.graphcms.com/v1/cjm7tab4c04ro019omujh708u/master\\\",\\n    },\\n},\\n\")), mdx(\"p\", null, \"If everything works correctly, you should now have your GraphCMS data added to the Gatsby source API!\"), mdx(\"h3\", {\n    \"id\": \"querying-for-content\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#querying-for-content\",\n    \"aria-label\": \"querying for content permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Querying for Content\"), mdx(\"p\", null, \"From the root of your project, run the development environment with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm run development\"), \". Once the server has started and is error free, you should be able to open the following URL in your browser:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://localhost:8000/___graphql\")), mdx(\"p\", null, \"This will show you an interface where you can test your new content API.\"), mdx(\"p\", null, \"Try running this query:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"query {\\n    gcms {\\n        mountains {\\n            title\\n            elevation\\n            image {\\n                url\\n            }\\n        }\\n    }\\n}\\n\")), mdx(\"p\", null, \"Again, if everything is working properly, you should see a successful response in the shape of:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n  \\\"data\\\": {\\n    \\\"gcms\\\": {\\n      \\\"mountains\\\": [\\n        {\\n          \\\"title\\\": \\\"Denali\\\",\\n          \\\"elevation\\\": 6190,\\n          \\\"image\\\": {\\n            \\\"url\\\": \\\"https://media.graphcms.com//J0rGKdjuSwCk7QrFxVDQ\\\"\\n          }\\n        },\\n        {\\n          \\\"title\\\": \\\"Mount Elbert\\\",\\n          \\\"elevation\\\": 4401,\\n          \\\"image\\\": {\\n            \\\"url\\\": \\\"https://media.graphcms.com//JNonajrqT6SOyUKgC4L2\\\"\\n          }\\n        }\\n        // ...more results\\n      ]\\n    }\\n  }\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"getting-content-on-the-page\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#getting-content-on-the-page\",\n    \"aria-label\": \"getting content on the page permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Getting Content on the Page\"), mdx(\"p\", null, \"For the purpose of this tutorial I\\u2019ve removed all the layout, SEO, link or other components that comprise a page in the Gatsby starter. The components are still there and 99% of users will likely want to put them back in once they understand what\\u2019s happening in the code. You are just looking at the nails for right now, but the hammers, saws and other tools are still in the toolbox. Open the index file located at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/pages/index.js\"), \" and replace the content with this code:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from \\\"react\\\"\\nimport { StaticQuery } from \\\"gatsby\\\"\\n\\nconst IndexPage = () => (\\n  <StaticQuery\\n    query={graphql`\\n      query {\\n        gcms {\\n          mountains {\\n            title\\n            elevation\\n          }\\n        }\\n      }\\n    `}\\n    render={data => (\\n      <div>\\n        <h1>USA Mountains</h1>\\n        <ul>\\n          {data.gcms.mountains.map(mountain => {\\n            const { title, elevation } = mountain\\n            return (\\n              <li>\\n                <strong>{title}:</strong>\\n                {elevation}\\n              </li>\\n            )\\n          })}\\n        </ul>\\n      </div>\\n    )}\\n  />\\n)\\n\\nexport default IndexPage\\n\")), mdx(\"p\", null, \"With this code, you have:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Added the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"StaticQuery\"), \" component to a page that allows you to fetch content from the GraphQL API.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Fetched some simplified data from the Mountain API, namely the title and elevation.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Rendered the list in the StaticQuery\\u2019s RenderProp called \\u201Crender\\u201D.\")), mdx(\"h2\", {\n    \"id\": \"summary\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#summary\",\n    \"aria-label\": \"summary permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Summary\"), mdx(\"p\", null, \"Hopefully you\\u2019ve seen how easy it is to start working with GraphCMS and Gatsby. With projects of all sizes gravitating towards the benefits of the JAM stack, the time has never been better to learn how to work with Gatsby. Adding a content API in the back-end with GraphCMS provides a scalable CMS that you can start using within minutes and keep using for the life of your project.\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://graphcms.com?ref=%22gatsby-headless-docs-bottom%22\"\n  }), \"Check out GraphCMS today and build \\u201Cfast websites\\u201D, fast!\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "excerpt": "Headless the GraphCMS way GraphCMS  is a headless CMS that is optimized for working with GraphQL. Content structures like posts, authors…",
        "timeToRead": 2,
        "tableOfContents": {
          "items": [
            {
              "url": "#headless-the-graphcms-way",
              "title": "Headless the GraphCMS way"
            },
            {
              "url": "#getting-started",
              "title": "Getting Started",
              "items": [
                {
                  "url": "#install-the-boilerplate",
                  "title": "Install the Boilerplate"
                },
                {
                  "url": "#add-the-source-plugin",
                  "title": "Add the Source Plugin"
                },
                {
                  "url": "#configure-the-plugin",
                  "title": "Configure the Plugin"
                },
                {
                  "url": "#querying-for-content",
                  "title": "Querying for Content"
                },
                {
                  "url": "#getting-content-on-the-page",
                  "title": "Getting Content on the Page"
                }
              ]
            },
            {
              "url": "#summary",
              "title": "Summary"
            }
          ]
        },
        "fields": {
          "slug": "/docs/sourcing-from-graphcms/",
          "anchor": "sourcing-from-graphcms"
        },
        "frontmatter": {
          "title": "Sourcing from GraphCMS",
          "overview": null,
          "issue": null,
          "disableTableOfContents": null,
          "tableOfContentsDepth": null
        },
        "parent": {
          "__typename": "File",
          "relativePath": "docs/sourcing-from-graphcms.md"
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/docs/sourcing-from-graphcms/"
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsMarkdownJs2546709735(\n  $path: String!\n) {\n  mdx(fields: {slug: {eq: $path}}) {\n    body\n    excerpt\n    timeToRead\n    tableOfContents\n    fields {\n      slug\n      anchor\n    }\n    frontmatter {\n      title\n      overview\n      issue\n      disableTableOfContents\n      tableOfContentsDepth\n    }\n    ...MarkdownPageFooterMdx\n  }\n}\n\nfragment MarkdownPageFooterMdx on Mdx {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}