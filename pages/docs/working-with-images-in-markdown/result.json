{
  "path": "/docs/working-with-images-in-markdown/",
  "result": {
    "data": {
      "mdx": {
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Working With Images in Markdown Posts and Pages\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"When building Gatsby sites composed primarily of Markdown pages or posts, insertion of images can enhance the content. Adding images can be done in multiple ways.\"), mdx(\"h2\", {\n    \"id\": \"featured-images-with-frontmatter-metadata\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#featured-images-with-frontmatter-metadata\",\n    \"aria-label\": \"featured images with frontmatter metadata permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Featured images with Frontmatter metadata\"), mdx(\"p\", null, \"In sites like a blog, you may want to include a featured image that appears at the top of a page. One way to do this is to grab the image filename from a frontmatter field and then transforming it with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-plugin-sharp\"), \" in a GraphQL query.\"), mdx(\"p\", null, \"This solution assumes you already have programmatically generated pages from Markdown with renderers like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-transformer-remark\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-plugin-mdx\"), \". If not, take a read through up to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/tutorial/part-seven/\"\n  }), \"Part 7 of the Gatsby Tutorial\"), \". This will build upon the tutorial and as such, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-transformer-remark\"), \" will be used for this example.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Note: This can be done similarly using \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/mdx/\"\n  }), \"MDX\"), \" as well. Instead of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"markdownRemark\"), \" nodes in GraphQL, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Mdx\"), \" can be swapped in and should work.\")), mdx(\"p\", null, \"To start out, download the plugins for Gatsby-image as mentioned in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/using-gatsby-image/\"\n  }), \"Using gatsby-image\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"npm install --save gatsby-image gatsby-transformer-sharp gatsby-plugin-sharp\\n\")), mdx(\"p\", null, \"You will also want to have \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-source-filesystem\"), \" installed. Then, configure the various plugins in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config\"), \" file.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js:title=gatsby-config.js\"\n  }), \"module.exports = {\\n  plugins: [\\n    `gatsby-plugin-sharp`,\\n    `gatsby-transformer-sharp`,\\n    `gatsby-transformer-remark`,\\n    {\\n      resolve: `gatsby-source-filesystem`,\\n      options: {\\n        path: `${__dirname}/src/pages`,\\n      },\\n    },\\n  ],\\n}\\n\")), mdx(\"p\", null, \"Then, in an example markdown file, add a field called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"featuredImage\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-md:title=src/pages/example-post.md\"\n  }), \"---\\ntitle: My Amazing Post\\nfeaturedImage: ./awesome-image.png\\n---\\n\\nContent goes here!\\n\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"featuredImage\"), \" field should include the relative path to an image you want to use.\"), mdx(\"p\", null, \"You can now query for the featured image in GraphQL. If the filepath points to an actual image, it will be transformed into a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"File\"), \" node in GraphQL and then you can get the image data out of it by using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"childImageSharp\"), \" field.\"), mdx(\"p\", null, \"This can be added to the GraphQL query in a Markdown template file. In this example, a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/gatsby-image#images-that-stretch-across-a-fluid-container\"\n  }), \"Fluid query\"), \" is used to make a responsive image.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx:title=src/templates/blog-post.js\"\n  }), \"export const query = graphql`\\n  query PostQuery($slug: String!) {\\n    markdownRemark(fields: { slug: { eq: $slug } }) {\\n      html\\n      frontmatter {\\n        title\\n        // highlight-start\\n        featuredImage {\\n          childImageSharp {\\n            fluid(maxWidth: 800) {\\n              ...GatsbyImageSharpFluid\\n            }\\n          }\\n        }\\n        // highlight-end\\n      }\\n    }\\n  }\\n`\\n\")), mdx(\"p\", null, \"Also in the Markdown post template, import the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-image\"), \" package and pass the results of the graphQL query into an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Img />\"), \" component.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx:title=src/templates/blog-post.js\"\n  }), \"import React from \\\"react\\\"\\nimport { graphql } from \\\"gatsby\\\"\\nimport Layout from \\\"../components/layout\\\"\\n// highlight-start\\nimport Img from \\\"gatsby-image\\\"\\n// highlight-end\\n\\nexport default ({ data }) => {\\n  let post = data.markdownRemark\\n\\n  // highlight-start\\n  let featuredImgFluid = post.frontmatter.featuredImage.childImageSharp.fluid\\n  // highlight-end\\n\\n  return (\\n    <Layout>\\n      <div>\\n        <h1>{post.frontmatter.title}</h1>\\n        // highlight-start\\n        <Img fluid={featuredImgFluid} />\\n        // highlight-end\\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\\n      </div>\\n    </Layout>\\n  )\\n}\\n\\nexport const query = graphql`\\n  query PostQuery($slug: String!) {\\n    markdownRemark(fields: { slug: { eq: $slug } }) {\\n      html\\n      frontmatter {\\n        title\\n        featuredImage {\\n          childImageSharp {\\n            fluid(maxWidth: 800) {\\n              ...GatsbyImageSharpFluid\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n`\\n\")), mdx(\"p\", null, \"Your featured image should now appear on the generated page right below the main header. Tada!\"), mdx(\"h2\", {\n    \"id\": \"inline-images-with-gatsby-remark-images\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#inline-images-with-gatsby-remark-images\",\n    \"aria-label\": \"inline images with gatsby remark images permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Inline images with \", mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"gatsby-remark-images\")), mdx(\"p\", null, \"Images also may be included in the Markdown body itself. The plugin \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/packages/gatsby-remark-images\"\n  }), \"gatsby-remark-images\"), \" comes in handy for this.\"), mdx(\"p\", null, \"Start out by installing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-remark-images\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-plugin-sharp\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"npm install --save gatsby-remark-images gatsby-plugin-sharp\\n\")), mdx(\"p\", null, \"Also make sure that \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-source-filesystem\"), \" is installed and points at the directory where your images are located.\"), mdx(\"p\", null, \"Configure the plugins in your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config\"), \" file. As with the previous example, either \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Remark\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MDX\"), \" can be used; \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-plugin-mdx\"), \" will be used in this case. Put the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-remark-images\"), \" plugin within the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsbyRemarkPlugins\"), \" option field of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-plugin-mdx\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js:title=gatsby-config.js\"\n  }), \"module.exports = {\\n  plugins: [\\n    `gatsby-plugin-sharp`,\\n    {\\n      resolve: `gatsby-plugin-mdx`,\\n      options: {\\n        gatsbyRemarkPlugins: [\\n          {\\n            resolve: `gatsby-remark-images`,\\n            options: {\\n              maxWidth: 1200,\\n            },\\n          },\\n        ],\\n      },\\n    },\\n    {\\n      resolve: `gatsby-source-filesystem`,\\n      options: {\\n        path: `${__dirname}/src/pages`,\\n      },\\n    },\\n  ],\\n}\\n\")), mdx(\"p\", null, \"With this configuration, you can use the default Markdown syntax for images. They will be processed by Sharp and appear as if you placed them in a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-image\"), \" component.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-md\"\n  }), \"![Awesome image](./my-awesome-image.png)\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "excerpt": "When building Gatsby sites composed primarily of Markdown pages or posts, insertion of images can enhance the content. Adding images can be…",
        "timeToRead": 2,
        "tableOfContents": {
          "items": [
            {
              "url": "#featured-images-with-frontmatter-metadata",
              "title": "Featured images with Frontmatter metadata"
            },
            {
              "url": "#inline-images-with-gatsby-remark-images",
              "title": "Inline images with gatsby-remark-images"
            }
          ]
        },
        "fields": {
          "slug": "/docs/working-with-images-in-markdown/",
          "anchor": "working-with-images-in-markdown"
        },
        "frontmatter": {
          "title": "Working With Images in Markdown Posts and Pages",
          "overview": null,
          "issue": null,
          "disableTableOfContents": null,
          "tableOfContentsDepth": null
        },
        "parent": {
          "__typename": "File",
          "relativePath": "docs/working-with-images-in-markdown.md"
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/docs/working-with-images-in-markdown/",
      "prev": {
        "title": "Working with GIFs",
        "link": "/docs/working-with-gifs/"
      },
      "next": {
        "title": "Sourcing Content and Data",
        "link": "/docs/content-and-data/"
      }
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsMarkdownJs2546709735(\n  $path: String!\n) {\n  mdx(fields: {slug: {eq: $path}}) {\n    body\n    excerpt\n    timeToRead\n    tableOfContents\n    fields {\n      slug\n      anchor\n    }\n    frontmatter {\n      title\n      overview\n      issue\n      disableTableOfContents\n      tableOfContentsDepth\n    }\n    ...MarkdownPageFooterMdx\n  }\n}\n\nfragment MarkdownPageFooterMdx on Mdx {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}