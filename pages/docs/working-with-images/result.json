{
  "path": "/docs/working-with-images/",
  "result": {
    "data": {
      "mdx": {
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Working With Images In Gatsby\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Optimizing images is a challenge on any website. To utilize best practices for performance across devices, you need multiple sizes and resolutions of each image. Luckily, Gatsby has several useful \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/plugins/\"\n  }), \"plugins\"), \" that work together to do that for images on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/building-with-components/#page-components\"\n  }), \"page components\"), \".\"), mdx(\"p\", null, \"The recommended approach is to use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/querying-with-graphql/\"\n  }), \"GraphQL queries\"), \" to get images of the optimal size or resolution, then, display them with the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/packages/gatsby-image/\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"gatsby-image\")), \" component.\"), mdx(\"h2\", {\n    \"id\": \"query-images-with-graphql\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#query-images-with-graphql\",\n    \"aria-label\": \"query images with graphql permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Query Images With GraphQL\"), mdx(\"p\", null, \"Querying images with GraphQL allows you to access the image\\u2019s data as well as perform transformations with \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/lovell/sharp\"\n  }), \"Sharp\"), \", a high-performance image processing library.\"), mdx(\"p\", null, \"You\\u2019ll need a few plugins for this:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/packages/gatsby-source-filesystem/\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"gatsby-source-filesystem\")), \" plugin allows you to \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/docs/querying-with-graphql/#images\"\n  }), \"query files with GraphQL\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/packages/gatsby-plugin-sharp\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"gatsby-plugin-sharp\")), \" powers the connections between Sharp and Gatsby Plugins\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/packages/gatsby-transformer-sharp/\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"gatsby-transformer-sharp\")), \" allows you to create multiples images of the right sizes and resolutions with a query\")), mdx(\"p\", null, \"If the final image is of a fixed size, optimization relies on having multiple resolutions of the image. If it is responsive, that is it stretches to fill a container or page, optimization relies on having different sizes of the same image. See the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/packages/gatsby-image/#two-types-of-responsive-images\"\n  }), \"Gatsby Image documentation for more information\"), \".\"), mdx(\"p\", null, \"You can also use arguments in your query to specify exact, minimum, and maximum dimensions. See the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/packages/gatsby-image/#two-types-of-responsive-images\"\n  }), \"Gatsby Image documentation for complete options\"), \".\"), mdx(\"p\", null, \"This example is for an image gallery where images stretch when the page is resized. It uses the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fluid\"), \" method and the fluid fragment to grab the right data to use in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-image\"), \" component and arguments to set the maximum width as 400px and maximum height as 250px.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"export const query = graphql`\\n  query {\\n    fileName: file(relativePath: { eq: \\\"images/myimage.jpg\\\" }) {\\n      childImageSharp {\\n        fluid(maxWidth: 400, maxHeight: 250) {\\n          ...GatsbyImageSharpFluid\\n        }\\n      }\\n    }\\n  }\\n`\\n\")), mdx(\"h2\", {\n    \"id\": \"optimizing-images-with-gatsby-image\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#optimizing-images-with-gatsby-image\",\n    \"aria-label\": \"optimizing images with gatsby image permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Optimizing Images With Gatsby Image\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/packages/gatsby-image/\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"gatsby-image\")), \" is a plugin that automatically creates React components for optimized images that:\"), mdx(\"blockquote\", null, mdx(\"ul\", {\n    parentName: \"blockquote\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Loads the optimal size of image for each device size and screen resolution\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Holds the image position while loading so your page doesn\\u2019t jump around as images load\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Uses the \\u201Cblur-up\\u201D effect i.e. it loads a tiny version of the image to show while the full image is loading\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Alternatively provides a \\u201Ctraced placeholder\\u201D SVG of the image\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lazy loads images, which reduces bandwidth and speeds the initial load time\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Uses \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://developers.google.com/speed/webp/\"\n  }), \"WebP\"), \" images, if browser supports the format\"))), mdx(\"p\", null, \"Here is an image component that uses the query from the previous example:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Img fluid={data.fileName.childImageSharp.fluid} alt=\\\"\\\" />\\n\")), mdx(\"h2\", {\n    \"id\": \"using-fragments-to-standardize-formatting\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#using-fragments-to-standardize-formatting\",\n    \"aria-label\": \"using fragments to standardize formatting permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Using Fragments To Standardize Formatting\"), mdx(\"p\", null, \"What if you have a bunch of images and you want them all to use the same formatting?\"), mdx(\"p\", null, \"A custom fragment is an easy way to standardize formatting and re-use it on multiple images:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"export const squareImage = graphql`\\n  fragment squareImage on File {\\n    childImageSharp {\\n      fluid(maxWidth: 200, maxHeight: 200) {\\n        ...GatsbyImageSharpFluid\\n      }\\n    }\\n  }\\n`\\n\")), mdx(\"p\", null, \"The fragment can then be referenced in the image query:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"export const query = graphql`\\n  query {\\n    image1: file(relativePath: { eq: \\\"images/image1.jpg\\\" }) {\\n      ...squareImage\\n    }\\n\\n    image2: file(relativePath: { eq: \\\"images/image2.jpg\\\" }) {\\n      ...squareImage\\n    }\\n\\n    image3: file(relativePath: { eq: \\\"images/image3.jpg\\\" }) {\\n      ...squareImage\\n    }\\n  }\\n`\\n\")), mdx(\"h3\", {\n    \"id\": \"additional-resources\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#additional-resources\",\n    \"aria-label\": \"additional resources permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Additional resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/docs/gatsby-image/\"\n  }), \"Gatsby Image API docs\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/packages/gatsby-image/\"\n  }), \"gatsby-image plugin README file\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/packages/gatsby-plugin-sharp/\"\n  }), \"gatsby-plugin-sharp README file\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/packages/gatsby-transformer-sharp/\"\n  }), \"gatsby-transformer-sharp README file\"))));\n}\n;\nMDXContent.isMDXComponent = true;",
        "excerpt": "Optimizing images is a challenge on any website. To utilize best practices for performance across devices, you need multiple sizes and…",
        "timeToRead": 2,
        "tableOfContents": {
          "items": [
            {
              "url": "#query-images-with-graphql",
              "title": "Query Images With GraphQL"
            },
            {
              "url": "#optimizing-images-with-gatsby-image",
              "title": "Optimizing Images With Gatsby Image"
            },
            {
              "url": "#using-fragments-to-standardize-formatting",
              "title": "Using Fragments To Standardize Formatting",
              "items": [
                {
                  "url": "#additional-resources",
                  "title": "Additional resources"
                }
              ]
            }
          ]
        },
        "fields": {
          "slug": "/docs/working-with-images/",
          "anchor": "working-with-images"
        },
        "frontmatter": {
          "title": "Working With Images In Gatsby",
          "overview": null,
          "issue": null,
          "disableTableOfContents": null,
          "tableOfContentsDepth": null
        },
        "parent": {
          "__typename": "File",
          "relativePath": "docs/working-with-images.md"
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/docs/working-with-images/",
      "prev": {
        "title": "Using gatsby-image",
        "link": "/docs/using-gatsby-image/"
      },
      "next": {
        "title": "Preoptimizing your Images",
        "link": "/docs/preoptimizing-images/"
      }
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsMarkdownJs2546709735(\n  $path: String!\n) {\n  mdx(fields: {slug: {eq: $path}}) {\n    body\n    excerpt\n    timeToRead\n    tableOfContents\n    fields {\n      slug\n      anchor\n    }\n    frontmatter {\n      title\n      overview\n      issue\n      disableTableOfContents\n      tableOfContentsDepth\n    }\n    ...MarkdownPageFooterMdx\n  }\n}\n\nfragment MarkdownPageFooterMdx on Mdx {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}