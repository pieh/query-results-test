{
  "path": "/docs/styled-components/",
  "result": {
    "data": {
      "mdx": {
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Styled Components\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar EggheadEmbed = makeShortcode(\"EggheadEmbed\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In this guide, you will learn setting up a site with the CSS-in-JS library \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.styled-components.com/\"\n  }), \"Styled Components\"), \".\"), mdx(\"p\", null, \"Styled Components lets you use actual CSS syntax inside your components. Styled Components is a variant on \\u201CCSS-in-JS\\u201D\\u2014which solves many of the problems with traditional CSS.\"), mdx(\"p\", null, \"One of the most important problems they solve is selector name collisions. With traditional CSS, you have to be careful not to overwrite CSS selectors used elsewhere in a site because all CSS selectors live in the same global namespace. This unfortunate restriction can lead to elaborate (and often confusing) selector naming schemes.\"), mdx(\"p\", null, \"With CSS-in-JS, you avoid all that as CSS selectors are scoped automatically to their component. Styles are tightly coupled with their components. This makes it much easier to know how to edit a component\\u2019s CSS as there\\u2019s never any confusion about how and where CSS is being used.\"), mdx(EggheadEmbed, {\n    lessonLink: \"https://egghead.io/lessons/gatsby-style-gatsby-sites-with-styled-components\",\n    lessonTitle: \"Style Gatsby sites with styled-components\",\n    mdxType: \"EggheadEmbed\"\n  }), mdx(\"p\", null, \"First, open a new terminal window and run the following to create a new site:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"gatsby new styled-components-tutorial https://github.com/gatsbyjs/gatsby-starter-hello-world\\ncd styled-components-tutorial\\n\")), mdx(\"p\", null, \"Second, install the necessary dependencies for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"styled-components\"), \", including the Gatsby plugin.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"npm install --save gatsby-plugin-styled-components styled-components babel-plugin-styled-components\\n\")), mdx(\"p\", null, \"And then add it to your site\\u2019s \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config.js\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript:title=gatsby-config.js\"\n  }), \"module.exports = {\\n  plugins: [`gatsby-plugin-styled-components`],\\n}\\n\")), mdx(\"p\", null, \"Then in your terminal run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby develop\"), \" to start the Gatsby development server.\"), mdx(\"p\", null, \"Now let\\u2019s create a sample Styled Components page at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/pages/index.js\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx:title=src/pages/index.js\"\n  }), \"import React from \\\"react\\\"\\nimport styled from \\\"styled-components\\\"\\n\\nconst Container = styled.div`\\n  margin: 3rem auto;\\n  max-width: 600px;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n`\\n\\nconst UserWrapper = styled.div`\\n  display: flex;\\n  align-items: center;\\n  margin: 0 auto 12px auto;\\n  &:last-child {\\n    margin-bottom: 0;\\n  }\\n`\\n\\nconst Avatar = styled.img`\\n  flex: 0 0 96px;\\n  width: 96px;\\n  height: 96px;\\n  margin: 0;\\n`\\n\\nconst Description = styled.div`\\n  flex: 1;\\n  margin-left: 18px;\\n  padding: 12px;\\n`\\n\\nconst Username = styled.h2`\\n  margin: 0 0 12px 0;\\n  padding: 0;\\n`\\n\\nconst Excerpt = styled.p`\\n  margin: 0;\\n`\\n\\nconst User = props => (\\n  <UserWrapper>\\n    <Avatar src={props.avatar} alt=\\\"\\\" />\\n    <Description>\\n      <Username>{props.username}</Username>\\n      <Excerpt>{props.excerpt}</Excerpt>\\n    </Description>\\n  </UserWrapper>\\n)\\n\\nexport default () => (\\n  <Container>\\n    <h1>About Styled Components</h1>\\n    <p>Styled Components is cool</p>\\n    <User\\n      username=\\\"Jane Doe\\\"\\n      avatar=\\\"https://s3.amazonaws.com/uifaces/faces/twitter/adellecharles/128.jpg\\\"\\n      excerpt=\\\"I'm Jane Doe. Lorem ipsum dolor sit amet, consectetur adipisicing elit.\\\"\\n    />\\n    <User\\n      username=\\\"Bob Smith\\\"\\n      avatar=\\\"https://s3.amazonaws.com/uifaces/faces/twitter/vladarbatov/128.jpg\\\"\\n      excerpt=\\\"I'm Bob smith, a vertically aligned type of guy. Lorem ipsum dolor sit amet, consectetur adipisicing elit.\\\"\\n    />\\n  </Container>\\n)\\n\")), mdx(\"h3\", {\n    \"id\": \"enabling-user-stylesheets-with-a-stable-class-name\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#enabling-user-stylesheets-with-a-stable-class-name\",\n    \"aria-label\": \"enabling user stylesheets with a stable class name permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Enabling user stylesheets with a stable class name\"), mdx(\"p\", null, \"Adding a persistent CSS \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"className\"), \" to your styled components can make it easier for users to take advantage of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.viget.com/articles/inline-styles-user-style-sheets-and-accessibility/\"\n  }), \"User Stylesheets\"), \" for accessibility.\"), mdx(\"p\", null, \"Here\\u2019s an example where the class name \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"container\"), \" is added to the DOM along with the Styled Components\\u2019 dynamically-created class names:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx:title=src/components/container.js\"\n  }), \"import React from \\\"react\\\"\\nimport styled from \\\"styled-components\\\"\\n\\nconst Section = styled.section`\\n  margin: 3rem auto;\\n  max-width: 600px;\\n`\\n\\nexport default ({ children }) => (\\n  <Section className={`container`}>{children}</Section>\\n)\\n\")), mdx(\"p\", null, \"A site user could then write their own CSS styles matching HTML elements with a class name of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".container\"), \", and it wouldn\\u2019t be affected if the CSS-in-JS output changed.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "excerpt": "In this guide, you will learn setting up a site with the CSS-in-JS library  Styled Components . Styled Components lets you use actual CSSâ€¦",
        "timeToRead": 1,
        "tableOfContents": {
          "items": [
            {
              "url": "#enabling-user-stylesheets-with-a-stable-class-name",
              "title": "Enabling user stylesheets with a stable class name"
            }
          ]
        },
        "fields": {
          "slug": "/docs/styled-components/",
          "anchor": "styled-components"
        },
        "frontmatter": {
          "title": "Styled Components",
          "overview": null,
          "issue": null,
          "disableTableOfContents": null,
          "tableOfContentsDepth": null
        },
        "parent": {
          "__typename": "File",
          "relativePath": "docs/styled-components.md"
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/docs/styled-components/",
      "prev": {
        "title": "Emotion",
        "link": "/docs/emotion/"
      },
      "next": {
        "title": "CSS Libraries and Frameworks",
        "link": "/docs/css-libraries-and-frameworks/"
      }
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsMarkdownJs2546709735(\n  $path: String!\n) {\n  mdx(fields: {slug: {eq: $path}}) {\n    body\n    excerpt\n    timeToRead\n    tableOfContents\n    fields {\n      slug\n      anchor\n    }\n    frontmatter {\n      title\n      overview\n      issue\n      disableTableOfContents\n      tableOfContentsDepth\n    }\n    ...MarkdownPageFooterMdx\n  }\n}\n\nfragment MarkdownPageFooterMdx on Mdx {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}