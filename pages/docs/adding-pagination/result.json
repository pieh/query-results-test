{
  "path": "/docs/adding-pagination/",
  "result": {
    "data": {
      "mdx": {
        "body": "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Adding pagination\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A page displaying a list of content gets longer as the amount of content grows.\\nPagination is the technique of spreading that content across multiple pages.\"), mdx(\"p\", null, \"The goal of pagination is to create multiple pages (from a single \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/building-with-components/#page-template-components\"\n  }), \"template\"), \") that show a limited number of items.\"), mdx(\"p\", null, \"Each page will \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/querying-with-graphql/\"\n  }), \"query GraphQL\"), \" for those specific items.\"), mdx(\"p\", null, \"The information needed to query for those specific items (i.e. values for \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/graphql-reference/#limit\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"limit\")), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/graphql-reference/#skip\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"skip\")), \") will come from the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/graphql-reference/#query-variables\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"context\")), \" that is added when \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/creating-and-modifying-pages/#creating-pages-in-gatsby-nodejs\"\n  }), \"creating pages\"), \" in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-node\"), \".\"), mdx(\"h3\", {\n    \"id\": \"example\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#example\",\n    \"aria-label\": \"example permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Example\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js:title=src/templates/blog-list-template.js\"\n  }), \"import React from \\\"react\\\"\\nimport { graphql } from \\\"gatsby\\\"\\nimport Layout from \\\"../components/layout\\\"\\n\\nexport default class BlogList extends React.Component {\\n  render() {\\n    const posts = this.props.data.allMarkdownRemark.edges\\n    return (\\n      <Layout>\\n        {posts.map(({ node }) => {\\n          const title = node.frontmatter.title || node.fields.slug\\n          return <div key={node.fields.slug}>{title}</div>\\n        })}\\n      </Layout>\\n    )\\n  }\\n}\\n\\nexport const blogListQuery = graphql`\\n// highlight-start\\n  query blogListQuery($skip: Int!, $limit: Int!) {\\n    allMarkdownRemark(\\n      sort: { fields: [frontmatter___date], order: DESC }\\n      limit: $limit\\n      skip: $skip\\n    ) {\\n// highlight-end\\n      edges {\\n        node {\\n          fields {\\n            slug\\n          }\\n          frontmatter {\\n            title\\n          }\\n        }\\n      }\\n    }\\n  }\\n`\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js:title=gatsby-node.js\"\n  }), \"const path = require(\\\"path\\\")\\nconst { createFilePath } = require(\\\"gatsby-source-filesystem\\\")\\n\\nexports.createPages = async ({ graphql, actions, reporter }) => {\\n  const { createPage } = actions\\n\\n  const result = await graphql(\\n    `\\n      {\\n        allMarkdownRemark(\\n          sort: { fields: [frontmatter___date], order: DESC }\\n          limit: 1000\\n        ) {\\n          edges {\\n            node {\\n              fields {\\n                slug\\n              }\\n            }\\n          }\\n        }\\n      }\\n    `\\n  )\\n\\n  if (result.errors) {\\n    reporter.panicOnBuild(`Error while running GraphQL query.`)\\n    return\\n  }\\n\\n  // ...\\n\\n  // Create blog-list pages\\n  // highlight-start\\n  const posts = result.data.allMarkdownRemark.edges\\n  const postsPerPage = 6\\n  const numPages = Math.ceil(posts.length / postsPerPage)\\n\\n  Array.from({ length: numPages }).forEach((_, i) => {\\n    createPage({\\n      path: i === 0 ? `/blog` : `/blog/${i + 1}`,\\n      component: path.resolve(\\\"./src/templates/blog-list-template.js\\\"),\\n      context: {\\n        limit: postsPerPage,\\n        skip: i * postsPerPage,\\n        numPages,\\n        currentPage: i + 1,\\n      },\\n    })\\n  })\\n  // highlight-end\\n}\\n\\nexports.onCreateNode = ({ node, actions, getNode }) => {\\n  const { createNodeField } = actions\\n  if (node.internal.type === `MarkdownRemark`) {\\n    const value = createFilePath({ node, getNode })\\n    createNodeField({\\n      name: `slug`,\\n      node,\\n      value,\\n    })\\n  }\\n}\\n\")), mdx(\"p\", null, \"The code above will create an amount of pages that is based on the total number of posts. Each page will list \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"postsPerPage\"), \"(6) posts, until there are less than \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"postsPerPage\"), \"(6) posts left.\\nThe path for the first page is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/blog\"), \", following pages will have a path of the form: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/blog/2\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/blog/3\"), \", etc.\"), mdx(\"h3\", {\n    \"id\": \"other-resources\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#other-resources\",\n    \"aria-label\": \"other resources permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Other resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Follow this \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://nickymeuleman.netlify.com/blog/gatsby-pagination/\"\n  }), \"step-by-step tutorial\"), \" to add links to the previous/next page and the traditional page-navigation at the bottom of the page\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"See \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/NickyMeuleman/gatsby-paginated-blog\"\n  }), \"gatsby-paginated-blog\"), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://nickymeuleman.github.io/gatsby-paginated-blog/\"\n  }), \"(demo)\"), \" for an extension of the official \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby-starter-blog\"\n  }), \"gatsby-starter-blog\"), \" with pagination in place\"))));\n}\n;\nMDXContent.isMDXComponent = true;",
        "excerpt": "A page displaying a list of content gets longer as the amount of content grows.\nPagination is the technique of spreading that content across…",
        "timeToRead": 1,
        "tableOfContents": {
          "items": [
            {
              "url": "#example",
              "title": "Example"
            },
            {
              "url": "#other-resources",
              "title": "Other resources"
            }
          ]
        },
        "fields": {
          "slug": "/docs/adding-pagination/",
          "anchor": "adding-pagination"
        },
        "frontmatter": {
          "title": "Adding pagination",
          "overview": null,
          "issue": null,
          "disableTableOfContents": null,
          "tableOfContentsDepth": null
        },
        "parent": {
          "__typename": "File",
          "relativePath": "docs/adding-pagination.md"
        }
      }
    },
    "pageContext": {
      "isCreatedByStatefulCreatePages": false,
      "slug": "/docs/adding-pagination/",
      "prev": {
        "title": "Adding Tags and Categories to Blog Posts",
        "link": "/docs/adding-tags-and-categories-to-blog-posts/",
        "breadcrumbTitle": "Blog Tags and Categories"
      },
      "next": {
        "title": "Adding Comments",
        "link": "/docs/adding-comments/",
        "breadcrumbTitle": "Comments"
      }
    }
  },
  "query": "query usersMisiekDevGatsbyWwwSrcTemplatesTemplateDocsMarkdownJs2546709735(\n  $path: String!\n) {\n  mdx(fields: {slug: {eq: $path}}) {\n    body\n    excerpt\n    timeToRead\n    tableOfContents\n    fields {\n      slug\n      anchor\n    }\n    frontmatter {\n      title\n      overview\n      issue\n      disableTableOfContents\n      tableOfContentsDepth\n    }\n    ...MarkdownPageFooterMdx\n  }\n}\n\nfragment MarkdownPageFooterMdx on Mdx {\n  parent {\n    __typename\n    ... on File {\n      relativePath\n    }\n  }\n}\n"
}